#!/usr/bin/env swipl
%
%  PFC is a language extension for prolog.. there is so much that can be done in this language extension to Prolog
%
% Dec 13, 2035
% Douglas Miles

:- module(sanity_attvar_11,[printAll/1]).

:- use_module(library(logicmoo_base)).



:- debug_logicmoo(_).
:- nodebug_logicmoo(http(_)).
:- debug_logicmoo(logicmoo(_)).
:- mpred_trace_exec.

:- abolish(not_666/1).
:- dynamic(not_666/1).


:- printAll(( ((dif(666,X),assert_i(not_666(X)))))).

:- in_cmt(listing(not_666)).

% :- dynamic sanity_attvar_11:not_666/1.
%
% sanity_attvar_11:not_666(A) :-
%       attr_bind([dif(A, 666)], true).


:- printAll(( ((dif(666,X),clause_asserted_i(not_666(X)))))).

:- printAll(( ((dif(666,X),dif(666,X), assert_i(not_666x2(X)))))).

:- printAll(( ((dif(666,X),dif(666,X), clause_asserted_i(not_666x2(X)))))).

:- printAll(( ((dif(5,X),dif(666,X), \+ clause_asserted_i(not_666(X)))))).

:- printAll(( ((dif(5,X),\+ clause_asserted_i(not_666(X))))  )).

:- printAll(( ((\+ clause_asserted_i(not_666(666)))))).

:- printAll(( ((\+ clause_asserted_i(not_666(_)))))).

:- printAll(( not_666(5)  )).

:- printAll(call(( not_666(SOME), var(SOME), SOME=5 ))).

:- printAll(( not_666(SOME), var(SOME),  \+ SOME=666)).

:- printAll(( \+ not_666(666)  )).

:- printAll(( ((\+ clause_asserted_i(not_666(5)))))).


