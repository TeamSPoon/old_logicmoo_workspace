#!/usr/bin/env swipl
%
%  PFC is a language extension for prolog.. there is so much that can be done in this language extension to Prolog
%
% Dec 13, 2035
% Douglas Miles

:- module(sanity_attvar_10,[]).

:- use_module(library(logicmoo_base)).

:- debug_logicmoo(_).
:- nodebug_logicmoo(http(_)).
:- debug_logicmoo(logicmoo(_)).
:- mpred_trace_exec.
:- begin_pfc.

:- dynamic(sk_out/1).
:- dynamic(sk_in/1).


% :- process_this_script.

:- read_attvars(true).

sk_in(fl(X,Y,X,Y)).
% :- rtrace,trace.
sk_in(_DUNNO).
% :-notrace,nortrace
sk_in(avar([vn='ExIn',sk='SKF-666'])).

:- listing([pt/2,sk_in/1,sk_out/1]).

% _DUNNO for now we fail this test
:- must(((ain(sk_in(_DUNNO)),predicate_property(sk_in(_),number_of_clauses(CC)),CC==3))).
:- must((findall(FEx,(clause_u(sk_in(FEx),_,_),wdmsg(sk_in(FEx))),L),length(L,THREE),THREE=3)).

sk_in(Ex)==>sk_out(Ex).

:- must((sk_out(FOUND),get_attr(FOUND,sk,What),What='SKF-666')),dmsg(fOUND=FOUND).
:- must((findall(Ex,(clause_u(sk_out(Ex),_,_),wdmsg(sk_out(Ex))),L),length(L,THREE),THREE=3)).

