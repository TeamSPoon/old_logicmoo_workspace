/* 
-*- mode: md;-*- 
vim: set filetype=md:
*/
/*  special module hooks into the logicmoo engine allow
%   clif syntax to be recocogized via our CycL/KIF handlers 
% 
% Logicmoo Project: A LarKC Server written in Prolog
% Maintainer: Douglas Miles
% Dec 13, 2035
%
% If you've come here looking for the clif examples please follow this link
%
%  https://github.com/TeamSPoon/PrologMUD/blob/master/runtime/try_logicmoo_examples.md
*/


:- set_fileAssertMt(baseKB).
% :- set_defaultAssertMt(baseKB).

:-dynamic((if/2,iif/2)).

:- if(current_prolog_flag(logicmoo_modules,default)).
:- module(common_logic_clif,[]).
:- endif.

% we ensure we are in "pfc" consultation mode (so the syntax rules will define correctly)
:- file_begin(pfc).



% whenever we know about clif we''ll use the prolog forward chainging system
% this is broken down to the next 6 clauses
/*
(clif(CLIF) ==> 
   ({ kif_to_pfc(CLIF,PROLOG)},
      % this consequent asserts the new rules
      PROLOG,{slow_sanity(is_entailed_u(CLIF))})).
*/


:- dynamic(pfclog/1).
:- dynamic(boxlog/1).
:- dynamic(clif/1).

arity(clif,1).
arity(boxlog,1).
arity(pfclog,1).
 ==>(hybrid_support(clif,1)).
 ==>(hybrid_support(boxlog,1)).
 ==>(hybrid_support(pfclog,1)).



%((clif(CLIF)) ==> ({delistify_last_arg(CLIF,kif_to_boxlog,BOXLOG),mpred_run_pause},boxlog(BOXLOG),{mpred_run_resume,deterministic(true),mpred_run,slow_sanity(is_entailed_u(CLIF))})).
%((clif(CLIF),{delistify_last_arg(CLIF,kif_to_boxlog,BOXLOG)}) ==> (boxlog(BOXLOG),{mpred_run,mpred_retry(must(is_entailed_u(CLIF)))})). % slow_sanity
((clif(CLIF)) ==> ({delistify_last_arg(CLIF,kif_to_boxlog,BOXLOG)},boxlog(BOXLOG),{must(is_entailed_u(BOXLOG))})).

(boxlog(BOXLOG),{delistify_last_arg(BOXLOG,boxlog_to_pfc,PROLOG)}) ==> pfclog(PROLOG).
% pfclog(PROLOG) ==> {without_running(ain(PROLOG,(pfclog(PROLOG),ax)))}.
% {all_different_head_vals(PROLOG)},
pfclog(PROLOG) ==> PROLOG.


/*

% these next 6 clauses is now accomplished by the previous 3 clauses

(clif(CLIF),{member_ele(CLIF,E)}) ==> clif1(E).
(clif1(CLIF),{kif_to_boxlog(CLIF,PROLOG)}) ==> boxlog(PROLOG).

(boxlog(CLIF),{member_ele(CLIF,E)}) ==> boxlog1(E).
(boxlog1(CLIF),{boxlog_to_pfc(CLIF,PROLOG)}) ==> pfclog(PROLOG).

(pfclog(CLIF),{member_ele(CLIF,E)}) ==> pfclog1(E).
(pfclog1(PROLOG)==>(PROLOG,{is_entailed_u(PROLOG)})).

*/


% we create code syntax listeners for [if,iff,clif_forall,all,exists]/2s
({is_clif(CLIF),kb_dynamic(CLIF)} ==>
  (CLIF/is_clif(CLIF) ==> clif(CLIF))).

% (CLIF/is_kif_clause(CLIF) ==> clif(CLIF)).


/*
(CLIF/is_kif_clause(CLIF) ==> 
   ({ kif_to_pfc(CLIF,PROLOG)},
      % this consequent asserts the new rules
      PROLOG,{slow_sanity(is_entailed_u(CLIF))})).
*/


end_of_file.

% If you've come here looking for the clif examples please follow this link
% <a href="https://github.com/TeamSPoon/PrologMUD/blob/master/runtime/try_logicmoo_examples.md">https://github.com/TeamSPoon/PrologMUD/blob/master/runtime/try_logicmoo_examples.md</a>


:- if(baseKB:startup_option(datalog,sanity);baseKB:startup_option(clif,sanity)).
:- file_begin(pfc).
:- include(try_logicmoo_examples).
:- endif.

