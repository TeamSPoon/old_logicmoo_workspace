
:- dynamic(lmconf:mpred_is_impl_file/2).
:- multifile(lmconf:mpred_is_impl_file/2).
:- system_module.

/*
:- multifile((user:term_expansion/2,system:term_expansion/2)).
:- dynamic((user:term_expansion/2,system:term_expansion/2)).
:- multifile((user:goal_expansion/2,system:goal_expansion/2)).
:- dynamic((user:goal_expansion/2,system:goal_expansion/2)).



:- multifile
  %      user:'$pldoc'/4,
	user:portray/1,
	user:prolog_list_goal/1,
	user:prolog_predicate_name/2,
	user:prolog_clause_name/2,
        lmconf:mpred_is_impl_file/2.
:- dynamic
	user:portray/1,
%	user:'$pldoc'/4,
        lmconf:mpred_is_impl_file/2.

:- (current_prolog_flag(xref,true)->true;(prolog_load_context(source,F),
   initialization((
   lmconf:mpred_is_impl_file(F)->true;assertz(lmconf:mpred_is_impl_file(F)))))).
*/

% ===================================================================
% Creates a warning if we are in the incorrect context
% ===================================================================
/*
:- if(current_predicate(lmcode:combine_logicmoo_utils/0)).
:- multifile(lmconf:logicmoo_utils_separate/0).
lmconf:logicmoo_utils_separate.
:- set_prolog_flag(generate_debug_info, true).
:- else.
:- \+ lmconf:logicmoo_utils_separate.
:- endif.
*/

% :- style_check(-discontiguous).
% :- style_check(-singleton).
% % :- style_check(-atom).
/*

:- dynamic user:file_search_path/2.
:- multifile user:file_search_path/2.
user:file_search_path(pack, '../../../../').
:- attach_packs.
:- initialization(attach_packs).
:- use_module(logicmoo(logicmoo_utils)).

add_pack_dir(UpUp):- prolog_load_context(directory,Dir),   
   DirFor = logicmoo,
   (( \+ user:file_search_path(DirFor,Dir)) ->asserta(user:file_search_path(DirFor,Dir));true),
   absolute_file_name(UpUp,Y,[relative_to(Dir),file_type(directory)]),
   (( \+ user:file_search_path(pack,Y)) ->asserta(user:file_search_path(pack,Y));true),
   attach_packs.

*/

/*
 :- use_module(logicmoo_util_first).
 :- use_module(logicmoo_util_database).
 :- use_module(logicmoo_util_dumpst).
 :- use_module(logicmoo_util_rtrace).
 :- use_module(logicmoo_util_catch).
 :- use_module(logicmoo_util_with_assertions).
 :- use_module(logicmoo_util_loop_check).
 :- use_module(logicmoo_util_dmsg).
 :- use_module(logicmoo_util_bugger).
 :- use_module(logicmoo_util_ctx_frame).
 :- use_module(logicmoo_util_filestreams).
 :- use_module(logicmoo_util_filesystem).
 :- use_module(logicmoo_util_multivar).
 :- use_module(logicmoo_util_no_repeats).
 :- use_module(logicmoo_util_preddefs).
 :- use_module(logicmoo_util_prolog_frames).
 :- use_module(logicmoo_util_prolog_streams).
 :- use_module(logicmoo_util_term_listing).
 :- use_module(logicmoo_util_terms).
 :- use_module(logicmoo_util_strings).
*/








