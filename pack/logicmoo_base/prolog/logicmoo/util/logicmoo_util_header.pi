
:- dynamic(lmconf:mpred_is_impl_file/1).
:- multifile(lmconf:mpred_is_impl_file/1).
:- system_module.
:- if( \+ current_predicate(system:setup_call_cleanup_each/3)).
:- use_module(system:library('logicmoo/util/logicmoo_util_supp.pl')).
:- endif.



:- system:thread_local(t_l: current_local_why/ 2).
:- system:thread_local(t_l: current_why_source/ 1).
:- system:thread_local(t_l: last_source_file/ 1).
:- system:thread_local(t_l: last_src_loc/ 2).
:- system:thread_local(t_l: testing_for_release/ 1).
:- system:thread_local(t_l: thread_local_current_main_error_stream/ 1).
:- system:thread_local(tlbugger: attributedVars/ 0).
:- system:thread_local(tlbugger: dmsg_hook/ 1).
:- system:thread_local(tlbugger: dmsg_match/ 2).
:- system:thread_local(tlbugger: dont_skip_bugger/ 0).
:- system:thread_local(tlbugger: has_auto_trace/ 1).
:- system:thread_local(tlbugger: ifCanTrace/ 0).
:- system:thread_local(tlbugger: ifWontTrace/ 0).
:- system:thread_local(tlbugger: in_dmsg/ 1).
:- system:thread_local(tlbugger: is_with_dmsg/ 1).
:- system:thread_local(tlbugger: last_used_color/ 1).
:- system:thread_local(tlbugger: no_buggery_tl/ 0).
:- system:thread_local(tlbugger: no_colors/ 0).
:- system:thread_local(tlbugger: no_slow_io/ 0).
:- system:thread_local(tlbugger: old_no_repeats/ 0).
:- system:thread_local(tlbugger: plain_attvars/ 0).
:- system:thread_local(tlbugger: rbuild_pred_impl_cache/ 2).
:- system:thread_local(tlbugger: rbuild_pred_impl_cache_pp/ 2).
:- system:thread_local(tlbugger: rtracing/ 0).
:- system:thread_local(tlbugger: saved_current_atom/ 2).
:- system:thread_local(tlbugger: show_must_go_on/ 0).
:- system:thread_local(tlbugger: skip_bugger/ 0).
:- system:thread_local(tlbugger: skip_use_slow_sanity/ 0).
:- system:thread_local(tlbugger: skipDMsg/ 0).
:- system:thread_local(tlbugger: skipDumpST9/ 0).
:- system:thread_local(tlbugger: skipMust/ 0).
:- system:thread_local(tlbugger: wastracing/ 0).

:- system:export(t_l: current_local_why/ 2).
:- system:export(t_l: current_why_source/ 1).
:- system:export(t_l: last_source_file/ 1).
:- system:export(t_l: last_src_loc/ 2).
:- system:export(t_l: testing_for_release/ 1).
:- system:export(t_l: thread_local_current_main_error_stream/ 1).
:- system:export(tlbugger: attributedVars/ 0).
:- system:export(tlbugger: dmsg_hook/ 1).
:- system:export(tlbugger: dmsg_match/ 2).
:- system:export(tlbugger: dont_skip_bugger/ 0).
:- system:export(tlbugger: has_auto_trace/ 1).
:- system:export(tlbugger: ifCanTrace/ 0).
:- system:export(tlbugger: ifWontTrace/ 0).
:- system:export(tlbugger: in_dmsg/ 1).
:- system:export(tlbugger: is_with_dmsg/ 1).
:- system:export(tlbugger: last_used_color/ 1).
:- system:export(tlbugger: no_buggery_tl/ 0).
:- system:export(tlbugger: no_colors/ 0).
:- system:export(tlbugger: no_slow_io/ 0).
:- system:export(tlbugger: old_no_repeats/ 0).
:- system:export(tlbugger: plain_attvars/ 0).
:- system:export(tlbugger: rbuild_pred_impl_cache/ 2).
:- system:export(tlbugger: rbuild_pred_impl_cache_pp/ 2).
:- system:export(tlbugger: rtracing/ 0).
:- system:export(tlbugger: saved_current_atom/ 2).
:- system:export(tlbugger: show_must_go_on/ 0).
:- system:export(tlbugger: skip_bugger/ 0).
:- system:export(tlbugger: skip_use_slow_sanity/ 0).
:- system:export(tlbugger: skipDMsg/ 0).
:- system:export(tlbugger: skipDumpST9/ 0).
:- system:export(tlbugger: skipMust/ 0).
:- system:export(tlbugger: wastracing/ 0).

:- system:import(t_l: current_local_why/ 2).
:- system:import(t_l: current_why_source/ 1).
:- system:import(t_l: last_source_file/ 1).
:- system:import(t_l: last_src_loc/ 2).
:- system:import(t_l: testing_for_release/ 1).
:- system:import(t_l: thread_local_current_main_error_stream/ 1).
:- system:import(tlbugger: attributedVars/ 0).
:- system:import(tlbugger: dmsg_hook/ 1).
:- system:import(tlbugger: dmsg_match/ 2).
:- system:import(tlbugger: dont_skip_bugger/ 0).
:- system:import(tlbugger: has_auto_trace/ 1).
:- system:import(tlbugger: ifCanTrace/ 0).
:- system:import(tlbugger: ifWontTrace/ 0).
:- system:import(tlbugger: in_dmsg/ 1).
:- system:import(tlbugger: is_with_dmsg/ 1).
:- system:import(tlbugger: last_used_color/ 1).
:- system:import(tlbugger: no_buggery_tl/ 0).
:- system:import(tlbugger: no_colors/ 0).
:- system:import(tlbugger: no_slow_io/ 0).
:- system:import(tlbugger: old_no_repeats/ 0).
:- system:import(tlbugger: plain_attvars/ 0).
:- system:import(tlbugger: rbuild_pred_impl_cache/ 2).
:- system:import(tlbugger: rbuild_pred_impl_cache_pp/ 2).
:- system:import(tlbugger: rtracing/ 0).
:- system:import(tlbugger: saved_current_atom/ 2).
:- system:import(tlbugger: show_must_go_on/ 0).
:- system:import(tlbugger: skip_bugger/ 0).
:- system:import(tlbugger: skip_use_slow_sanity/ 0).
:- system:import(tlbugger: skipDMsg/ 0).
:- system:import(tlbugger: skipDumpST9/ 0).
:- system:import(tlbugger: skipMust/ 0).
:- system:import(tlbugger: wastracing/ 0).





/*
:- multifile((user:term_expansion/2,system:term_expansion/2)).
:- dynamic((user:term_expansion/2,system:term_expansion/2)).
:- multifile((user:goal_expansion/2,system:goal_expansion/2)).
:- dynamic((user:goal_expansion/2,system:goal_expansion/2)).

:- multifile
  %      user:'$pldoc'/4,
	user:portray/1,
	user:prolog_list_goal/1,
	user:prolog_predicate_name/2,
	user:prolog_clause_name/2,
        lmconf:mpred_is_impl_file/1.
:- dynamic
	user:portray/1,
%	user:'$pldoc'/4,
        lmconf:mpred_is_impl_file/1.

*/
:- thread_local(tlbugger:ifHideTrace/0).
:- thread_local(tlbugger:tl_always_show_dmsg).

:- (current_prolog_flag(xref,true)->true;
  (prolog_load_context(source,F),
   (lmconf:mpred_is_impl_file(F)->true;assertz(lmconf:mpred_is_impl_file(F))),
   initialization((lmconf:mpred_is_impl_file(F)->true;assertz(lmconf:mpred_is_impl_file(F)))))).

% ===================================================================
% Creates a warning if we are in the incorrect context
% ===================================================================
/*
:- if(current_predicate(lmcode:combine_logicmoo_utils/0)).
:- multifile(lmconf:logicmoo_utils_separate/0).
lmconf:logicmoo_utils_separate.
:- set_prolog_flag(generate_debug_info, true).
:- else.
:- \+ lmconf:logicmoo_utils_separate.
:- endif.
*/

% :- style_check(-discontiguous).
% :- style_check(-singleton).
% % :- style_check(-atom).
/*

:- dynamic user:file_search_path/2.
:- multifile user:file_search_path/2.
user:file_search_path(pack, '../../../../').
:- attach_packs.
:- initialization(attach_packs).
:- use_module(logicmoo(logicmoo_utils)).

add_pack_dir(UpUp):- prolog_load_context(directory,Dir),   
   DirFor = logicmoo,
   (( \+ user:file_search_path(DirFor,Dir)) ->asserta(user:file_search_path(DirFor,Dir));true),
   absolute_file_name(UpUp,Y,[relative_to(Dir),file_type(directory)]),
   (( \+ user:file_search_path(pack,Y)) ->asserta(user:file_search_path(pack,Y));true),
   attach_packs.

*/

/*
 :- use_module(logicmoo_util_first).
 :- use_module(logicmoo_util_database).
 :- use_module(logicmoo_util_dumpst).
 :- use_module(logicmoo_util_rtrace).
 :- use_module(logicmoo_util_dmsg).
 :- use_module(logicmoo_util_bugger).
 :- use_module(logicmoo_util_ctx_frame).
 :- use_module(logicmoo_util_filestreams).
 :- use_module(logicmoo_util_filesystem).
 :- use_module(logicmoo_util_multivar).
 :- use_module(logicmoo_util_no_repeats).
 :- use_module(logicmoo_util_preddefs).
 :- use_module(logicmoo_util_prolog_frames).
 :- use_module(logicmoo_util_prolog_streams).
 :- use_module(logicmoo_util_term_listing).
 :- use_module(logicmoo_util_terms).
 :- use_module(logicmoo_util_strings).
*/






