/** <module> 
% All modules are declared here so that this next lines dont have to be pasted into every file.
% Since this list will need at least 160 entries to cover the obj classes rooms and commands, 
% we add the modules here to not waste 160^2 lines of text and having to not 
% update 160+ files whenever a new module is used
%
% Logicmoo Project PrologMUD: A MUD server written in Prolog
% Maintainer: Douglas Miles
% Dec 13, 2035
%
*/


:- multifile(system:term_expansion/2).
:- multifile(system:goal_expansion/2).
:- multifile(user:term_expansion/2).
:- multifile(user:goal_expansion/2).
:- multifile '$si$':'$was_imported_kb_content$'/2.
:- dynamic '$si$':'$was_imported_kb_content$'/2.
:- discontiguous('$si$':'$was_imported_kb_content$'/2).


:- op(500,fx,'~').
:- op(1050,xfx,'<==>').
:- op(1050,xfx,('<-')).
:- op(1200,fx,('=>')).
:- op(1200,fx,('==>')).
:- op(1100,fx,('nesc')).
:- op(1150,xfx,('::::')).
:- op(300,fx,'-').
:- op(600,yfx,'&'). 
:- op(600,yfx,'v').
:- op(1075,xfx,'<-').
:- op(1075,xfx,'<-').
:- op(1070,xfx,'=>').
:- op(1070,xfx,'<=').
:- op(1070,xfx,'<=>').
:- op(1100,xfx,('<==>')).
:- op(1100,xfx,('==>')).
:- op(350,xfx,'xor').
:- op(1070,xfx,user:'=>').
:- op(300,fx,user:'~').
:- op(300,fx,user:'-').
:- op(400,yfx,user:'&'). 
:- op(500,yfx,user:'v').
:- op(1075,xfx,user:'<-').
:- op(1075,xfx,user:'<==>').
:- op(1100,xfx,user:'==>').
:- op(350,xfx,user:'xor').
:- op(1100,fx,(was_shared_multifile)).
 
%:- multifile(user_db:grant_openid_server/2).

% HOOKS

:- forall(member(M:F/A,[

kbp:bt/3, %kbp
kbp:nt/4, %kbp
kbp:pk/4, %kbp
kbp:pt/3, %kbp
kbp:spft/5, %kbp
kbp:tms/1, %kbp
kbp:hs/1, %kbp
kbp:qu/3, %kbp
kbp:sm/1, %kbp
kbp:hs/2, %kbp
lmconf:mpred_select/2,
lmconf:after_mpred_load/0,
user:portray/1, %user
% user:prolog_list_goal/1, %user
% user:prolog_predicate_name/2, %user
% user:prolog_clause_name/2, %user
el_assertions:el_holds/4, %el_assertions
el_assertions:el_holds/5, %el_assertions
el_assertions:el_holds/6, %el_assertions
el_assertions:el_holds/7, %el_assertions
el_assertions:el_holds/8, %el_assertions
el_assertions:el_holds/9, %el_assertions
el_assertions:el_holds/10, %el_assertions
el_assertions:el_holds/11, %el_assertions
el_assertions:el_holds/12, %el_assertions
el_assertions:el_holds/13, %el_assertions
el_assertions:el_holds/14, %el_assertions
el_assertions:el_holds_pred_impl/1, %el_assertions
el_assertions:is_cyckb_t_pred/2, %el_assertions
lmconf:decl_coerce/3, 
lmconf:hook_coerce/3, 
lmconf:hook_mpred_listing/1,
lmconf:hook_one_minute_timer_tick/0,
lmconf:hook_one_second_timer_tick/0, 
lmconf:loaded_file_world_time/3, 
lmconf:module_local_init/0,
lmconf:mpred_hook_rescan_files/0, 
lmconf:mpred_provide_read_attributes/3, 
lmconf:mpred_provide_setup/4, 
lmconf:mpred_provide_storage_clauses/3, 
lmconf:mpred_provide_storage_op/2, 
lmconf:mpred_provide_write_attributes/2, 
lmconf:mpred_skipped_module/1, 
lmconf:never_reload_file/1, 
lmconf:loaded_mpred_file/2,
lmconf:pfcManageHybrids/0, 
lmconf:sanity_test/0, 
lmconf:isa_pred_now_locked/0,
lmconf:type_action_info/3,
lmconf:agent_call_command/2,
lmconf:mud_test/2,
lmconf:sanity_test/0,
lmconf:regression_test/0,
lmconf:feature_test/0,
mpred_online:semweb_startup/0,
system:goal_expansion/2,
user:prolog_load_file/2, 
user:term_expansion/2
]),(multifile(M:F/A),dynamic(M:F/A),discontiguous(M:F/A))).
% ================================================
% Thread Locals
% ================================================
% DYN KB
:- thread_local(repl_to_string/2).
:- thread_local(repl_writer/2).

:- thread_local(t_l:agenda_slow_op_do_prereqs/0).
:- thread_local(t_l:agenda_suspend_scans/0).
:- thread_local(t_l:agent_current_action/2).
:- thread_local(t_l:already_in_file_term_expansion/0).
:- thread_local(t_l:assert_op_override/1).
:- thread_local(t_l:caller_module/2).
:- thread_local(t_l:consulting_sources/0).
:- thread_local(t_l:current_pttp_db_oper/1).
:- thread_local(t_l:deduceArgTypes/1).
:- thread_local(t_l:disable_px /0).
:- thread_local(t_l:enable_src_loop_checking/0).
:- thread_local(t_l:in_dynamic_reader/1).
:- thread_local(t_l:in_prolog_source_code/0).
:- thread_local(t_l:infAssertedOnly/1).
:- thread_local(t_l:infInstanceOnly/1).
:- thread_local(t_l:infMustArgIsa/0).
:- thread_local(t_l:infSecondOrder/0).
:- thread_local(t_l:infSkipArgIsa/0).
:- thread_local(t_l:infSkipFullExpand/0).
:- thread_local(t_l:infThirdOrder/0).
:- thread_local(t_l:into_form_code/0).
:- thread_local(t_l:inVoProp/0).
:- thread_local(t_l:is_calling/0).
:- thread_local(t_l:mpred_loads_file/0).
:- thread_local(t_l:mpred_mpred_add_loaded/0).
:- thread_local(t_l:mpred_opcall/2).
:- thread_local(t_l:no_arg_type_error_checking/0).
:- thread_local(t_l:noDBaseHOOKS/1).
:- thread_local(t_l:noDBaseMODs/1).
:- thread_local(t_l:noRandomValues/1).
:- thread_local(t_l:print_mode/1).
:- thread_local(t_l:side_effect_buffer/3).
:- thread_local(t_l:side_effect_ok/0).
:- thread_local(t_l:tracing80/0).
:- thread_local(t_l:use_side_effect_buffer/0).
:- thread_local(t_l:useAltPOS/0).
:- thread_local(t_l:useOnlyExternalDBs/0).
:- thread_local(t_l:usePlTalk/0).
:- thread_local(t_l:verify_side_effect_buffer/0).
:- thread_local(t_l:with_callMPred/1).
:- thread_local(t_l:infForward).
:- thread_local(t_l:into_form_code/0).
:- thread_local(t_l:infSupertypeName/0).
:- thread_local(t_l:loading_mpred_file/2).


:- style_check(-singleton).
:- set_prolog_flag(generate_debug_info, true).


:- use_module(logicmoo(util/logicmoo_util_preddefs)).
:- use_module(logicmoo(mpred/mpred_loader)).
:- use_module(logicmoo(mpred/mpred_userkb)).

