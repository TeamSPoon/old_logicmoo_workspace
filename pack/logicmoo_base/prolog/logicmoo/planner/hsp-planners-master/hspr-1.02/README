This is Release 1.01 of the Heuristic Search Planner -- Regression Version (HSP-R).



HISTORY
=======

This release, 1.11, fixes some bugs about default values
of arguments, name of arguments, and packing of the software.
The goal is to make the HSP packing uniform with the HSPR packing.

This release, 1.1, just changes the implementation
of the heuristic function by making it significantly faster. 
As a result, the planner runs several times faster than before.



HSP-R
=====

HSP-R does Strips planning by heuristic search from the
goal situation to the initial situation.
The heuristic is extracted from the Strips
representation of the problem, and is plugged into 
Weighted Best-First Algorithm with a greedy component.
A paper describing HSP-R, and a note describing HSP can 
be found in the ./hspr/docs directory (see below).
This document describes the installation procedure,
the contents of the distribution, and the test suite.



REQUIREMENTS
============

In order to install/solve problems you will need a standard C compiler
(like gcc) and some general unix tools: make, sed, nawk, ln, etc. 
Be sure to have these commands in your path.



QUICK INSTALLATION
==================

1) unpack distribution files, for example

    $ gzip -dc hspr-1.01.tar.gz | tar -xvf -

2) set the var HSPRHOME to the hsp-r directory, for example (using ksh)

    $ export HSPRHOME=`pwd`/hspr-1.01

3) run "make compile" in $HSPRHOME to compile parser and planner, 

    $ cd $HSPRHOME; make compile



RUNNING SOME SAMPLES
==================== 

The sample problems are in the pddl directories. 
Here is an example for solving some of them:

1) change to the logistics problems, 

    $ cd $HSPHOME/pddl/logistics

2) compile the problems,

    $ make compile

3) solve the problems

    $ make solve

The results are in the file "solutions.all".



THE PLANNER
===========

In order to run now the planner you must define the environment
variable HSPRHOME with the absolute path of the ./hspr directory
(e.g., in bash you can say "export HSPRHOME=/home/john/hspr").
After that, you can move to any pddl directory (e.g., pddl/blocks-world)
and execute the command "make compile". This command builds all problems
specified in the PROBLEMS file; to apply the planner over them use "make solve".
The plan and timing information are left in the file "solutions.all".
Edit the PROBLEMS file in order to specify different subsets of problems.

There are two flags that modify the behaviour of the planning
search algorithm:

  1) "-w" that is used to set the weight for the heuristic function, and

  2) "-v" that sets the verbosity mode (default: 1).

If you want to solve the problems with one or more options you
can use the environment variable "HSPRFLAGS". For example, use a
weight of 2 and print no plan (verbosity equal to 0):

   $ export HSPRFLAGS="-w 2 -v 0"
   $ make solve


THE PDDL PARSER
===============

The parser translates  the planning problems expressed in PDDL (as 
problem and domain definitions) into a set of C programs. In this way 
we get a fast implementation of the planner tailored to that
particular planning instance. To run the planner, these C files must 
be first compiled and linked. This is done in the "make compile".

One object file is always linked ./hspr/planner.o which
contain planner independent code (the general heuristic search algorithm
and some high-level functions for computing the heuristic values).  
The C files generated by the parser have the extensions .ope.c, 
.fac.c, and .tab.c.


Documentation
=============

Some documentation can be found in ./hspr/docs.


Comments and suggestions can be addressed to bonet@usb.ve and
hector@usb.ve.


Enjoy.

Blai and Hector
