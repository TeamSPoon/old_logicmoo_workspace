(define (domain blocksworld)
  (:requirements :strips)
  (:action move
     :parameters (?b ?x ?y)
     :precondition (and (block ?b) (table ?x) (table ?y) (on ?b ?x) (clear ?b) (clear ?y))
     :effect (not (on ?b ?x) (on ?b ?y) (clear ?x) not (clear ?y))
     )
  (:action stack2
     :parameters (?a ?x ?b ?y)
     :precondition (and (block ?a) (block ?b) (table ?x) (table ?y) (clear ?a) (clear ?b) (on ?a ?x) (on ?b ?y))
     :effect (and (on ?a ?b) not (on ?a ?x) not (clear ?b) (clear ?x))
     )
  (:action stack3
     :parameters (?a ?x ?b ?c ?y)
     :precondition (and (block ?a) (block ?b) (block ?c) (table ?x) (table ?y) (clear ?a) (clear ?b) (on ?a ?x) (on ?b ?c) (on ?c ?y))
     :effect (and (on ?a ?b) not (on ?a ?x) not (clear ?b) (clear ?x))
     )
  (:action unstack2
     :parameters (?a ?b ?x ?y)
     :precondition (and (block ?a) (block ?b) (table ?x) (table ?y) (on ?b ?x) (on ?a ?b) (clear ?a) (clear ?y))
     :effect (and (on ?a ?y) not (on ?a ?b) (clear ?b) (clear ?a) not (clear ?y))
     )
  (:action unstack3
     :parameters (?a ?b ?c ?x ?y)
     :precondition (and (block ?a) (block ?b) (block ?c) (table ?x) (table ?y) (on ?c ?x) (on ?b ?c) (on ?a ?b) (clear ?a) (clear ?y))
     :effect (and (on ?a ?y) not (on ?a ?b) (clear ?b) (clear ?a) not (clear ?y))
     )
)