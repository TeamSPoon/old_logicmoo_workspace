% This file tests newExtTerm/1 and retractallExtTerm/1 for
% hasAttr_ext, newExtTerm/1 for minAttr_ext, and checks cross
% dependencies for minAttr_ext and hasAttr_ext. 

:- [altcdf].
:- [test_utils].

:- import load_extensional_facts/1 from cdf_io.
:- import update_all_components/2 from cdf_comps_noshare.
:- import load_component/3 from cdf_comps_share.
:- import retractallExtTerm/1,abolish_cdf_tables/0 from cdf_init_cdf.
:- import allAttr/3, hasAttr/3, classHasAttr/3, minAttr/4, maxAttr/4, 
	 coversAttr/3,
	 newExtTerm/1 from cdf_init_cdf.

loadfacts:- 
	load_extensional_facts('type0_testdir').

testreturns:- 
	loadfacts,
	testhasAttrreturns_1,nl,
	testhasAttrreturns_2,nl,
	testhasAttrreturns_3,nl,
	testhasAttrreturns_4.

%------------------------------------------------------------------------------------------
/*       Baseline check of hasAttr/3: return
         hasAttr(oid(o2,test),rid(r4,test),oid(o12,test))
         hasAttr(oid(o2,test),rid(r2,test),oid(o12,test))
         hasAttr(oid(o2,test),rid(r1,test),cid(c12,test))
         hasAttr(oid(o2,test),rid(prod(rid(r2,test),rid(r2,test)),test),cid(c12,test)) */
testhasAttrreturns_1:- 
	test_display(hasAttr(oid(o2,test),X,_Y)).

%------------------------------------------------------------------------------------------

/*          below the following bindings should be returned.
            hasAttr(oid(o2,test),rid(r4,test),oid(o13,test))
            hasAttr(oid(o2,test),rid(r4,test),oid(o12,test))
            hasAttr(oid(o2,test),rid(r1,test),oid(o12,test))
            hasAttr(oid(o2,test),rid(prod(rid(r2,test),rid(r2,test)),test),cid(c12,test))
Note that  X = rid(r2,test) Y = oid(o12,test) is implied by          
               X = rid(r1,test) Y = oid(o12,test); */
testhasAttrreturns_2:- 
%	add an object in a class that already has a hasAttr
	newExtTerm(hasAttr_ext(oid(o2,test),rid(r1,test),oid(o12,test))),
%	add an object not in a class that already has a hasAttr
	newExtTerm(hasAttr_ext(oid(o2,test),rid(r4,test),oid(o13,test))),
	test_display(hasAttr(oid(o2,test),X,_Y)).

%------------------------------------------------------------------------------------------

/*  bindings should be the same as testhasAttrreturns_1 */
testhasAttrreturns_3:- 
	retractallExtTerm(hasAttr_ext(oid(o2,test),rid(r4,test),oid(o13,test))),
	retractallExtTerm(hasAttr_ext(oid(o2,test),rid(r1,test),oid(o12,test))),
	test_display(hasAttr(oid(o2,test),_X,_Y)).

%------------------------------------------------------------------------------------------
/*   check hasAttr / minAttr cross dependencies.
     bindings should be the same as testhasAttrreturns_2 */
testhasAttrreturns_4:- 
	newExtTerm(minAttr_ext(oid(o2,test),rid(r1,test),oid(o12,test),1)),
	newExtTerm(minAttr_ext(oid(o2,test),rid(r4,test),oid(o13,test),1)),
	test_display(hasAttr(oid(o2,test),X,_Y)).

end_of_file.

