/* This demo shows the use of aggregates and insert/delete commands.
*/

%%:- debug.

john[salary(1990) -> 20].
john[salary(1991) -> 40].
john[salary(1992) -> 60].
john[salary(1993) -> 70].
john[salary(1994) -> 70].
john[salary(1995) -> 80].
john[salary(1996) -> 70].
john[salary(1997) -> 50].
john[salary(1998) -> 80].

mary[salary(1990) -> 40].
mary[salary(1991) -> 30].
mary[salary(1992) -> 60].
mary[salary(1993) -> 70].
mary[salary(1994) -> 60].
mary[salary(1995) -> 60].
mary[salary(1996) -> 70].
mary[salary(1997) -> 80].
mary[salary(1998) -> unknown].

tst1 :- Z = max {X| john[salary(_Year)->X] },
	(write('tst1: '), writeln(Z))@prolog().

tst2 :- Z = max{X|john[salary(Year) ->X], Year < 1996},
	(write('tst2: '), writeln(Z))@prolog().

tst3 :- Z=count{Year|john.salary(Year) <
    	    	    	max{X|john[salary(Y2)->X],Y2<Year}},
	(write('tst3: '), writeln(Z))@prolog().

tst4 :- Z=count{Year| X=john.salary(Year),Y=mary.salary(Year),
	              (number(X), number(Y))@prolog(), X < Y},
	(write('tst4: '), writeln(Z))@prolog().

tst5 :- Z= avg{X[Who]| Who[salary(_Year)->X]},
	(write('tst5: '), writeln(Z))@prolog(), fail.
tst5 :- true.

tst6 :- Z= collectset{Year[Who]| Who[salary(Year) -> X],
	                          number(X)@prolog(), X < 60},
	(write('tst6: '), writeln(Z))@flora(io), fail.
tst6 :- true.

tst7 :- delete{mary[salary(Y)->unknown]},
	(write('tst7: '), writeln(Y))@prolog().

/* Put back these tests when clause reordering works
tst8 :- delete{john[salary(Y)->S1], mary[salary(Y)->S2]| 
                      ((var(S1); number(S1)), (var(S2); number(S2)))@prolog(),
		       S1<S2},
	(write('tst8: '), writeln(Y))@prolog().

tst9 :- delete{john[salary(Y)->S1] | mary[salary(Y)->S2],
	           ((var(S1); number(S1)), (var(S2); number(S2)))@prolog(),
		   S1<S2},
	(write('tst9: '), writeln(Y))@prolog().
*/

pretest :- tst1, tst2, tst3, tst4, tst5, tst6, tst7.
	%% Put back these when clause reordering works
	%% tst8, tst9,

test :- tell(temp)@prolog(),
	debug[#check_undefined(on)]@flora(sys),
	pretest,
	debug[#check_undefined(off)]@flora(sys),
	pretest,
	told@prolog().

