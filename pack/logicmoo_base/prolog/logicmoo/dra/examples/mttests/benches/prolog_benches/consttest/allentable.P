:- compiler_options([xpp_on]).

#include "maxint.h"

% In some of these, need to check that numbers are greater than 0.

%-------------  Before
%cons_tri(before([F,_T]), before([F1,_T1]), before([F2,MAXINT])):- 
%	F2 is F + F1 + 1.
cons_tri(before([F,T]), before([F1,T1]), Y, before([Fout,Tout])):- 
        interval_length(Y,[Ymin,Ymax]) -> 
	    add(F,F1,F2),add(F2,Ymin,Fout),add(T,T1,T2),add(T2,Ymax,Tout)
          ; add(F,F1,F2),add(F2,1,Fout),Tout = MAXINT.

%%cons_tri(meets, met_by, [finishes,finished_by,equals]).
%%cons_tri(before(_Sp), met_by, [during,overlaps,meets,starts,before([1,MAXINT])]).
%%cons_tri(meets, after(_Sp), [after([1,MAXINT]),contains,overlapped_by,met_by,started_by]).
cons_tri(before([FromA,ToA]), after([FromB,ToB]), Constraints):- 
	(FromA == 0,ToA == 0,FromB == 0,ToB == 0 ->        % meets.met_by
	    Constraints = [equals,finished_by,finishes]
	  ; (FromA == 0,ToA == 0 -> 
	        Constraints = [contains,overlapped_by,started_by,after([0,MAXINT])]
    	      ; (FromB == 0,ToB == 0 -> 
	           Constraints = [during,overlaps,starts,before([0,MAXINT])]
                 ;
	           Constraints = [contains,during,equals,
	                   finished_by,finishes,overlapped_by,overlaps,
			   started_by,starts,after([0,MAXINT]),before([0,MAXINT])] ) ) ).
%cons_tri(before, equals, before).
cons_tri(before(Sp), equals, before(Sp)).
%cons_tri(before, during, [before,during,meets,overlaps,starts]).
%cons_tri(meets, during, [during,overlaps,starts]).
cons_tri(before([F,T]), during, Constraints):- 
	F == 0,T == 0 -> 
	    Constraints = [during,overlaps,starts]
	  ; Constraints = [during,overlaps,starts,before([0,T1])],subtract(T,1,T1).
%cons_tri(before, contains, before).
%contained interval must start after container.
%%cons_tri(meets, contains, before([1,MAXINT])).
cons_tri(before(I), contains, before([F1,MAXINT])):- I = [F,_T],add(F,1,F1).
/*
cons_tri(before([F,T]),contains,before([F1,Tout])):- 
	add(F,1,F1).
        (interval_length(Y,[_Ymin,Ymax]) -> add(T,Ymax,T1),subtract(T1,2,Tout) ; Tout = MAXINT).
*/
%cons_tri(before, overlaps, before).
%cons_tri(meets, overlaps, before([1,MAXINT])).
cons_tri(before([F,_T]), overlaps, before([F1,MAXINT])):- add(F,1,F1).
/* cons_tri(before([F,T]), overlaps, Y, before([Fout,MAXINT])):- 
       add(F,1,Fout),
       (interval_length(Y,[_Ymin,Ymax]) ->  add(T,Ymax,Tout)  ; Tout = MAXINT).
*/
%%cons_tri(meets, overlapped_by, [during,overlaps,starts]).
%cons_tri(before, overlapped_by, [before,during,overlaps,meets,starts]).
cons_tri(before([F,T]), overlapped_by, Constraints):- 
	F == 0,T == 0 -> 
	   Constraints = [during,overlaps,starts]
	 ; Constraints = [during,overlaps,starts,before([0,Tout])],subtract(T,1,Tout).
%cons_tri(before, starts, before).
%%cons_tri(meets, starts, meets).
cons_tri(before(Sp), starts, before(Sp)).
%cons_tri(before, started_by, before).
%%cons_tri(meets, started_by, meets).
cons_tri(before(Sp), started_by, before(Sp)).
%cons_tri(before, finishes, [before,during,overlaps,meets,starts]).
%%cons_tri(meets, finishes, [during,overlaps,starts]).
cons_tri(before([F,T]), finishes, Constraints):- 
	F == 0,T == 0 -> 
	    Constraints = [during,overlaps,starts]
	 ;  Constraints = [during,overlaps,starts,before([0,T1])],subtract(T,1,T1).
%cons_tri(before, finished_by, before).
%cons_tri(meets, finished_by, before([1,MAXINT])).
cons_tri(before([F,_T]), finished_by, before([F1,MAXINT])):- add(F,1,F1).
/* cons_tri(before([F,T]), finished_by, before([Fout,Tout])):- 
	add(F,1,F1),
        (interval_length(Y,[_Ymin,Ymax]) -> add(T,Ymax,T1), subtract(T1,1,Tout) ; Tout = MAXINT).
*/	

%-------------  After
%cons_tri(after([F,_T]), after([F1,_T1]), after([F2,MAXINT])):- 
%	F2 is F + F1 + 1.
cons_tri(after([F,T]), after([F1,T1]), Y, after([Fout,Tout])):-
        interval_length(Y,[Ymin,Ymax]) ->
            add(F,F1,F2),add(F2,Ymin,Fout),add(T,T1,T2),add(T2,Ymax,Tout)
          ; add(F,F1,F2),add(F2,1,Fout),Tout = MAXINT.
%cons_tri(met_by, meets, [starts, started_by, equals]).
%cons_tri(met_by, before(_Sp), [contains,overlaps,meets,finished_by,before([1,MAXINT])]).
%cons_tri(after, meets, [after,during,overlapped_by,met_by,finishes]).
cons_tri(after([FromA,ToA]),before([FromB,ToB]),Constraints):- 
	(FromA == 0,ToA == 0,FromB == 0,ToB == 0 -> 
	    Constraints = [equals,started_by,starts]
	  ; (FromA == 0,ToA == 0 -> 
	        Constraints = [contains,finished_by,overlaps,before([0,MAXINT])]
	        ;  (FromB == 0,ToB == 0 -> 
		       Constraints = [during,finishes,overlapped_by,after([0,MAXINT])]
		    ;  Constraints = [contains,during,equals,finished_by,finishes,
	                   overlapped_by,overlaps,started_by,starts,
			   after([0,MAXINT]),before([0,MAXINT])] ) ) ).
cons_tri(after(Sp), equals, after(Sp)).
%%cons_tri(after(_Sp), during, [during,overlapped_by,finishes,after([0,MAXINT])]).
%%cons_tri(met_by, during, [during,finishes,overlapped_by]).
cons_tri(after([F,T]), during,Constraints):- 
	F == 0, T == 0 -> 
	   Constraints = [during,finishes,overlapped_by]
         ; Constraints = [during,finishes,overlapped_by,after([0,T1])],subtract(T,1,T1).
%cons_tri(met_by, contains, after([1,MAXINT])).
cons_tri(after(I), contains, after([F1,MAXINT])):-  I = [F,_T],add(F,1,F1).
%cons_tri(after, overlaps, [after,during,overlapped_by,met_by,finishes]).
%cons_tri(met_by, overlaps, [during,finishes,overlapped_by]).
/*
cons_tri(after([F,T]),contains,after([F1,Tout])):-
        add(F,1,F1).
        (interval_length(Y,[_Ymin,Ymax]) -> add(T,Ymax,T1),subtract(T1,2,Tout) ; Tout = MAXINT).
*/
cons_tri(after([F,T]), overlaps,Constraints):- 
	F == 0,T == 0 -> 
	    Constraints = [during,finishes,overlapped_by]
	  ; Constraints = [during,finishes,overlapped_by,after([0,Tout])],subtract(T,1,Tout).
%cons_tri(after, overlapped_by, after).
%cons_tri(met_by, overlapped_by, [during,before([1,MAXINT])]).
cons_tri(after([F,_T]), overlapped_by, after([F1,MAXINT])):- add(F,1,F1).
/* cons_tri(after([F,T]), overlapped_by, Y, after([Fout,MAXINT])):-
       add(F,1,Fout),
       (interval_length(Y,[_Ymin,Ymax]) ->  add(T,Ymax,Tout)  ; Tout = MAXINT).
*/
%cons_tri(after, starts, [after,during,overlapped_by,met_by,finishes]).
%%cons_tri(after(), starts, [during,overlapped_by,finishes,after([0,MAXINT])]).
%% cons_tri(met_by, starts, [during,overlapped_by,finishes]
cons_tri(after([F,T]), starts,Constraints):- 
	F == 0,T == 0 -> 
	    Constraints = [during,finishes,overlapped_by]
          ; Constraints = [during,finishes,overlapped_by,after([0,T1])],subtract(T,1,T1).
%cons_tri(after, started_by, after).
%%cons_tri(met_by, started_by, after([1,MAXINT])).
cons_tri(after([F,_T]), started_by, after([F1,MAXINT])):- add(F,1,F1).
/* cons_tri(before([F,T]), finished_by, Y, before([Fout,Tout])):-
        add(F,1,F1),
        (interval_length(Y,[_Ymin,Ymax]) -> add(T,Ymax,T1), subtract(T1,1,Tout) ; Tout = MAXINT).
*/
%cons_tri(after, finishes, after). cons_tri(met_by, finishes, met_by).
cons_tri(after(Sp), finishes, after(Sp)).
%cons_tri(after, finished_by, after). cons_tri(met_by, finished_by, met_by).
cons_tri(after(Sp), finished_by, after(Sp)).

% During -------------------------------------------------

%cons_tri(during, before, before).
cons_tri(during, before([F,_T]), before([F1,MAXINT])):- add(F,1,F1).
/* cons_tri(during, before([F,T]),before([Fout,Tout])):- 
        add(F,1,F1),
	(interval_length(Y,[_Ymin,Ymax]) -> add(T,Ymax,T1),subtract(T1,2,Tout) ; Tout = MAXINT).
*/
%cons_tri(during, meets, before([1,MAXINT])).
%cons_tri(during, after, after).
cons_tri(during, after([F,_T]), after([F1,MAXINT])):- add(F,1,F1).
/* cons_tri(during, after([F,T]),after([Fout,Tout])):- 
        add(F,1,F1),
	(interval_length(Y,[_Ymin,Ymax]) -> add(T,Ymax,T1),subtract(T1,2,Tout) ; Tout = MAXINT).
*/
%cons_tri(during, met_by, after([1,MAXINT])).
cons_tri(during, equals, during).
cons_tri(during, during, during).
cons_tri(during, contains, [contains,during,equals,finished_by,finishes,
	                    overlapped_by,overlaps,started_by,starts,
			    after([0,MAXINT]),before([0,MAXINT])]).
/*
cons_tri(during, contains, Y, [contains,during,equals,finished_by,finishes,
	                    overlapped_by,overlaps,started_by,starts,
			    after([0,Tout]),before([0,Tout])]):- 
	(interval_length(Y,[_Ymin,Ymax]) -> add(T,Ymax,T1),subtract(T1,4,Tout) ; Tout = MAXINT).
*/
cons_tri(during, overlaps, [during,overlaps,starts,before([0,MAXINT])]).
/*
cons_tri(during, overlaps, Y, [during,overlaps,starts,before([0,Tout])]):- 
	(interval_length(Y,[_Ymin,Ymax]) -> add(T,Ymax,T1),subtract(T1,3,Tout) ; Tout = MAXINT).
*/
cons_tri(during, overlapped_by, [during,finishes,overlapped_by,after([0,MAXINT])]).
/*
cons_tri(during, overlapped_by, Y, [during,finishes,overlapped_by,after([0,Tout])]):- 
	(interval_length(Y,[_Ymin,Ymax]) -> add(T,Ymax,T1),subtract(T1,3,Tout) ; Tout = MAXINT).
*/
%cons_tri(during, overlapped_by, [after,during,overlapped_by,met_by,finishes]).
cons_tri(during, starts, during).
cons_tri(during, started_by, [during,finishes,overlapped_by,after([0,MAXINT])]).
/*
cons_tri(during, started_by, Y, [during,finishes,overlapped_by,after([0,Tout])]):- 
	(interval_length(Y,[_Ymin,Ymax]) -> add(T,Ymax,T1),subtract(T1,3,Tout) ; Tout = MAXINT).
*/
cons_tri(during, finishes, during).
cons_tri(during, finished_by, [during,overlaps,starts,before([0,MAXINT])]).
/*
cons_tri(during, finished_by, [during,overlaps,starts,before([0,Tout])]):- 
	(interval_length(Y,[_Ymin,Ymax]) -> add(T,Ymax,T1),subtract(T1,3,Tout) ; Tout = MAXINT).
*/

% Contains -------------------------------------------------
%cons_tri(contains, before, [before,contains,overlaps,meets,finished_by]).
%cons_tri(contains, meets, [contains,overlaps,finished_by]).
cons_tri(contains, before([F,T]),Constraints):- 
	F == 0,T == 0 -> 
	    Constraints = [contains,finished_by,overlaps]
	 ;  Constraints = [contains,finished_by,overlaps,before([0,MAXINT])].
/*
cons_tri(contains, before([F,T]),Y,Constraints):- 
	F == 0,T == 0 -> 
	    Constraints = [contains,finished_by,overlaps].
	  ; (Constraints = [contains,finished_by,overlaps,before([0,Tout)],
	     (interval_length(Y,[Ymin,Ymax]) -> subtract(Ymax,2,Tout) ; Tout = MAXINT))
*/
%cons_tri(contains, after, [after,contains,overlapped_by,met_by,started_by]).
%cons_tri(contains, met_by, [contains,overlapped_by,started_by]).
cons_tri(contains, after([F,T]), Constraints):- 
	F == 0,T == 0 -> 
	    Constraints = [contains,overlapped_by,started_by]
	 ;  Constraints = [contains,overlapped_by,started_by,after([0,MAXINT])].
/*
cons_tri(contains, after([F,T]), Y, Constraints):- 
	F == 0,T == 0 -> 
	    Constraints = [contains,overlapped_by,started_by]
	 ;  Constraints = [contains,finished_by,overlaps,after([0,MAXINT])],
	     (interval_length(Y,[Ymin,Ymax]) -> subtract(Ymax,2,Tout) ; Tout = MAXINT))
*/
cons_tri(contains, equals, contains).
cons_tri(contains, during, [contains,during,equals,finished_by,finishes,
	                    overlapped_by,overlaps,started_by,starts]).
cons_tri(contains, contains, contains).
cons_tri(contains, overlaps, [contains,finished_by,overlaps]).
cons_tri(contains, overlapped_by, [contains,overlapped_by,started_by]).
cons_tri(contains, starts, [contains,finished_by,overlaps]).
cons_tri(contains, started_by, contains).
cons_tri(contains, finishes, [contains,overlapped_by,started_by]).
cons_tri(contains, finished_by, contains).

% Overlaps -------------------------------------------------
%cons_tri(overlaps, meets, before([1,MAXINT])).
%cons_tri(overlaps, before, before).
cons_tri(overlaps, before([F,_T]), before([F1,MAXINT])):- add(F,1,F1).
%cons_tri(overlaps, after, [after,contains,overlapped_by,met_by,started_by]).
%cons_tri(overlaps, met_by, [contains,overlapped_by,started_by]).
cons_tri(overlaps, after([F,T]),Constraints):- 
	F == 0,T == 0 -> 
	    Constraints = [contains,overlapped_by,started_by]
	  ; Constraints = [contains,overlapped_by,started_by,after([0,MAXINT])].
cons_tri(overlaps, equals, overlaps).
cons_tri(overlaps, during, [during,overlaps,starts]).
cons_tri(overlaps, contains, [contains,finished_by,overlaps,before([0,MAXINT])]).
cons_tri(overlaps, overlaps, [overlaps,before([0,MAXINT])]).
cons_tri(overlaps, overlapped_by, [contains,during,equals,finished_by,finishes,
	                           overlapped_by,overlaps,started_by,starts]).
cons_tri(overlaps, starts, overlaps).
cons_tri(overlaps, started_by, [contains,finished_by,overlaps]).
cons_tri(overlaps, finishes, [during,overlaps,starts]).
cons_tri(overlaps, finished_by, [overlaps,before([0,MAXINT])]).

% Overlapped_by -------------------------------------------------
%cons_tri(overlapped_by, before, [before,contains,overlaps,meets,finished_by]).
%cons_tri(overlapped_by, meets, [contains,overlaps,finished_by])
cons_tri(overlapped_by, before([F,T]), Constraints):- 
	F == 0,T == 0 -> 
	    Constraints = [contains,finished_by,overlaps]
	 ;  Constraints = [contains,finished_by,overlaps,before([0,MAXINT])].
%cons_tri(overlapped_by, after, after).
%cons_tri(overlapped_by, met_by, after([1,MAXINT])).
cons_tri(overlapped_by, after([F,_T]), after([F1,MAXINT])):- add(F,1,F1).
cons_tri(overlapped_by, equals, overlapped_by).
cons_tri(overlapped_by, during, [during,finishes,overlapped_by]).
%cons_tri(overlapped_by,contains,[after([1,MAXINT]),contains,overlapped_by,met_by,started_by]).
cons_tri(overlapped_by, contains, [contains,overlapped_by,started_by,after([0,MAXINT])]).
cons_tri(overlapped_by, overlaps, [contains,during,equals,finished_by,finishes,
	                           overlapped_by,overlaps,started_by,starts]).
%cons_tri(overlapped_by, overlapped_by, [after([1,MAXINT]),overlapped_by,met_by]).
cons_tri(overlapped_by, overlapped_by, [overlapped_by,after([0,MAXINT])]).
cons_tri(overlapped_by, starts, [during,finishes,overlapped_by]).
cons_tri(overlapped_by, started_by, [overlapped_by,after([0,MAXINT])]).
cons_tri(overlapped_by, finishes, overlapped_by).
cons_tri(overlapped_by, finished_by, [contains,overlapped_by,started_by]).

% Starts  -------------------------------------------------
%cons_tri(starts, before, before).
%cons_tri(starts, meets, before([1,MAXINT])).
cons_tri(starts, before([F,_T]), before([F1,MAXINT])):-	add(F,1,F1).
%cons_tri(starts, after, after).
%cons_tri(starts, met_by, met_by).
cons_tri(starts, after(Int), after(Int)).
cons_tri(starts, equals, starts).
cons_tri(starts, during, during).
cons_tri(starts, contains, [contains,finished_by,overlaps,before([0,MAXINT])]).
%cons_tri(starts, overlaps, [overlaps,meets,before([1,MAXINT])]).
cons_tri(starts, overlaps, [overlaps,before([0,MAXINT])]).
cons_tri(starts, overlapped_by, [during,finishes,overlapped_by]).
cons_tri(starts, starts, starts).
cons_tri(starts, started_by, [equals,started_by,starts]).
cons_tri(starts, finishes, during).
%cons_tri(starts, finished_by, [before([1,MAXINT]),overlaps,meets]).
cons_tri(starts, finished_by, [overlaps,before([0,MAXINT])]).

% Started_by  -------------------------------------------------
%cons_tri(started_by, before, [before,contains,overlaps,meets,finished_by]).
cons_tri(started_by, meets, [contains,finished_by,overlaps]).
cons_tri(started_by, before([F,T]),Constraints):- 
	F == 0,T == 0 -> 
	    Constraints = [contains,finished_by,overlaps]
	 ;  Constraints = [contains,finished_by,overlaps,before([0,MAXINT])].
%cons_tri(started_by, after, after).
%cons_tri(started_by, met_by, met_by).
cons_tri(started_by, after(Int), after(Int)).
cons_tri(started_by, equals, started_by).
cons_tri(started_by, during, [during,finishes,overlapped_by]).
cons_tri(started_by, contains, contains).
cons_tri(started_by, overlaps, [contains,finished_by,overlaps]).
cons_tri(started_by, overlapped_by, overlapped_by).
cons_tri(started_by, starts, [equals,started_by,starts]).
cons_tri(started_by, started_by, started_by).
cons_tri(started_by, finishes, overlapped_by).
cons_tri(started_by, finished_by, contains).

% Finishes  -------------------------------------------------
%cons_tri(finishes, before, before).
%cons_tri(finishes, meets, meets).
cons_tri(finishes, before(Int), before(Int)).
%cons_tri(finishes, after, after).
%cons_tri(finishes, met_by, after([1,MAXINT])).
cons_tri(finishes, after([F,_T]), after([F1,MAXINT])):- add(F,1,F1).
cons_tri(finishes, equals, finishes).
cons_tri(finishes, during, during).
%cons_tri(finishes, contains, [contains,overlapped_by,met_by,started_by,after([1,MAXINT])]).
cons_tri(finishes, contains, [contains,overlapped_by,started_by,after([0,MAXINT])]).
cons_tri(finishes, overlaps, [during,overlaps,starts]).
cons_tri(finishes, overlapped_by, [overlapped_by,after([0,MAXINT])]).
cons_tri(finishes, starts, during).
cons_tri(finishes, started_by, [overlapped_by,after([0,MAXINT])]).
cons_tri(finishes, finishes, finishes).
cons_tri(finishes, finished_by, [equals,finished_by,finishes]).

% Finished_by  -------------------------------------------------
%cons_tri(finished_by, before, before).
%cons_tri(finished_by, meets, meets).
cons_tri(finished_by, before(Int), before(Int)).
%cons_tri(finished_by, after, [after,contains,overlapped_by,met_by,started_by]).
%cons_tri(finished_by, met_by, [contains,overlapped_by,started_by]).
cons_tri(finished_by, after([F,T]),Constraints):- 
	F == 0,T == 0 -> 
            Constraints = [contains,overlapped_by,started_by]
	;   Constraints = [contains,overlapped_by,started_by,after([0,MAXINT])].
cons_tri(finished_by, equals, finished_by).
cons_tri(finished_by, during, [during,overlaps,starts]).
cons_tri(finished_by, contains, contains).
cons_tri(finished_by, overlaps, overlaps).
cons_tri(finished_by, overlapped_by, [contains,overlapped_by,started_by]).
cons_tri(finished_by, starts, overlaps).
cons_tri(finished_by, started_by, contains).
cons_tri(finished_by, finishes, [equals,finished_by,finishes]).
cons_tri(finished_by, finished_by, finished_by).

% Equals  -------------------------------------------------
%cons_tri(equals, meets, meets).
%cons_tri(equals, met_by, met_by).
cons_tri(equals, before(Sp), before(Sp)).
cons_tri(equals, after(Sp), after(Sp)).
cons_tri(equals, during, during).
cons_tri(equals, contains, contains).
cons_tri(equals, overlaps, overlaps).
cons_tri(equals, overlapped_by, overlapped_by).
cons_tri(equals, starts, starts).
cons_tri(equals, started_by, started_by).
cons_tri(equals, finishes, finishes).
cons_tri(equals, finished_by, finished_by).
cons_tri(equals, equals, equals).
