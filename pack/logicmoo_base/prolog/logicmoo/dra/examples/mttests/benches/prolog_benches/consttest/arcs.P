:- compiler_options([xpp_on]).

#include "maxint.h"

test_alg1(X):- 
	test_alg([arc('start','cycle 1',[before]),
                  arc('cycle 1','cycle 4',[before]),
		  arc('cycle 2','cycle 1',[during]),
		  arc('cycle 2','cycle 3',[before]),
		  arc('day 4','cycle 2',[during]),
		  arc(start,'day 4',[before([4,4])]),
		  arc('cycle 3','cycle 1',[during]),
		  arc('event x','cycle 3',[during]),
		  arc('cycle 5','cycle 4',[during]),
		  arc('event x','cycle 5',[before([5,5])]),
		  arc('cycle 5','cycle 6',[before]),
		  arc('day 15','cycle 5',[during]),
		  arc(start,'day 15',[before([15,15])]),
		  arc('cycle 6','cycle 4',[during]),
		  arc('event y','cycle 6',[during]),
		  arc('event y','event z',[before]),
                  arc('event z','cycle 6',[during])],X).

test_alg2(X):- 
	test_alg([arc(x,y,[before([5,5])]),arc(y,z,[after([5,5])])],X).

test_alg3(X):- 
	test_alg([arc(x,y,[before([5,5])]),arc(y,z,[before([6,6])])],X).

test_alg4(X):- 
	test_alg([arc(x,y,[before([5,5])]),arc(y,z,[before])],X).

test_alg5(X):- 
	test_alg([arc(x,y,[before([5,5])]),arc(y,z,[before([6,6])]),
                  arc(x,z,[before([12,14])])],X).

test_alg6(X):- 
	test_alg([arc(x,y,[before([5,5])]),arc(y,z,[before([6,6])]),
                  arc(x,z,[before([10,14])])],X).

test_alg7(X):- 
	test_alg([arc(x,y,[before([5,5])]),arc(y,z,[contains,started_by])],X).


test_alg(List,Time):- 
	retractall(arc(_,_,_)),
	assert_list(List),
	cc(Time),
	findall(arc(X,Y,Z),
	     (arc(X,Y,Z) ; arc(Y,X,Z1),inverse_list(Z1,Z2),sort(Z2,Z)),
	      OutL),
	sort(OutL,OutSort),
	write_list(OutSort),
	writeln('***********************************'),
	check_inverses.

check_inverses:- 
	arc(X,Y,One),arc(Y,X,Two),inverse_list(One,OneI),sort(OneI,OneInv),
	(\+ (OneInv = Two) -> 
	    writeln(different(X,Y,One,Two))
	 ;  true),
	fail.
check_inverses.



write_list([]).
write_list([H|T]):- 
	writeq(H),write('.'),nl,
	write_list(T).


assert_list([]).
assert_list([arc(X,Y,List)|T]):-
	quantitize_list(List,Qlist),
	assert(arc(X,Y,Qlist)),
	assert_list(T).

quantitize_list([],[]).
quantitize_list([after|T],[after([1,MAXINT])|T1]):- !,
	quantitize_list(T,T1).
quantitize_list([before|T],[before([1,MAXINT])|T1]):- !,
	quantitize_list(T,T1).
quantitize_list([H|T],[H|T1]):- 
	quantitize_list(T,T1).




