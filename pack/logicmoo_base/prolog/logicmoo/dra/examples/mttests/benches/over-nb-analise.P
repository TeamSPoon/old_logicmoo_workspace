:- import str_cat/3 from machine.

min(A,B,A) :- A < B.
min(A,B,B) :- A >= B.

min_list([X],X).
min_list([X|L],Y) :- min_list(L,Z), min(Z,X,Y).

get_min(File,Bench,M) :-
	findall(V,datum(File,Bench,V),LV),
	min_list(LV,M).

over(B,U,P1) :-
	P is (U - B) * 100 / B,
	P1 is truncate(P+0.5).

file_name(F,Fname) :-
	str_cat(F,'.P',Fname).

read_file(File) :-
	file_name(File,Name),
	see(Name),
	read(X),
	read_file(X, File),
	seen.

read_file(end_of_file,_) :- !.
read_file(X,F) :- X = datum( B, V ),
		assert(datum(F, B, V)),
		read(Y),
		read_file(Y,F).

line_prolog(B) :-
	get_min( 'prolog-seq', B, VS ),
	get_min( 'prolog-mt', B, VM ),
	over(VS,VM,Over),
	write(B), write( ' & ' ),
	write(VS), write( ' & ' ),
	write(VM), write( ' & ' ),
	write(Over), writeln( '%').

lines_prolog([]) :- !.
lines_prolog([B|Bs]) :-
	line_prolog(B),
	lines_prolog(Bs).

table_prolog :-
	writeln('Prolog'),
	read_file('prolog-seq'),
	read_file('prolog-mt'),
	findall(B,datum('prolog-seq',B,_),L),
	sort(L, LS),
	lines_prolog(LS).

line_tab(B,Seq,Priv,Shared) :-
	get_min( Seq, B, VSeq ),
	get_min( Priv, B, VPriv ),
	get_min( Shared, B, VShared ),
	over(VSeq,VPriv,OPriv),
	over(VSeq,VShared,OShared),
	write(B), write( ' & ' ),
	write(VSeq), write( ' & ' ),
	write(VPriv), write( ' & ' ),
	write(OPriv), write( '% & ' ),
	write(VShared), write( ' & ' ),
	write(OShared), writeln( '%').

lines_tab([],_,_,_) :- !.
lines_tab([B|Bs],Seq,Priv,Shared) :-
	line_tab(B,Seq,Priv,Shared),
	lines_tab(Bs,Seq,Priv,Shared).

table_tab( Benches, Sched ) :-
	write( Benches ), write(' '), write( Sched ), nl,
	str_cat( Benches, '-seq-', S1 ), str_cat( S1, Sched, Seq ),
	str_cat( Benches, '-mt-p-', P1 ), str_cat( P1, Sched, Priv ),
	str_cat( Benches, '-mt-s-', Sh1 ), str_cat( Sh1, Sched, Shared ),
	read_file(Seq),
	read_file(Priv),
	read_file(Shared),
	findall(B,datum(Seq,B,_),L),
	sort(L, LS),
	lines_tab(LS,Seq,Priv,Shared).

table_all :-
	table_prolog,
	nl, nl,
	table_tab(synth,loc),
	nl, nl,
	table_tab(tab,loc).
	

