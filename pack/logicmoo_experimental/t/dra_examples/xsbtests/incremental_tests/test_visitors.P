
:- table t_inc_1/1 as incremental.
:- dynamic p/1 as incremental.
:- import incr_invalidate_call/1, incr_table_update/0, incr_assert/1, incr_retract_immed/1 from increval.
:- import get_visitors_number/2 from tables.

test:- test_1.
test:- test_2.
test:- test_3.
test:- test_4.
test.

test_1:- t_inc_1(_X),get_term_visitors(t_inc_1(_),N),
	 writeln(test_1_1(N)),
	 fail.
test_1:- get_term_visitors(t_inc_1(_),N),
	 writeln(test_1(N)),
	 fail.

test_2:- t_inc_1(_),fail.
test_2:- t_inc_1(_),!,get_term_visitors(t_inc_1(_),N),
	 writeln(test_2(N)),
	 fail.


test_3:- t_inc_1(_),fail.
test_3:- (t_inc_1(_) -> fail ; fail).
test_3:- get_term_visitors(t_inc_1(_),N),
	 writeln(test_3(N)),
	 fail.

test_4:- t_inc_1(_),fail.
test_4:- catch((t_inc_1(_X),functor(_,_,_)),_,(writeln(caughtit),fail)).
test_4:- get_term_visitors(t_inc_1(_),N),
	 writeln(test_4(N)),
	 fail.

get_term_visitors(Term,N):- 
	get_call(Term,SF,_),get_visitors_number(SF,N).





q(X):- t_inc_1(X),
       incr_retract_immed(p(2)).
%       retractall_p.

bad_2:- t_inc_4(_X),fail.
bad_2:- writeln(first_clause_done),inc_7(X),writeln(t_inc_5(X)),fail.

bad_3:- t_inc_4(_X),fail.
bad_3:- writeln(first_clause_done),t_inc_5(X),writeln(t_inc_5(X)),fail.


retractall_p:-
	writeln(here),
	p(X),incr_retract_immed(p(X)),fail.
retractall_p.

t_inc_1(X):- p(X).

p(1).
p(2).
%p(3).
%p(4).

:- table t_inc_2/1,t_inc_3/1,t_inc_4/1,t_inc_5/1 as incremental.

t_inc_2(X):- t_inc_1(X). 
t_inc_3(X):- t_inc_1(X). 
t_inc_4(X):- t_inc_3(X). 
t_inc_5(X):- t_inc_4(X),writeln(t_inc_4(X)),t_inc_2(X),writeln(t_inc_2(X)).
t_inc_6(X):- t_inc_4(X),t_inc_2(_Y).

inc_7(X):- t_inc_1(X),t_inc_1(X).

test_deps(X):- 
	    t_inc_5(X),
	    incr_retract_immed(p(2)).
	    

