:- table path/2/1.
:- table X/2.
:- table t/0.
:- arguments table_state(meta,oid).

%% path(X,Y)(Z): a path from X to Y through Z
%% path(X,Y)(null) means there is an edge from X to Y
edge(a,b).
edge(b,a).
edge(b,c).
edge(b,d).
edge(c,e).
edge(e,f).

path(X,Y)(null) :- edge(X,Y).
path(X,Y)(null) :- edge(X,Y).
path(X,Y)(Z) :- path(X,Z)(_P1), path(Z,Y)(_P2).

%% if path/2/1 is not tabled, this is not going to terminate
tst1 :- path(X,Y)(Z), Z\=null,
	write(X)@flora(io), write(' ')@prolog(),
	write(Y)@flora(io), write(' ')@prolog(),
	writeln(Z)@flora(io), fail.
tst1 :- true.

%% tst2 shows that nt/1 is not tabled which means path/2/1 is tabled
%% without tabling X/1.
tst2 :- nt(a),
	nt(a),
	t,
	t.

nt(a) :- writeln('This line will be printed multiple times')@prolog().

t :- writeln('This line will be printed only once')@prolog().

%% tst3 shows the use of variable functor in the table directive. All
%% hilog predicates in the form are tabled.
%% without tabling X/2, it's not going to terminate.
F(X,Y) :- X(F,Y).
p(X,Y) :- q(X,Y).

q(a1,b1).
q(a2,b2).

tst3 :- p(X,Y), write(X)@prolog(), write(' ')@prolog(),
	writeln(Y)@prolog(), fail.
tst3 :- true.

pretest :- tst1, tst2, tst3.

test :- tell(temp)@prolog(),
	debug[#check_undefined(on)]@flora(sys),
	pretest,
	debug[#check_undefined(off)]@flora(sys),
	pretest,
	told@prolog().
