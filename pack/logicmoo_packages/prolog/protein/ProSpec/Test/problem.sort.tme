/* cond_elim_dup_unique_lr_x_elim_dup_unique_lr */

/* A software reuse problem
 * Generated by the HAMMR toolset
 * Contact: fisch@ips.cs.tu-bs.de
 * 
 * Place your advertisement _here_
 * 
 * generated: 29/Oct/1997
 */

/* Consists of:
 cond_elim_dup_unique_lr_x_elim_dup_unique_lr,
 ListAppAxMono,
 ListAppMono,
 ListAxMono,
 ListMono,
 ListMonoClasses,
 ListVDM,
 EQClass,
 FOLeq,
 FOLax,
 Meta,
 FOLclasses,
 FOL
 */

begin(prospec).

sorts:(
  t_P_Item,
  t_P_List
).

functions: (
  cons	: ( t_P_Item , t_P_List ) => t_P_List,
  nil	: t_P_List,
  app	: ( t_P_List , t_P_List ) => t_P_List
).

relations: (
  '='	: ( A , B )
).

end(prospec).

/* Axioms */

/* AppCons */
forall([ L : t_P_List ],forall([ K : t_P_List ],forall([ I : t_P_Item ],app(
cons(I,K),L) = cons(I,app(K,L))))).

/* AppNil */
forall([ L : t_P_List ],app(nil,L) = L).

/* ConsInj */
forall([ L : t_P_List ],forall([ K : t_P_List ],forall([ I : t_P_Item ],forall
([ J : t_P_Item ],cons(I,L) = cons(J,K) -> I = J & L = K)))).

/* Surjective */
forall([ L : t_P_List ],L = nil ; exists([ K : t_P_List ],exists([ I : 
t_P_Item ],L = cons(I,K)))).

/* Nil */
forall([ L : t_P_List ],forall([ I : t_P_Item ],~ nil = cons(I,L))).

/* Conjecture */
?-
forall([ _0_6010 : t_P_List ],forall([ _0_6009 : t_P_List ],forall([ _0_6011
 : t_P_Item ],forall([ _0_6012 : t_P_List ],exists([ _0_6014 : t_P_List ],
exists([ _0_6015 : t_P_List ],_0_6012 = app(app(_0_6014,cons(_0_6011,nil)),
_0_6015))) & forall([ _0_6018 : t_P_List ],forall([ _0_6019 : t_P_List ],~ 
_0_6010 = app(app(_0_6018,cons(_0_6011,nil)),_0_6019))) ; forall([ _0_6013 : 
t_P_List ],~ _0_6009 = app(app(_0_6012,cons(_0_6011,nil)),_0_6013) ; exists([ 
_0_6016 : t_P_List ],exists([ _0_6017 : t_P_List ],_0_6013 = app(app(_0_6016,
cons(_0_6011,nil)),_0_6017))) & forall([ _0_6018 : t_P_List ],forall([ _0_6019
 : t_P_List ],~ _0_6010 = app(app(_0_6018,cons(_0_6011,nil)),_0_6019))) ; 
exists([ _0_6018 : t_P_List ],exists([ _0_6019 : t_P_List ],_0_6010 = app(app(
_0_6018,cons(_0_6011,nil)),_0_6019))) & forall([ _0_6014 : t_P_List ],forall(
[ _0_6015 : t_P_List ],~ _0_6012 = app(app(_0_6014,cons(_0_6011,nil)),_0_6015)
)) & forall([ _0_6016 : t_P_List ],forall([ _0_6017 : t_P_List ],~ _0_6013 = 
app(app(_0_6016,cons(_0_6011,nil)),_0_6017)))))) ; forall([ _0_6027 : t_P_List
 ],~ _0_6010 = _0_6027 ; forall([ _0_6026 : t_P_List ],~ _0_6009 = _0_6026 ; 
exists([ _0_6028 : t_P_Item ],exists([ _0_6029 : t_P_List ],exists([ _0_6030
 : t_P_List ],_0_6026 = app(app(_0_6029,cons(_0_6028,nil)),_0_6030)) & exists(
[ _0_6031 : t_P_List ],exists([ _0_6032 : t_P_List ],_0_6029 = app(app(_0_6031
,cons(_0_6028,nil)),_0_6032)))) & exists([ _0_6035 : t_P_List ],exists([ 
_0_6036 : t_P_List ],_0_6027 = app(app(_0_6035,cons(_0_6028,nil)),_0_6036))))
 ; exists([ _0_6028 : t_P_Item ],exists([ _0_6029 : t_P_List ],exists([ 
_0_6030 : t_P_List ],_0_6026 = app(app(_0_6029,cons(_0_6028,nil)),_0_6030) & 
forall([ _0_6033 : t_P_List ],forall([ _0_6034 : t_P_List ],~ _0_6030 = app(
app(_0_6033,cons(_0_6028,nil)),_0_6034)))) & forall([ _0_6031 : t_P_List ],
forall([ _0_6032 : t_P_List ],~ _0_6029 = app(app(_0_6031,cons(_0_6028,nil)),
_0_6032)))) & forall([ _0_6035 : t_P_List ],forall([ _0_6036 : t_P_List ],~ 
_0_6027 = app(app(_0_6035,cons(_0_6028,nil)),_0_6036)))) ; exists([ _0_6028 : 
t_P_Item ],exists([ _0_6029 : t_P_List ],exists([ _0_6030 : t_P_List ],_0_6026
 = app(app(_0_6029,cons(_0_6028,nil)),_0_6030) & exists([ _0_6033 : t_P_List ]
,exists([ _0_6034 : t_P_List ],_0_6030 = app(app(_0_6033,cons(_0_6028,nil)),
_0_6034))))) & exists([ _0_6035 : t_P_List ],exists([ _0_6036 : t_P_List ],
_0_6027 = app(app(_0_6035,cons(_0_6028,nil)),_0_6036)))))))).
