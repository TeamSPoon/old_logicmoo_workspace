********************    PROTEIN V2.09   ********************

--------------------    input clauses   --------------------

"Clause " No. 1 : [lt(_49, _50), -> [not_lt(_50, _49)]]
"Clause " No. 2 : [lt(_88, _88), -> false]
"Clause " No. 3 : [lt(_114, _118), lt(_118, _113), -> [lt(_114, _113)]]
"Clause " No. 4 : [not_lt(_158, _162), lt(_157, _162), -> [not_lt(_158, _157)]]
"Clause " No. 5 : [lt(_206, s(_206))]
"Clause " No. 6 : [even(_227), odd(_227)]
"Clause " No. 7 : [even(s(_252)), not_odd(_252)]
"Clause " No. 8 : [odd(s(_281)), not_even(_281)]
"Query  " No. 9 : [query, not_even(_310), not_lt(a, _310)]
"Restart" No. 9 : [restart, not_even(_310), not_lt(a, _310)]

--------------------        flags       --------------------

protein_flag(system, protein).
protein_flag(ancestry_rme, off).
protein_flag(ancs, both).
protein_flag(answers, one).
protein_flag(answer_set_handling, on).
protein_flag(check_flags, [protein_flag(calculus, hyper)]).
protein_flag(definite_answers, off).
protein_flag(delayed_rme, off).
protein_flag(depth_increment, 1).
protein_flag(dynamic, off).
protein_flag(factorisation, cut).
protein_flag(head_behind_prolog, off).
protein_flag(mmr, off).
protein_flag(mode, pl1).
protein_flag(query_anc, ([], [])).
protein_flag(query_reuse, on).
protein_flag(reduction, both).
protein_flag(regularity, delay).
protein_flag(search, id_tree).
protein_flag(selection_function, off).
protein_flag(sorting, costs).
protein_flag(strict_rme, off).
protein_flag(th_nonewclauses, off).
protein_flag(th_reduction, both).
protein_flag(th_regularity, delay).
protein_flag(th_sidelit_anc, off).
protein_flag(translate, all).
protein_flag(trace, internal).
protein_flag(calculus, rme).


--------------------     statistics     --------------------

Proof Statistics
----------------
Proof Time:  0.01 sec
Proof Depth: 5
Extension Steps: 4
Restart Steps:   1
Reduction Steps: 1
Factoring Steps: 0
Theory Steps:    1
Inferences:      29

--------------------      answers       --------------------
