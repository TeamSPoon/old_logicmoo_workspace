********************    PROTEIN V2.09   ********************

--------------------    input clauses   --------------------

"Clause " No. 1 : [animal(_49), not_wolf(_49)]
"Clause " No. 2 : [animal(_76), not_fox(_76)]
"Clause " No. 3 : [animal(_103), not_bird(_103)]
"Clause " No. 4 : [animal(_130), not_caterpillar(_130)]
"Clause " No. 5 : [animal(_157), not_snail(_157)]
"Clause " No. 6 : [wolf(a_wolf)]
"Clause " No. 7 : [fox(a_fox)]
"Clause " No. 8 : [bird(a_bird)]
"Clause " No. 9 : [caterpillar(a_caterpillar)]
"Clause " No. 10 : [snail(a_snail)]
"Clause " No. 11 : [grain(a_grain)]
"Clause " No. 12 : [plant(_304), not_grain(_304)]
"Clause " No. 13 : [eats(_333, _334), eats(_333, _332), not_animal(_333), not_plant(_334), not_animal(_332), not_plant(_331), not_much_smaller(_332, _333), not_eats(_332, _331)]
"Clause " No. 14 : [much_smaller(_402, _401), not_caterpillar(_402), not_bird(_401)]
"Clause " No. 15 : [much_smaller(_437, _436), not_snail(_437), not_bird(_436)]
"Clause " No. 16 : [much_smaller(_472, _471), not_bird(_472), not_fox(_471)]
"Clause " No. 17 : [much_smaller(_507, _506), not_fox(_507), not_wolf(_506)]
"Clause " No. 18 : [not_wolf(_542), not_fox(_541), not_eats(_542, _541)]
"Clause " No. 19 : [not_wolf(_577), not_grain(_576), not_eats(_577, _576)]
"Clause " No. 20 : [eats(_612, _611), not_bird(_612), not_caterpillar(_611)]
"Clause " No. 21 : [not_bird(_647), not_snail(_646), not_eats(_647, _646)]
"Clause " No. 22 : [plant(caterpillar_food_of(_681)), not_caterpillar(_681)]
"Clause " No. 23 : [eats(_710, caterpillar_food_of(_710)), not_caterpillar(_710)]
"Clause " No. 24 : [plant(snail_food_of(_740)), not_snail(_740)]
"Clause " No. 25 : [eats(_769, snail_food_of(_769)), not_snail(_769)]
"Query  " No. 26 : [query, not_animal(_801), not_animal(_800), not_grain(_799), not_eats(_801, _800), not_eats(_800, _799)]
"Clause " No. 26 : [not_animal(_801), not_animal(_800), not_grain(_799), not_eats(_801, _800), not_eats(_800, _799)]

--------------------        flags       --------------------

protein_flag(system, protein).
protein_flag(ancestry_rme, off).
protein_flag(ancs, both).
protein_flag(answers, one).
protein_flag(answer_set_handling, on).
protein_flag(calculus, me).
protein_flag(check_flags, [protein_flag(calculus, hyper)]).
protein_flag(definite_answers, off).
protein_flag(delayed_rme, off).
protein_flag(depth_increment, 1).
protein_flag(dynamic, off).
protein_flag(factorisation, cut).
protein_flag(head_behind_prolog, off).
protein_flag(mmr, off).
protein_flag(mode, pl1).
protein_flag(query_anc, ([], [])).
protein_flag(query_reuse, on).
protein_flag(reduction, both).
protein_flag(regularity, delay).
protein_flag(search, id_tree).
protein_flag(selection_function, off).
protein_flag(sorting, costs).
protein_flag(strict_rme, off).
protein_flag(th_nonewclauses, off).
protein_flag(th_reduction, both).
protein_flag(th_regularity, delay).
protein_flag(th_sidelit_anc, off).
protein_flag(translate, all).
protein_flag(trace, internal).


--------------------     statistics     --------------------

Proof Statistics
----------------
Proof Time:  0.65 sec
Proof Depth: 4
Extension Steps: 54
Reduction Steps: 0
Factoring Steps: 9		(incl. 9 with cut)
Inferences:      5146

--------------------      answers       --------------------
