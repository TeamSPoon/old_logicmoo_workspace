
Base Module Declaration
-----------------------

A specification module is an enrichment of a base module:

<base> ::= 'using' <module_expression> 

<module_expression> ::=	<specification_name>
		| <module_expression> '+' <module_expression>
		| rename '(' <module_expression> ',' <sort_associations> ','
			     <operator_associations> ')'

<specification_name> ::= <Prolog atom>

<sort_associations> ::= '[' [ <sort_association_list> ] ']'
<operator_associations> ::= '[' [ <operator_association_list> ] ']'
<sort_association_list> ::= 
	<sort_association> { ',' <sort_association> }
<sort_association> ::= '(' <sortName> ',' <sortName> ')'
<operator_association_list> ::= 
	<operator_association> { ',' <operator_association> }
<operator_association> ::= '(' <opName> ',' <opName> ')'


The semantics of the '+'-operation  is union of specifications
(signature, axioms, termination ordering).
The union fails, if the termination orderings cannot be combined.

'rename' applies the given specification morphism to a specification.
For the operator renaming injectivity is required. Noninjective
operator renamings must be simulated using auxiliary operators
and equations.

All  specifications  <specification_name>  occurring  in the base of a 
specification are called direct imports of this specification.

The base of a specification is evaluated whenever this specification
is consulted using the "in"-command. If the "in"-command also specifies
an <order_name> of an order_specification, this order specification is
also consulted. The order specification determines which files must
be consulted to find the specifications of the direct antecedents.
If some <order_name> beside 'noorder' is associated with the 
<specification_name> of a direct import, the system tries to thaw 
a frozen state of a specification (-> freeze) from a file name
   <specification_name>.<order_name>.q2.0    (Quintus 2.x versions)
in the current directory (-> cd, pwd).
If no such files are present the system looks for a file
	<specification_name>.eqn
with the text of the specification module according to the syntax of
<specification> to be read in and for a file
	<specification_name>.<order_name>.ord
which contains pragmas concerning the termination ordering.
If the the <order_name> associated with <specification_name> is 
'noorder' or there is no <order_name> associated with <specification_name> 
the system looks only for a file 
	<specification_name>.eqn
in the current directory (-> cd, pwd).
