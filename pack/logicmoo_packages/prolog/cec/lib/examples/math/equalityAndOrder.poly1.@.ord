order(poly1 for equalityAndOrder) using poly1 for equality+poly1 for totalOrder.
setInterpretation(>(x,y) : 2 * x * y + 2
).
setInterpretation('$r'(x) : 2 * x
).
setInterpretation('$r'(x1,x2,x3,x4) : 2 * x1 + 2 * x2 + 2 * x3 + 2 * x4
).
setInterpretation('$r'(x1,x2,x3,x4,x5,x6) : 2 * x1 + 2 * x2 + 2 * x3 + 2 * x4 + 2 * x5 + 2 * x6
).
setInterpretation('$neq2'(x1,x2,x3,x4) : 2 * x1 + 2 * x2 + 2 * x3 + 2 * x4
).
setInterpretation(=<(x,y) : x + y
).
setInterpretation('$neq1'(x1,x2,x3,x4) : 2 * x1 + 2 * x2 + 2 * x3 + 2 * x4
).
setInterpretation('$neq2'(x1,x2,x3,x4,x5,x6) : 2 * x1 + 2 * x2 + 2 * x3 + 2 * x4 + 2 * x5 + 2 * x6
).
setInterpretation('$neq3'(x1,x2,x3,x4,x5,x6) : 2 * x1 + 2 * x2 + 2 * x3 + 2 * x4 + 2 * x5 + 2 * x6
).
setInterpretation('$neq4'(x1,x2,x3,x4,x5,x6) : 2 * x1 + 2 * x2 + 2 * x3 + 2 * x4 + 2 * x5 + 2 * x6
).
setInterpretation('$neq5'(x1,x2,x3,x4,x5,x6) : 2 * x1 + 2 * x2 + 2 * x3 + 2 * x4 + 2 * x5 + 2 * x6
).
setInterpretation('$neq5'(x1,x2,x3,x4) : 2 * x1 + 2 * x2 + 2 * x3 + 2 * x4
).
setInterpretation('$neq1'(x1,x2,x3,x4,x5,x6) : 2 * x1 + 2 * x2 + 2 * x3 + 2 * x4 + 2 * x5 + 2 * x6
).
setInterpretation(false : 2
).
setInterpretation(true : 2
).
setInterpretation(==(x,y) : x + y
).
setInterpretation(\==(x,y) : 2 * x + 2 * y
).

constructor('true-bool').
constructor('false-bool').






/* ordering of the literals is ms for
/*	n==m = m==n */
action(status(ms),'$equation'([],['==-bool-elem-elem'(@'n-elem',@'m-elem')='==-bool-elem-elem'(@'m-elem',@'n-elem')])).

/* ordering of the literals is ms for
/*	n\==m = m\==n */
action(status(ms),'$equation'([],['\==-bool-elem-elem'(@'n-elem',@'m-elem')='\==-bool-elem-elem'(@'m-elem',@'n-elem')])).

/* declare as nonoperational :
/*	n==m = true => n = m */
action(orient(n),'$equation'(['==-bool-elem-elem'(@'n-elem',@'m-elem')='true-bool'],[@'n-elem'= @'m-elem'])).

/* condition number 1 is the selected condition for
/*	n==m = true => n = m */
action(selectcondition(1),'$equation'(['==-bool-elem-elem'(@'n-elem',@'m-elem')='true-bool'],[@'n-elem'= @'m-elem'])).

/* ordering of the literals is ms for
/*	n==m = true => n = m */
action(status(ms),'$equation'(['==-bool-elem-elem'(@'n-elem',@'m-elem')='true-bool'],[@'n-elem'= @'m-elem'])).

/* declare as nonoperational :
/*	x=<y = false => y=<x = true */
action(orient(n),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='false-bool'],['=<-bool-elem-elem'(@'y-elem',@'x-elem')='true-bool'])).

/* condition number 1 is the selected condition for
/*	x=<y = false => y=<x = true */
action(selectcondition(1),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='false-bool'],['=<-bool-elem-elem'(@'y-elem',@'x-elem')='true-bool'])).

/* ordering of the literals is [0,1] for
/*	x=<y = false => y=<x = true */
action(status([0,1]),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='false-bool'],['=<-bool-elem-elem'(@'y-elem',@'x-elem')='true-bool'])).

/* declare as nonoperational :
/*	x=<y = true and y=<x = true => x = y */
action(orient(n),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','=<-bool-elem-elem'(@'y-elem',@'x-elem')='true-bool'],[@'x-elem'= @'y-elem'])).

/* condition number 1 is the selected condition for
/*	x=<y = true and y=<x = true => x = y */
action(selectcondition(1),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','=<-bool-elem-elem'(@'y-elem',@'x-elem')='true-bool'],[@'x-elem'= @'y-elem'])).

/* ordering of the literals is [0,1,2] for
/*	x=<y = true and y=<x = true => x = y */
action(status([0,1,2]),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','=<-bool-elem-elem'(@'y-elem',@'x-elem')='true-bool'],[@'x-elem'= @'y-elem'])).

/* declare as nonoperational :
/*	x=<y = true and y=<z = true => x=<z = true */
action(orient(n),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','=<-bool-elem-elem'(@'y-elem',@'z-elem')='true-bool'],['=<-bool-elem-elem'(@'x-elem',@'z-elem')='true-bool'])).

/* condition number 1 is the selected condition for
/*	x=<y = true and y=<z = true => x=<z = true */
action(selectcondition(1),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','=<-bool-elem-elem'(@'y-elem',@'z-elem')='true-bool'],['=<-bool-elem-elem'(@'x-elem',@'z-elem')='true-bool'])).

/* ordering of the literals is [0,1,2] for
/*	x=<y = true and y=<z = true => x=<z = true */
action(status([0,1,2]),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','=<-bool-elem-elem'(@'y-elem',@'z-elem')='true-bool'],['=<-bool-elem-elem'(@'x-elem',@'z-elem')='true-bool'])).

/* declare as nonoperational :
/*	x=<y = true and x=<z = false => y=<z = false */
action(orient(n),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','=<-bool-elem-elem'(@'x-elem',@'z-elem')='false-bool'],['=<-bool-elem-elem'(@'y-elem',@'z-elem')='false-bool'])).

/* condition number 1 is the selected condition for
/*	x=<y = true and x=<z = false => y=<z = false */
action(selectcondition(1),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','=<-bool-elem-elem'(@'x-elem',@'z-elem')='false-bool'],['=<-bool-elem-elem'(@'y-elem',@'z-elem')='false-bool'])).

/* ordering of the literals is [0,1,2] for
/*	x=<y = true and x=<z = false => y=<z = false */
action(status([0,1,2]),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','=<-bool-elem-elem'(@'x-elem',@'z-elem')='false-bool'],['=<-bool-elem-elem'(@'y-elem',@'z-elem')='false-bool'])).

/* declare as nonoperational :
/*	y=<z = true and x=<z = false => x=<y = false */
action(orient(n),'$equation'(['=<-bool-elem-elem'(@'y-elem',@'z-elem')='true-bool','=<-bool-elem-elem'(@'x-elem',@'z-elem')='false-bool'],['=<-bool-elem-elem'(@'x-elem',@'y-elem')='false-bool'])).

/* condition number 1 is the selected condition for
/*	y=<z = true and x=<z = false => x=<y = false */
action(selectcondition(1),'$equation'(['=<-bool-elem-elem'(@'y-elem',@'z-elem')='true-bool','=<-bool-elem-elem'(@'x-elem',@'z-elem')='false-bool'],['=<-bool-elem-elem'(@'x-elem',@'y-elem')='false-bool'])).

/* ordering of the literals is [0,1,2] for
/*	y=<z = true and x=<z = false => x=<y = false */
action(status([0,1,2]),'$equation'(['=<-bool-elem-elem'(@'y-elem',@'z-elem')='true-bool','=<-bool-elem-elem'(@'x-elem',@'z-elem')='false-bool'],['=<-bool-elem-elem'(@'x-elem',@'y-elem')='false-bool'])).

/* declare as nonoperational :
/*	x=<y = true and x>y = true => true = false */
action(orient(n),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','>-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool'],['true-bool'='false-bool'])).

/* condition number 1 is the selected condition for
/*	x=<y = true and x>y = true => true = false */
action(selectcondition(1),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','>-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool'],['true-bool'='false-bool'])).

/* condition number 1 is the selected condition for
/*	x=<y = true and x>y = true => true = false */
action(selectcondition(1),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','>-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool'],['true-bool'='false-bool'])).

/* ordering of the literals is ms for
/*	x=<y = true and x>y = true => true = false */
action(status(ms),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','>-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool'],['true-bool'='false-bool'])).

