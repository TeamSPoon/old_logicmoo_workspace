order(poly1 for totalOrder) using poly1 for object.
setInterpretation('>-bool-elem-elem'(x,y) : x + y + 6
).
setInterpretation('=<-bool-elem-elem'(x,y) : x + y + 5
).
setInterpretation(>(x,y) : x + y + 6
).
setInterpretation(=<(x,y) : x + y + 5
).
setInterpretation('$inj-object-elem'(x) : x + 3
).
setInterpretation('$neq6'(x1,x2,x3,x4) : 2 * x1 + 2 * x2 + 2 * x3 + 2 * x4
).
setInterpretation('$neq7'(x1,x2,x3,x4,x5,x6) : 2 * x1 + 2 * x2 + 2 * x3 + 2 * x4 + 2 * x5 + 2 * x6
).
setInterpretation('$neq9'(x1,x2,x3,x4,x5,x6) : 2 * x1 + 2 * x2 + 2 * x3 + 2 * x4 + 2 * x5 + 2 * x6
).
setInterpretation('$inj-object-bool'(x) : x + 1
).
setInterpretation('==-bool-object-object'(x,y) : x + y + 4
).
setInterpretation('\==-bool-object-object'(x,y) : x + y + 5
).
setInterpretation(==(x,y) : x + y + 4
).
setInterpretation(\==(x,y) : x + y + 5
).
setInterpretation('false-bool' : 2
).
setInterpretation('true-bool' : 2
).
setInterpretation(true : 2
).
setInterpretation(false : 2
).

constructor('true-bool').
constructor('false-bool').






/* condition number 1 is the selected condition for
/*	X1:bool,X2:bool |- X1 = X2 => X1 = X2 */
action(selectcondition(1),'$equation'(['$inj-object-bool'(@'X1-bool')='$inj-object-bool'(@'X2-bool')],[@'X1-bool'= @'X2-bool'])).

/* ordering of the literals is ms for
/*	x:object,y:object |- x==y = y==x */
action(status(ms),'$equation'([],['==-bool-object-object'(@'x-object',@'y-object')='==-bool-object-object'(@'y-object',@'x-object')])).

/* ordering of the literals is ms for
/*	x:object,y:object |- x\==y = y\==x */
action(status(ms),'$equation'([],['\==-bool-object-object'(@'x-object',@'y-object')='\==-bool-object-object'(@'y-object',@'x-object')])).

/* declare as nonoperational :
/*	x:object,y:object |- x==y = true => x = y */
action(orient(n),'$equation'(['==-bool-object-object'(@'x-object',@'y-object')='true-bool'],[@'x-object'= @'y-object'])).

/* condition number 1 is the selected condition for
/*	x:object,y:object |- x==y = true => x = y */
action(selectcondition(1),'$equation'(['==-bool-object-object'(@'x-object',@'y-object')='true-bool'],[@'x-object'= @'y-object'])).

/* ordering of the literals is ms for
/*	x:object,y:object |- x==y = true => x = y */
action(status(ms),'$equation'(['==-bool-object-object'(@'x-object',@'y-object')='true-bool'],[@'x-object'= @'y-object'])).

/* condition number 1 is the selected condition for
/*	X1:elem,X2:elem |- X1 = X2 => X1 = X2 */
action(selectcondition(1),'$equation'(['$inj-object-elem'(@'X1-elem')='$inj-object-elem'(@'X2-elem')],[@'X1-elem'= @'X2-elem'])).

/* declare as nonoperational :
/*	x:elem,y:elem |- [y=<x] = [x=<y,false] */
action(orient(n),'$equation'([],[['=<-bool-elem-elem'(@'y-elem',@'x-elem')]=['=<-bool-elem-elem'(@'x-elem',@'y-elem'),'false-bool']])).

/* condition number 1 is the selected condition for
/*	e1:elem,e2:elem |- e1=<e2 = false => e2=<e1 = true */
action(selectcondition(1),'$equation'(['=<-bool-elem-elem'(@'e1-elem',@'e2-elem')='false-bool'],['=<-bool-elem-elem'(@'e2-elem',@'e1-elem')='true-bool'])).

/* ordering of the literals is [1,0] for
/*	x:elem,y:elem |- x=<y = false => y=<x = true */
action(status([1,0]),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='false-bool'],['=<-bool-elem-elem'(@'y-elem',@'x-elem')='true-bool'])).

/* declare as nonoperational :
/*	x:elem,y:elem |- x=<y = true and y=<x = true => x = y */
action(orient(n),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','=<-bool-elem-elem'(@'y-elem',@'x-elem')='true-bool'],[@'x-elem'= @'y-elem'])).

/* condition number 1 is the selected condition for
/*	x:elem,y:elem |- x=<y = true and y=<x = true => x = y */
action(selectcondition(1),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','=<-bool-elem-elem'(@'y-elem',@'x-elem')='true-bool'],[@'x-elem'= @'y-elem'])).

/* condition number 1 is the selected condition for
/*	e1:elem,e2:elem |- e1=<e2 = true and e2=<e1 = true => e1 = e2 */
action(selectcondition(1),'$equation'(['=<-bool-elem-elem'(@'e1-elem',@'e2-elem')='true-bool','=<-bool-elem-elem'(@'e2-elem',@'e1-elem')='true-bool'],[@'e1-elem'= @'e2-elem'])).

/* ordering of the literals is [0,1,2] for
/*	x:elem,y:elem |- x=<y = true and y=<x = true => x = y */
action(status([0,1,2]),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','=<-bool-elem-elem'(@'y-elem',@'x-elem')='true-bool'],[@'x-elem'= @'y-elem'])).

/* declare as nonoperational :
/*	e1:elem,e2:elem |- e1=<e2 = true and e1>e2 = true => true = false */
action(orient(n),'$equation'(['=<-bool-elem-elem'(@'e1-elem',@'e2-elem')='true-bool','>-bool-elem-elem'(@'e1-elem',@'e2-elem')='true-bool'],['true-bool'='false-bool'])).

/* condition number 1 is the selected condition for
/*	e1:elem,e2:elem |- e1=<e2 = true and e1>e2 = true => true = false */
action(selectcondition(1),'$equation'(['=<-bool-elem-elem'(@'e1-elem',@'e2-elem')='true-bool','>-bool-elem-elem'(@'e1-elem',@'e2-elem')='true-bool'],['true-bool'='false-bool'])).

/* condition number 1 is the selected condition for
/*	e1:elem,e2:elem |- e1=<e2 = true and e1>e2 = true => true = false */
action(selectcondition(1),'$equation'(['=<-bool-elem-elem'(@'e1-elem',@'e2-elem')='true-bool','>-bool-elem-elem'(@'e1-elem',@'e2-elem')='true-bool'],['true-bool'='false-bool'])).

/* ordering of the literals is ms for
/*	e1:elem,e2:elem |- e1=<e2 = true and e1>e2 = true => true = false */
action(status(ms),'$equation'(['=<-bool-elem-elem'(@'e1-elem',@'e2-elem')='true-bool','>-bool-elem-elem'(@'e1-elem',@'e2-elem')='true-bool'],['true-bool'='false-bool'])).

/* declare as nonoperational :
/*	x:elem,y:elem,z:elem |- x=<y = true and y=<z = true => x=<z = true */
action(orient(n),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','=<-bool-elem-elem'(@'y-elem',@'z-elem')='true-bool'],['=<-bool-elem-elem'(@'x-elem',@'z-elem')='true-bool'])).

/* condition number 1 is the selected condition for
/*	x:elem,y:elem,z:elem |- x=<y = true and y=<z = true => x=<z = true */
action(selectcondition(1),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','=<-bool-elem-elem'(@'y-elem',@'z-elem')='true-bool'],['=<-bool-elem-elem'(@'x-elem',@'z-elem')='true-bool'])).

/* condition number 1 is the selected condition for
/*	e1:elem,e2:elem,e3:elem |- e1=<e2 = true and e2=<e3 = true => e1=<e3 = true */
action(selectcondition(1),'$equation'(['=<-bool-elem-elem'(@'e1-elem',@'e2-elem')='true-bool','=<-bool-elem-elem'(@'e2-elem',@'e3-elem')='true-bool'],['=<-bool-elem-elem'(@'e1-elem',@'e3-elem')='true-bool'])).

/* ordering of the literals is [0,1,2] for
/*	x:elem,y:elem,z:elem |- x=<y = true and y=<z = true => x=<z = true */
action(status([0,1,2]),'$equation'(['=<-bool-elem-elem'(@'x-elem',@'y-elem')='true-bool','=<-bool-elem-elem'(@'y-elem',@'z-elem')='true-bool'],['=<-bool-elem-elem'(@'x-elem',@'z-elem')='true-bool'])).

