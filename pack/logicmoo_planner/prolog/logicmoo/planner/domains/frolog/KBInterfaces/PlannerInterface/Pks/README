***********************************************
* PKS - Planning with Knowledge and Sensing   *
*                                             *
* PKS Version 0.7alpha2 (2004-11-16)          *
*                                             *
* Copyright (c) 2001-2004 Ron Petrick         *
*                                             *
* This software is provided without warranty. *
* Please read the full LICENCE document.      *
* E-mail questions to rpetrick@cs.utoronto.ca *
*                                             *
***********************************************

SOFTWARE 

This bundle contains ALPHA software.  Do NOT send bug reports
about this version.  This software is distributed in executable 
form due to its alpha nature.  When development stabilizes somewhat,
source may be available at that point.  The current version of the
software is available from the PKS website at:

    http://www.cs.utoronto.ca/~rpetrick/research/pks

RUNNING PKS

PKS may be run in two ways:  batch mode or interactive mode (default).
Invoking "pks" starts an interactive command prompt, allowing tasks to
be performed with feedback from the planner.  This option also includes
a (primitive) plan viewer that allows a plan to be traversed and its
states to be examined.

Starting pks with command line options allows PKS to be run with minimal
feedback; it exits immediately planning has completed.  Typing "pks -h"
displays a list of the available command line options.

DOMAINS

The "domains" directory contains a small number of sample domain files.
The language syntax isn't totally firm yet, so there may be some changes
in the future. At that point more domains will be included.

Note: the language syntax has changed from the 0.5alpha to 0.7alpha series.
      See the file "demo.pks" in the "domains" directory.

For documentation on the domain representation, refer to the PKS webpage.

PLANS

The plans generated by PKS are displayed (by default) in a natural
"tree-view" structure.  For instance, here's a plan generated in the UNIX
domain example:

   <init>
   cd(papers)
   cd(kr)
   ls(outline_tex, kr)
   cd-up(papers)
   <branch,indir(outline_tex, kr),34>
   <k+>:
      cd(kr)
   <k->:
      cd(aips)
      cd(planner)

Tags starting with "<branch...>" indicate branch points in the conditional
plan. The number following the branch indicates the branch identifier 
(an integer).  The second argument is the Kw formula being branched on
(i.e., the agent knows whether the formula is true or not).  The tag
<k+> indicates the start of the "positive" branch of the plan (the formula
is known to be true) while the tag <k-> marks the start of the "negative"
branch of the plan (the formula is known to be false).

Specifying "Prolog mode" allows plan segments to be displayed as Prolog
predicates, allowing them to be loaded into a Prolog interpreter for
parsing.  For instance, the above plan would be displayed as

   pks(0.0400,[cd(papers),cd(kr),ls(outline_tex, kr),cd-up(papers),
      branch(34,indir(outline_tex, kr),[cd(kr)],[cd(aips),cd(planner)])]).

in Prolog mode.  The "prolog" directory of this distribution includes a
program called "showpks" that can be used to display a PKS plan in Prolog.

BUGS

Too numerous to mention.  Major problems:

  - Error messages are cryptic or missing
  - Major memory leaks, planning may crash without warning
  - Problems when functions are used as action parameters
  - No expression evaluations are done using the LCW database
  - Postdiction is disabled in this verion
  - Some problems when using parameterized numeric expressions

These issues are being addressed and some of them will be fixed in the 
next alpha release.  Do NOT send me bug reports about this version of 
the planner.

QUESTIONS/DOCUMENTATION

Not a lot of documentation at this point, but it will be coming.
Check the PKS webpage for the latest information:

    http://www.cs.utoronto.ca/~rpetrick/research/pks

Questions about PKS can be sent to Ron Petrick (rpetrick@cs.utoronto.ca).

