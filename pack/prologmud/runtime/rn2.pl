

:- multifile(baseKB:cyc_to_plarkc/2).
:- dynamic(baseKB:cyc_to_plarkc/2). 

            

:-retractall(rn('Sentence',xtSentence)).
:-retractall(rename(xtSentence,'Sentence')).
baseKB:cyc_to_plarkc('Sentence',ftSentence).
:-retractall(rn('ConditionExpression',xtConditionExpression)).
:-retractall(rename(xtConditionExpression,'ConditionExpression')).
baseKB:cyc_to_plarkc('ConditionExpression',ftConditionExpression).
:-retractall(rn('ComputerCodeExpression',xtComputerCodeExpression)).
:-retractall(rename(xtComputerCodeExpression,'ComputerCodeExpression')).
baseKB:cyc_to_plarkc('ComputerCodeExpression',ftComputerCodeExpression).
:-retractall(rn('AppositiveExpression',xtAppositiveExpression)).
:-retractall(rename(xtAppositiveExpression,'AppositiveExpression')).
baseKB:cyc_to_plarkc('AppositiveExpression',ftAppositiveExpression).
:-retractall(rn('DefiniteExpression',xtDefiniteExpression)).
:-retractall(rename(xtDefiniteExpression,'DefiniteExpression')).
baseKB:cyc_to_plarkc('DefiniteExpression',ftDefiniteExpression).
:-retractall(rn('IndefiniteExpression',xtIndefiniteExpression)).
:-retractall(rename(xtIndefiniteExpression,'IndefiniteExpression')).
baseKB:cyc_to_plarkc('IndefiniteExpression',ftIndefiniteExpression).
:-retractall(rn('FirstPersonExpression',xtFirstPersonExpression)).
:-retractall(rename(xtFirstPersonExpression,'FirstPersonExpression')).
baseKB:cyc_to_plarkc('FirstPersonExpression',ftFirstPersonExpression).
:-retractall(rn('SecondPersonExpression',xtSecondPersonExpression)).
:-retractall(rename(xtSecondPersonExpression,'SecondPersonExpression')).
baseKB:cyc_to_plarkc('SecondPersonExpression',ftSecondPersonExpression).
:-retractall(rn('ThirdPersonExpression',xtThirdPersonExpression)).
:-retractall(rename(xtThirdPersonExpression,'ThirdPersonExpression')).
baseKB:cyc_to_plarkc('ThirdPersonExpression',ftThirdPersonExpression).
:-retractall(rn('MasculineExpression',xtMasculineExpression)).
:-retractall(rename(xtMasculineExpression,'MasculineExpression')).
baseKB:cyc_to_plarkc('MasculineExpression',ftMasculineExpression).
:-retractall(rn('FeminineExpression',xtFeminineExpression)).
:-retractall(rename(xtFeminineExpression,'FeminineExpression')).
baseKB:cyc_to_plarkc('FeminineExpression',ftFeminineExpression).
:-retractall(rn('NeuterExpression',xtNeuterExpression)).
:-retractall(rename(xtNeuterExpression,'NeuterExpression')).
baseKB:cyc_to_plarkc('NeuterExpression',ftNeuterExpression).
:-retractall(rn('SingularExpression',xtSingularExpression)).
:-retractall(rename(xtSingularExpression,'SingularExpression')).
baseKB:cyc_to_plarkc('SingularExpression',ftSingularExpression).
:-retractall(rn('TaskSchedulerTimePatternExpression',xtTaskSchedulerTimePatternExpression)).
:-retractall(rename(xtTaskSchedulerTimePatternExpression,'TaskSchedulerTimePatternExpression')).
baseKB:cyc_to_plarkc('TaskSchedulerTimePatternExpression',ftTaskSchedulerTimePatternExpression).
:-retractall(rn('TaskSchedulerDatePatternExpression',xtTaskSchedulerDatePatternExpression)).
:-retractall(rename(xtTaskSchedulerDatePatternExpression,'TaskSchedulerDatePatternExpression')).
baseKB:cyc_to_plarkc('TaskSchedulerDatePatternExpression',ftTaskSchedulerDatePatternExpression).
:-retractall(rn('TaskSchedulerTemplateExpression',xtTaskSchedulerTemplateExpression)).
:-retractall(rename(xtTaskSchedulerTemplateExpression,'TaskSchedulerTemplateExpression')).
baseKB:cyc_to_plarkc('TaskSchedulerTemplateExpression',ftTaskSchedulerTemplateExpression).
:-retractall(rn('SyntacticNodeMeaningExpression',xtSyntacticNodeMeaningExpression)).
:-retractall(rename(xtSyntacticNodeMeaningExpression,'SyntacticNodeMeaningExpression')).
baseKB:cyc_to_plarkc('SyntacticNodeMeaningExpression',ftSyntacticNodeMeaningExpression).
:-retractall(rn('CycLOpenExpression',xtCycLOpenExpression)).
:-retractall(rename(xtCycLOpenExpression,'CycLOpenExpression')).
baseKB:cyc_to_plarkc('CycLOpenExpression',ftOpenExpression).
:-retractall(rn('CycLSentence',xtCycLSentence)).
:-retractall(rename(xtCycLSentence,'CycLSentence')).
baseKB:cyc_to_plarkc('CycLSentence',ftSentence).
:-retractall(rn('CycLTerm',xtCycLTerm)).
:-retractall(rename(xtCycLTerm,'CycLTerm')).
baseKB:cyc_to_plarkc('CycLTerm',ftExpression).
:-retractall(rn('CycLFormulaicSentence',xtCycLFormulaicSentence)).
:-retractall(rename(xtCycLFormulaicSentence,'CycLFormulaicSentence')).
baseKB:cyc_to_plarkc('CycLFormulaicSentence',ftSentence).
:-retractall(rn('CycLOpenSentence',xtCycLOpenSentence)).
:-retractall(rename(xtCycLOpenSentence,'CycLOpenSentence')).
baseKB:cyc_to_plarkc('CycLOpenSentence',ftOpenSentence).
:-retractall(rn('CycLOpenFormula',xtCycLOpenFormula)).
:-retractall(rename(xtCycLOpenFormula,'CycLOpenFormula')).
baseKB:cyc_to_plarkc('CycLOpenFormula',ftOpenFormula).
:-retractall(rn('CycLFormula',xtCycLFormula)).
:-retractall(rename(xtCycLFormula,'CycLFormula')).
baseKB:cyc_to_plarkc('CycLFormula',ftSentence).
:-retractall(rn('CycLClosedSentence',xtCycLClosedSentence)).
:-retractall(rename(xtCycLClosedSentence,'CycLClosedSentence')).
baseKB:cyc_to_plarkc('CycLClosedSentence',ftClosedSentence).
:-retractall(rn('CycLFullyGroundExpression',xtCycLFullyGroundExpression)).
:-retractall(rename(xtCycLFullyGroundExpression,'CycLFullyGroundExpression')).
baseKB:cyc_to_plarkc('CycLFullyGroundExpression',ftFullyGroundExpression).
:-retractall(rn('CycLClosedFormula',xtCycLClosedFormula)).
:-retractall(rename(xtCycLClosedFormula,'CycLClosedFormula')).
baseKB:cyc_to_plarkc('CycLClosedFormula',ftClosedFormula).
:-retractall(rn('CycLClosedExpression',xtCycLClosedExpression)).
:-retractall(rename(xtCycLClosedExpression,'CycLClosedExpression')).
baseKB:cyc_to_plarkc('CycLClosedExpression',ftClosedExpression).
:-retractall(rn('SExpression',xtSExpression)).
:-retractall(rename(xtSExpression,'SExpression')).
baseKB:cyc_to_plarkc('SExpression',ftSExpression).
:-retractall(rn('CycLSetExpression',xtCycLSetExpression)).
:-retractall(rename(xtCycLSetExpression,'CycLSetExpression')).
baseKB:cyc_to_plarkc('CycLSetExpression',ftSetExpression).
:-retractall(rn('RegularExpression',xtRegularExpression)).
:-retractall(rename(xtRegularExpression,'RegularExpression')).
baseKB:cyc_to_plarkc('RegularExpression',ftRegularExpression).
:-retractall(rn('CycLExpression',xtCycLExpression)).
:-retractall(rename(xtCycLExpression,'CycLExpression')).
baseKB:cyc_to_plarkc('CycLExpression',ftExpression).
:-retractall(rn('SubLSExpression',xtSubLSExpression)).
:-retractall(rename(xtSubLSExpression,'SubLSExpression')).
baseKB:cyc_to_plarkc('SubLSExpression',ftSExpression).
:-retractall(rn('ProgramExpression',xtProgramExpression)).
:-retractall(rename(xtProgramExpression,'ProgramExpression')).
baseKB:cyc_to_plarkc('ProgramExpression',ftProgramExpression).
:-retractall(rn('Format',tFormat)).
:-retractall(rename(tFormat,'Format')).
baseKB:cyc_to_plarkc('Format',vtFormat).
:-retractall(rn('TruthValue',tTruthValue)).
:-retractall(rename(tTruthValue,'TruthValue')).
baseKB:cyc_to_plarkc('TruthValue',vtTruthValue).
:-retractall(rn('CanonicalizerDirective',tCanonicalizerDirective)).
:-retractall(rename(tCanonicalizerDirective,'CanonicalizerDirective')).
baseKB:cyc_to_plarkc('CanonicalizerDirective',vtCanonicalizerDirective).
:-retractall(rn('ConstraintLanguageExpression',xtCycLSentence)).
:-retractall(rename(xtCycLSentence,'ConstraintLanguageExpression')).
baseKB:cyc_to_plarkc('ConstraintLanguageExpression',ftConstraintLanguageExpression).
:-retractall(rn('ExtensionalRepresentationPredicate','ObjectPredicate')).
:-retractall(rename('ObjectPredicate','ExtensionalRepresentationPredicate')).
baseKB:cyc_to_plarkc('ExtensionalRepresentationPredicate',rtExtensionalRepresentationPredicate).
:-retractall(rn('RelationPredicate','IntangibleObjectRelatingPredicate')).
:-retractall(rename('IntangibleObjectRelatingPredicate','RelationPredicate')).
baseKB:cyc_to_plarkc('RelationPredicate',rtRelationPredicate).
:-retractall(rn('FunctionOrFunctionalPredicate','FunctionalRelation')).
:-retractall(rename('FunctionalRelation','FunctionOrFunctionalPredicate')).
baseKB:cyc_to_plarkc('FunctionOrFunctionalPredicate',rtFunctionOrFunctionalPredicate).
:-retractall(rn('CycSetExpression',xtCycLSetExpression)).
:-retractall(rename(xtCycLSetExpression,'CycSetExpression')).
baseKB:cyc_to_plarkc('CycSetExpression',ftSetExpression).
:-retractall(rn('LispRealNumber',xtSubLRealNumber)).
:-retractall(rename(xtSubLRealNumber,'LispRealNumber')).
baseKB:cyc_to_plarkc('LispRealNumber',ftRealNumber).
:-retractall(rn('CycSystemRealNumber',xtSubLRealNumber)).
:-retractall(rename(xtSubLRealNumber,'CycSystemRealNumber')).
baseKB:cyc_to_plarkc('CycSystemRealNumber',ftRealNumber).
:-retractall(rn('CycSystemInteger',xtSubLInteger)).
:-retractall(rename(xtSubLInteger,'CycSystemInteger')).
baseKB:cyc_to_plarkc('CycSystemInteger',ftInt).
:-retractall(rn('CompositionPredicate','PhysicalCompositionPredicate')).
:-retractall(rename('PhysicalCompositionPredicate','CompositionPredicate')).
baseKB:cyc_to_plarkc('CompositionPredicate',rtCompositionPredicate).
:-retractall(rn('InterExistingObjectSlot','InterExistingObjectPredicate')).
:-retractall(rename('InterExistingObjectPredicate','InterExistingObjectSlot')).
baseKB:cyc_to_plarkc('InterExistingObjectSlot',rtInterExistingObjectSlot).
:-retractall(rn('PrimitiveTemporalRelation','PrimitiveTemporalPredicate')).
:-retractall(rename('PrimitiveTemporalPredicate','PrimitiveTemporalRelation')).
baseKB:cyc_to_plarkc('PrimitiveTemporalRelation',rtPrimitiveTemporalRelation).
:-retractall(rn('ComplexTemporalRelation','ComplexTemporalPredicate')).
:-retractall(rename('ComplexTemporalPredicate','ComplexTemporalRelation')).
baseKB:cyc_to_plarkc('ComplexTemporalRelation',rtComplexTemporalRelation).
:-retractall(rn('TemporalPartSlot','TemporalPartPredicate')).
:-retractall(rename('TemporalPartPredicate','TemporalPartSlot')).
baseKB:cyc_to_plarkc('TemporalPartSlot',rtTemporalPartSlot).
:-retractall(rn('eyeColor-Old',eyeColor)).
:-retractall(rename(eyeColor,'eyeColor-Old')).
baseKB:cyc_to_plarkc('eyeColor-Old',eyeColorOld).
:-retractall(rn('CollectionPredicate','SetOrCollectionPredicate')).
:-retractall(rename('SetOrCollectionPredicate','CollectionPredicate')).
baseKB:cyc_to_plarkc('CollectionPredicate',rtCollectionPredicate).
:-retractall(rn('TypePredicate','FirstOrderCollectionPredicate')).
:-retractall(rename('FirstOrderCollectionPredicate','TypePredicate')).
baseKB:cyc_to_plarkc('TypePredicate',rtTypePredicate).
:-retractall(rn('colorSchemeOf-Old',colorSchemeOf)).
:-retractall(rename(colorSchemeOf,'colorSchemeOf-Old')).
baseKB:cyc_to_plarkc('colorSchemeOf-Old',colorSchemeOfOld).
:-retractall(rn('SpatiallyIntrinsicSlot','SpatiallyDistributiveBinaryPredicate')).
:-retractall(rename('SpatiallyDistributiveBinaryPredicate','SpatiallyIntrinsicSlot')).
baseKB:cyc_to_plarkc('SpatiallyIntrinsicSlot',rtSpatiallyIntrinsicSlot).
:-retractall(rn('courseOfStudyLevel-Coll',courseOfStudyLevel)).
:-retractall(rename(courseOfStudyLevel,'courseOfStudyLevel-Coll')).
baseKB:cyc_to_plarkc('courseOfStudyLevel-Coll',courseOfStudyLevelColl).
:-retractall(rn('PhysicalAttributeDescriptionSlot','PhysicalFeatureBinaryPredicate')).
:-retractall(rename('PhysicalFeatureBinaryPredicate','PhysicalAttributeDescriptionSlot')).
baseKB:cyc_to_plarkc('PhysicalAttributeDescriptionSlot',rtPhysicalAttributeDescriptionSlot).
:-retractall(rn('CotemporalObjectsSlot','CoexistingObjectsPredicate')).
:-retractall(rename('CoexistingObjectsPredicate','CotemporalObjectsSlot')).
baseKB:cyc_to_plarkc('CotemporalObjectsSlot',rtCotemporalObjectsSlot).
:-retractall(rn('IntervalBasedQuantitySlot','QuantitySlot')).
:-retractall(rename('QuantitySlot','IntervalBasedQuantitySlot')).
baseKB:cyc_to_plarkc('IntervalBasedQuantitySlot',rtIntervalBasedQuantitySlot).
:-retractall(rn('RelationExpression',xtCycLFormula)).
:-retractall(rename(xtCycLFormula,'RelationExpression')).
baseKB:cyc_to_plarkc('RelationExpression',ftRelationExpression).
:-retractall(rn('testStatus-Manual',testStatus)).
:-retractall(rename(testStatus,'testStatus-Manual')).
baseKB:cyc_to_plarkc('testStatus-Manual',testStatusManual).
:-retractall(rn('InterPersonalRelationSlot','InterAnimalRelationPredicate')).
:-retractall(rename('InterAnimalRelationPredicate','InterPersonalRelationSlot')).
baseKB:cyc_to_plarkc('InterPersonalRelationSlot',rtInterPersonalRelationSlot).
:-retractall(rn('sourceOfTerm-PIT',sourceOfTerm)).
:-retractall(rename(sourceOfTerm,'sourceOfTerm-PIT')).
baseKB:cyc_to_plarkc('sourceOfTerm-PIT',sourceOfTermPIT).
:-retractall(rn('CycConstant',xtCycLConstant)).
:-retractall(rename(xtCycLConstant,'CycConstant')).
baseKB:cyc_to_plarkc('CycConstant',ftConstant).
:-retractall(rn('formalityOfWS-New',formalityOfWS)).
:-retractall(rename(formalityOfWS,'formalityOfWS-New')).
baseKB:cyc_to_plarkc('formalityOfWS-New',formalityOfWSNew).
:-retractall(rn('politenessOfWS-New',politenessOfWS)).
:-retractall(rename(politenessOfWS,'politenessOfWS-New')).
baseKB:cyc_to_plarkc('politenessOfWS-New',politenessOfWSNew).
:-retractall(rn('CycSystemKeyword',xtSubLKeyword)).
:-retractall(rename(xtSubLKeyword,'CycSystemKeyword')).
baseKB:cyc_to_plarkc('CycSystemKeyword',ftKeyword).
:-retractall(rn('ExceptionRelation','ExceptionPredicate')).
:-retractall(rename('ExceptionPredicate','ExceptionRelation')).
baseKB:cyc_to_plarkc('ExceptionRelation',rtExceptionRelation).
:-retractall(rn('adjSemTrans-New',adjSemTrans)).
:-retractall(rename(adjSemTrans,'adjSemTrans-New')).
baseKB:cyc_to_plarkc('adjSemTrans-New',adjSemTransNew).
:-retractall(rn('adjSemTrans-Restricted-New',adjSemTransRestricted)).
:-retractall(rename(adjSemTransRestricted,'adjSemTrans-Restricted-New')).
baseKB:cyc_to_plarkc('adjSemTrans-Restricted-New',adjSemTransRestrictedNew).
:-retractall(rn('KBDescriptorPredicate','SubLDescriptorPredicate')).
:-retractall(rename('SubLDescriptorPredicate','KBDescriptorPredicate')).
baseKB:cyc_to_plarkc('KBDescriptorPredicate',rtKBDescriptorPredicate).
:-retractall(rn('CycSystemDescriptorPredicate','SubLDescriptorPredicate')).
:-retractall(rename('SubLDescriptorPredicate','CycSystemDescriptorPredicate')).
baseKB:cyc_to_plarkc('CycSystemDescriptorPredicate',rtDescriptorPredicate).
:-retractall(rn('SpecifiedPsychologicalTestType',tSpecifiedPsychologicalTest)).
:-retractall(rename(tSpecifiedPsychologicalTest,'SpecifiedPsychologicalTestType')).
baseKB:cyc_to_plarkc('SpecifiedPsychologicalTestType',ttSpecifiedPsychologicalTestType).
:-retractall(rn('SubLExpression',xtSubLSExpression)).
:-retractall(rename(xtSubLSExpression,'SubLExpression')).
baseKB:cyc_to_plarkc('SubLExpression',ftExpression).
:-retractall(rn('PartialDenotationalFunction','PartialFunction')).
:-retractall(rename('PartialFunction','PartialDenotationalFunction')).
baseKB:cyc_to_plarkc('PartialDenotationalFunction',rtPartialDenotationalFunction).
:-retractall(rn('TotalDenotationalFunction','TotalFunction')).
:-retractall(rename('TotalFunction','TotalDenotationalFunction')).
baseKB:cyc_to_plarkc('TotalDenotationalFunction',rtTotalDenotationalFunction).
:-retractall(rn('favoriteColorOfPerson-Old',favoriteColorOfPerson)).
:-retractall(rename(favoriteColorOfPerson,'favoriteColorOfPerson-Old')).
baseKB:cyc_to_plarkc('favoriteColorOfPerson-Old',favoriteColorOfPersonOld).
:-retractall(rn('NonAtomicTerm',xtCycLNonAtomicTerm)).
:-retractall(rename(xtCycLNonAtomicTerm,'NonAtomicTerm')).
baseKB:cyc_to_plarkc('NonAtomicTerm',ftNonAtomicTerm).
:-retractall(rn('nounSemTrans-new',nounSemTrans)).
:-retractall(rename(nounSemTrans,'nounSemTrans-new')).
baseKB:cyc_to_plarkc('nounSemTrans-new',nounSemTransnew).
:-retractall(rn('agentiveNounSemTrans-new',agentiveNounSemTrans)).
:-retractall(rename(agentiveNounSemTrans,'agentiveNounSemTrans-new')).
baseKB:cyc_to_plarkc('agentiveNounSemTrans-new',agentiveNounSemTransnew).
:-retractall(rn('massNounSemTrans-new',massNounSemTrans)).
:-retractall(rename(massNounSemTrans,'massNounSemTrans-new')).
baseKB:cyc_to_plarkc('massNounSemTrans-new',massNounSemTransnew).
:-retractall(rn('BinaryQuantityOrValuePredicate','BinaryPropertyPredicate')).
:-retractall(rename('BinaryPropertyPredicate','BinaryQuantityOrValuePredicate')).
baseKB:cyc_to_plarkc('BinaryQuantityOrValuePredicate',rtBinaryQuantityOrValuePredicate).
:-retractall(rn('AntiDavidsonianPredicate','NonDavidsonianPredicate')).
:-retractall(rename('NonDavidsonianPredicate','AntiDavidsonianPredicate')).
baseKB:cyc_to_plarkc('AntiDavidsonianPredicate',rtAntiDavidsonianPredicate).
:-retractall(rn('multiWordSemTrans-new',multiWordSemTrans)).
:-retractall(rename(multiWordSemTrans,'multiWordSemTrans-new')).
baseKB:cyc_to_plarkc('multiWordSemTrans-new',multiWordSemTransnew).
:-retractall(rn('reproducesAsexually-MicroorganismMob',reproducesAsexually)).
:-retractall(rename(reproducesAsexually,'reproducesAsexually-MicroorganismMob')).
baseKB:cyc_to_plarkc('reproducesAsexually-MicroorganismMob',reproducesAsexuallyMicroorganismMob).
:-retractall(rn('ArgGenlQuanityBinaryPredicate','ArgGenlQuantityBinaryPredicate')).
:-retractall(rename('ArgGenlQuantityBinaryPredicate','ArgGenlQuanityBinaryPredicate')).
baseKB:cyc_to_plarkc('ArgGenlQuanityBinaryPredicate',rtArgGenlQuanityBinaryPredicate).
:-retractall(rn('ArgGenlQuanityPredicate','ArgGenlQuantityPredicate')).
:-retractall(rename('ArgGenlQuantityPredicate','ArgGenlQuanityPredicate')).
baseKB:cyc_to_plarkc('ArgGenlQuanityPredicate',rtArgGenlQuanityPredicate).
:-retractall(rn('granuleOfStuff-Generic',granuleOfStuff)).
:-retractall(rename(granuleOfStuff,'granuleOfStuff-Generic')).
baseKB:cyc_to_plarkc('granuleOfStuff-Generic',granuleOfStuffGeneric).
:-retractall(rn('compoundSemTrans-new',compoundSemTrans)).
:-retractall(rename(compoundSemTrans,'compoundSemTrans-new')).
baseKB:cyc_to_plarkc('compoundSemTrans-new',compoundSemTransnew).
:-retractall(rn('ScriptRelation','SituationTypeRelation')).
:-retractall(rename('SituationTypeRelation','ScriptRelation')).
baseKB:cyc_to_plarkc('ScriptRelation',rtScriptRelation).
:-retractall(rn('CycSystemRelation','KBDependentRelation')).
:-retractall(rename('KBDependentRelation','CycSystemRelation')).
baseKB:cyc_to_plarkc('CycSystemRelation',rtRelation).
:-retractall(rn('ConservativeGeneralizedQuantifier','GeneralizedQuantifierConservative')).
:-retractall(rename('GeneralizedQuantifierConservative','ConservativeGeneralizedQuantifier')).
baseKB:cyc_to_plarkc('ConservativeGeneralizedQuantifier',rtConservativeGeneralizedQuantifier).
:-retractall(rn('ExtensionalGeneralizedQuantifier','GeneralizedQuantifierExtensional')).
:-retractall(rename('GeneralizedQuantifierExtensional','ExtensionalGeneralizedQuantifier')).
baseKB:cyc_to_plarkc('ExtensionalGeneralizedQuantifier',rtExtensionalGeneralizedQuantifier).
:-retractall(rn('primaryFunction-AgnosticIntentional',primaryFunction)).
:-retractall(rename(primaryFunction,'primaryFunction-AgnosticIntentional')).
baseKB:cyc_to_plarkc('primaryFunction-AgnosticIntentional',primaryFunctionAgnosticIntentional).
:-retractall(rn('soleFunction-AgnosticIntentional',soleFunction)).
:-retractall(rename(soleFunction,'soleFunction-AgnosticIntentional')).
baseKB:cyc_to_plarkc('soleFunction-AgnosticIntentional',soleFunctionAgnosticIntentional).
:-retractall(rn('most-GenQuantRelnFromInstance',mostGenQuantRelnFrom)).
:-retractall(rename(mostGenQuantRelnFrom,'most-GenQuantRelnFromInstance')).
baseKB:cyc_to_plarkc('most-GenQuantRelnFromInstance',mostGenQuantRelnFromInstance).
:-retractall(rn('both-GenQuant',both)).
:-retractall(rename(both,'both-GenQuant')).
baseKB:cyc_to_plarkc('both-GenQuant',bothGenQuant).
:-retractall(rn('many-GenQuant',many)).
:-retractall(rename(many,'many-GenQuant')).
baseKB:cyc_to_plarkc('many-GenQuant',manyGenQuant).
:-retractall(rn('psRuleTemplateBindings-New',psRuleTemplateBindings)).
:-retractall(rename(psRuleTemplateBindings,'psRuleTemplateBindings-New')).
baseKB:cyc_to_plarkc('psRuleTemplateBindings-New',psRuleTemplateBindingsNew).
:-retractall(rn('TransitiveViaPredicate','TransitiveViaArgPredicate')).
:-retractall(rename('TransitiveViaArgPredicate','TransitiveViaPredicate')).
baseKB:cyc_to_plarkc('TransitiveViaPredicate',rtTransitiveViaPredicate).
:-retractall(rn('transportsTo-NEW',transportsTo)).
:-retractall(rename(transportsTo,'transportsTo-NEW')).
baseKB:cyc_to_plarkc('transportsTo-NEW',transportsToNEW).
:-retractall(rn('transports-NEW',transports)).
:-retractall(rename(transports,'transports-NEW')).
baseKB:cyc_to_plarkc('transports-NEW',transportsNEW).
:-retractall(rn('typesChemicalBondBetweenCapable-New',typesChemicalBondBetweenCapable)).
:-retractall(rename(typesChemicalBondBetweenCapable,'typesChemicalBondBetweenCapable-New')).
baseKB:cyc_to_plarkc('typesChemicalBondBetweenCapable-New',typesChemicalBondBetweenCapableNew).
:-retractall(rn('ActionQualifyingFunction','EventQualifyingFunction')).
:-retractall(rename('EventQualifyingFunction','ActionQualifyingFunction')).
baseKB:cyc_to_plarkc('ActionQualifyingFunction',rtActionQualifyingFunction).
:-retractall(rn('no-GenQuant',no)).
:-retractall(rename(no,'no-GenQuant')).
baseKB:cyc_to_plarkc('no-GenQuant',noGenQuant).
:-retractall(rn('SpecDenotingFunction','SubcollectionDenotingFunction')).
:-retractall(rename('SubcollectionDenotingFunction','SpecDenotingFunction')).
baseKB:cyc_to_plarkc('SpecDenotingFunction',rtSpecDenotingFunction).
:-retractall(rn('SceneDenotingFunction','SubSituationTypeDenotingFunction')).
:-retractall(rename('SubSituationTypeDenotingFunction','SceneDenotingFunction')).
baseKB:cyc_to_plarkc('SceneDenotingFunction',rtSceneDenotingFunction).
:-retractall(rn('SoftwareExpression',xtProgramExpression)).
:-retractall(rename(xtProgramExpression,'SoftwareExpression')).
baseKB:cyc_to_plarkc('SoftwareExpression',ftSoftwareExpression).
:-retractall(rn('WebSearchQuaternaryRuleMacroPredicate','WebSearchCollectionInstanceRuleMacroPredicateQuaternary')).
:-retractall(rename('WebSearchCollectionInstanceRuleMacroPredicateQuaternary','WebSearchQuaternaryRuleMacroPredicate')).
baseKB:cyc_to_plarkc('WebSearchQuaternaryRuleMacroPredicate',rtWebSearchQuaternaryRuleMacroPredicate).
:-retractall(rn('WebSearchTernaryRuleMacroPredicate','WebSearchCollectionInstanceRuleMacroPredicateTernary')).
:-retractall(rename('WebSearchCollectionInstanceRuleMacroPredicateTernary','WebSearchTernaryRuleMacroPredicate')).
baseKB:cyc_to_plarkc('WebSearchTernaryRuleMacroPredicate',rtWebSearchTernaryRuleMacroPredicate).
:-retractall(rn('NonPredicateTruthFunction','SententialRelation')).
:-retractall(rename('SententialRelation','NonPredicateTruthFunction')).
baseKB:cyc_to_plarkc('NonPredicateTruthFunction',rtNonPredicateTruthFunction).
:-retractall(rn('echelonOfUnit-Coll',echelonOfUnit)).
:-retractall(rename(echelonOfUnit,'echelonOfUnit-Coll')).
baseKB:cyc_to_plarkc('echelonOfUnit-Coll',echelonOfUnitColl).
:-retractall(rn('governmentType-Coll',governmentType)).
:-retractall(rename(governmentType,'governmentType-Coll')).
baseKB:cyc_to_plarkc('governmentType-Coll',governmentTypeColl).
:-retractall(rn('jobPositionOpeningStatus-Coll',jobPositionOpeningStatus)).
:-retractall(rename(jobPositionOpeningStatus,'jobPositionOpeningStatus-Coll')).
baseKB:cyc_to_plarkc('jobPositionOpeningStatus-Coll',jobPositionOpeningStatusColl).
:-retractall(rn('classificationOfInformation-Coll',classificationOfInformation)).
:-retractall(rename(classificationOfInformation,'classificationOfInformation-Coll')).
baseKB:cyc_to_plarkc('classificationOfInformation-Coll',classificationOfInformationColl).
:-retractall(rn('designationOfInformation-Coll',designationOfInformation)).
:-retractall(rename(designationOfInformation,'designationOfInformation-Coll')).
baseKB:cyc_to_plarkc('designationOfInformation-Coll',designationOfInformationColl).
:-retractall(rn('designationOfThing-Coll',designationOfThing)).
:-retractall(rename(designationOfThing,'designationOfThing-Coll')).
baseKB:cyc_to_plarkc('designationOfThing-Coll',designationOfThingColl).
:-retractall(rn('conversationStatus-Coll',conversationStatus)).
:-retractall(rename(conversationStatus,'conversationStatus-Coll')).
baseKB:cyc_to_plarkc('conversationStatus-Coll',conversationStatusColl).
:-retractall(rn('positionStatusOfArea-Coll',positionStatusOfArea)).
:-retractall(rename(positionStatusOfArea,'positionStatusOfArea-Coll')).
baseKB:cyc_to_plarkc('positionStatusOfArea-Coll',positionStatusOfAreaColl).
:-retractall(rn('movieAdvisoryRating-Coll',movieAdvisoryRating)).
:-retractall(rename(movieAdvisoryRating,'movieAdvisoryRating-Coll')).
baseKB:cyc_to_plarkc('movieAdvisoryRating-Coll',movieAdvisoryRatingColl).
:-retractall(rn('featureOfPathArtifact-Coll',featureOfPathArtifact)).
:-retractall(rename(featureOfPathArtifact,'featureOfPathArtifact-Coll')).
baseKB:cyc_to_plarkc('featureOfPathArtifact-Coll',featureOfPathArtifactColl).
:-retractall(rn('nucleicAcidSequenceConnectivity-Coll',nucleicAcidSequenceConnectivity)).
:-retractall(rename(nucleicAcidSequenceConnectivity,'nucleicAcidSequenceConnectivity-Coll')).
baseKB:cyc_to_plarkc('nucleicAcidSequenceConnectivity-Coll',nucleicAcidSequenceConnectivityColl).
:-retractall(rn('illuminationLevel-Coll',illuminationLevel)).
:-retractall(rename(illuminationLevel,'illuminationLevel-Coll')).
baseKB:cyc_to_plarkc('illuminationLevel-Coll',illuminationLevelColl).
:-retractall(rn('transparencyOfObject-Coll',transparencyOfObject)).
:-retractall(rename(transparencyOfObject,'transparencyOfObject-Coll')).
baseKB:cyc_to_plarkc('transparencyOfObject-Coll',transparencyOfObjectColl).
:-retractall(rn('resistanceToBioDeterioration-Coll',resistanceToBioDeterioration)).
:-retractall(rename(resistanceToBioDeterioration,'resistanceToBioDeterioration-Coll')).
baseKB:cyc_to_plarkc('resistanceToBioDeterioration-Coll',resistanceToBioDeteriorationColl).
:-retractall(rn('impactAbsorptionOfObject-Coll',impactAbsorptionOfObject)).
:-retractall(rename(impactAbsorptionOfObject,'impactAbsorptionOfObject-Coll')).
baseKB:cyc_to_plarkc('impactAbsorptionOfObject-Coll',impactAbsorptionOfObjectColl).
:-retractall(rn('colorHasHue-Coll',colorHasHue)).
:-retractall(rename(colorHasHue,'colorHasHue-Coll')).
baseKB:cyc_to_plarkc('colorHasHue-Coll',colorHasHueColl).
:-retractall(rn('colorHasBrightness-Coll',colorHasBrightness)).
:-retractall(rename(colorHasBrightness,'colorHasBrightness-Coll')).
baseKB:cyc_to_plarkc('colorHasBrightness-Coll',colorHasBrightnessColl).
:-retractall(rn('colorHasChroma-Coll',colorHasChroma)).
:-retractall(rename(colorHasChroma,'colorHasChroma-Coll')).
baseKB:cyc_to_plarkc('colorHasChroma-Coll',colorHasChromaColl).
:-retractall(rn('hasOrbitalPathClass-Coll',hasOrbitalPathClass)).
:-retractall(rename(hasOrbitalPathClass,'hasOrbitalPathClass-Coll')).
baseKB:cyc_to_plarkc('hasOrbitalPathClass-Coll',hasOrbitalPathClassColl).
:-retractall(rn('complexityOfConfiguration-Coll',complexityOfConfiguration)).
:-retractall(rename(complexityOfConfiguration,'complexityOfConfiguration-Coll')).
baseKB:cyc_to_plarkc('complexityOfConfiguration-Coll',complexityOfConfigurationColl).
:-retractall(rn('uniformColorOfObject-Coll',uniformColorOfObject)).
:-retractall(rename(uniformColorOfObject,'uniformColorOfObject-Coll')).
baseKB:cyc_to_plarkc('uniformColorOfObject-Coll',uniformColorOfObjectColl).
:-retractall(rn('mainColorOfObject-Coll',mainColorOfObject)).
:-retractall(rename(mainColorOfObject,'mainColorOfObject-Coll')).
baseKB:cyc_to_plarkc('mainColorOfObject-Coll',mainColorOfObjectColl).
:-retractall(rn('significantColorOfObject-Coll',significantColorOfObject)).
:-retractall(rename(significantColorOfObject,'significantColorOfObject-Coll')).
baseKB:cyc_to_plarkc('significantColorOfObject-Coll',significantColorOfObjectColl).
:-retractall(rn('rightsGranted-Coll',rightsGranted)).
:-retractall(rename(rightsGranted,'rightsGranted-Coll')).
baseKB:cyc_to_plarkc('rightsGranted-Coll',rightsGrantedColl).
:-retractall(rn('accountStatus-Coll',accountStatus)).
:-retractall(rename(accountStatus,'accountStatus-Coll')).
baseKB:cyc_to_plarkc('accountStatus-Coll',accountStatusColl).
:-retractall(rn('proposalStatus-Coll',proposalStatus)).
:-retractall(rename(proposalStatus,'proposalStatus-Coll')).
baseKB:cyc_to_plarkc('proposalStatus-Coll',proposalStatusColl).
:-retractall(rn('locationState-Coll',locationState)).
:-retractall(rename(locationState,'locationState-Coll')).
baseKB:cyc_to_plarkc('locationState-Coll',locationStateColl).
:-retractall(rn('activityCriticality-Coll',activityCriticality)).
:-retractall(rename(activityCriticality,'activityCriticality-Coll')).
baseKB:cyc_to_plarkc('activityCriticality-Coll',activityCriticalityColl).
:-retractall(rn('financialState-Coll',financialState)).
:-retractall(rename(financialState,'financialState-Coll')).
baseKB:cyc_to_plarkc('financialState-Coll',financialStateColl).
:-retractall(rn('levelOfEncryption-Coll',levelOfEncryption)).
:-retractall(rename(levelOfEncryption,'levelOfEncryption-Coll')).
baseKB:cyc_to_plarkc('levelOfEncryption-Coll',levelOfEncryptionColl).
:-retractall(rn('levelOfSecurity-Coll',levelOfSecurity)).
:-retractall(rename(levelOfSecurity,'levelOfSecurity-Coll')).
baseKB:cyc_to_plarkc('levelOfSecurity-Coll',levelOfSecurityColl).
:-retractall(rn('hasNumberingSchema-Coll',hasNumberingSchema)).
:-retractall(rename(hasNumberingSchema,'hasNumberingSchema-Coll')).
baseKB:cyc_to_plarkc('hasNumberingSchema-Coll',hasNumberingSchemaColl).
:-retractall(rn('architecturalStyle-Coll',architecturalStyle)).
:-retractall(rename(architecturalStyle,'architecturalStyle-Coll')).
baseKB:cyc_to_plarkc('architecturalStyle-Coll',architecturalStyleColl).
:-retractall(rn('artisticStyle-Coll',artisticStyle)).
:-retractall(rename(artisticStyle,'artisticStyle-Coll')).
baseKB:cyc_to_plarkc('artisticStyle-Coll',artisticStyleColl).
:-retractall(rn('clothingStyle-Coll',clothingStyle)).
:-retractall(rename(clothingStyle,'clothingStyle-Coll')).
baseKB:cyc_to_plarkc('clothingStyle-Coll',clothingStyleColl).
:-retractall(rn('hasStyle-Coll',hasStyle)).
:-retractall(rename(hasStyle,'hasStyle-Coll')).
baseKB:cyc_to_plarkc('hasStyle-Coll',hasStyleColl).
:-retractall(rn('mtAnthropacity-Coll',mtAnthropacity)).
:-retractall(rename(mtAnthropacity,'mtAnthropacity-Coll')).
baseKB:cyc_to_plarkc('mtAnthropacity-Coll',mtAnthropacityColl).
:-retractall(rn('organismsExistentialState-Coll',organismsExistentialState)).
:-retractall(rename(organismsExistentialState,'organismsExistentialState-Coll')).
baseKB:cyc_to_plarkc('organismsExistentialState-Coll',organismsExistentialStateColl).
:-retractall(rn('agentsExistentialState-Coll',agentsExistentialState)).
:-retractall(rename(agentsExistentialState,'agentsExistentialState-Coll')).
baseKB:cyc_to_plarkc('agentsExistentialState-Coll',agentsExistentialStateColl).
:-retractall(rn('constructionExistentialState-Coll',constructionExistentialState)).
:-retractall(rename(constructionExistentialState,'constructionExistentialState-Coll')).
baseKB:cyc_to_plarkc('constructionExistentialState-Coll',constructionExistentialStateColl).
:-retractall(rn('datingStatus-Coll',datingStatus)).
:-retractall(rename(datingStatus,'datingStatus-Coll')).
baseKB:cyc_to_plarkc('datingStatus-Coll',datingStatusColl).
:-retractall(rn('maritalStatus-Coll',maritalStatus)).
:-retractall(rename(maritalStatus,'maritalStatus-Coll')).
baseKB:cyc_to_plarkc('maritalStatus-Coll',maritalStatusColl).
:-retractall(rn('skinColor-Coll',skinColor)).
:-retractall(rename(skinColor,'skinColor-Coll')).
baseKB:cyc_to_plarkc('skinColor-Coll',skinColorColl).
:-retractall(rn('eventHasStyle-Coll',eventHasStyle)).
:-retractall(rename(eventHasStyle,'eventHasStyle-Coll')).
baseKB:cyc_to_plarkc('eventHasStyle-Coll',eventHasStyleColl).
:-retractall(rn('processorArchitectureOfComputer-Coll',processorArchitectureOfComputer)).
:-retractall(rename(processorArchitectureOfComputer,'processorArchitectureOfComputer-Coll')).
baseKB:cyc_to_plarkc('processorArchitectureOfComputer-Coll',processorArchitectureOfComputerColl).
:-retractall(rn('tasteOfObject-Coll',tasteOfObject)).
:-retractall(rename(tasteOfObject,'tasteOfObject-Coll')).
baseKB:cyc_to_plarkc('tasteOfObject-Coll',tasteOfObjectColl).
:-retractall(rn('objectEmitsOdor-Coll',objectEmitsOdor)).
:-retractall(rename(objectEmitsOdor,'objectEmitsOdor-Coll')).
baseKB:cyc_to_plarkc('objectEmitsOdor-Coll',objectEmitsOdorColl).
:-retractall(rn('placeHasOdor-Coll',placeHasOdor)).
:-retractall(rename(placeHasOdor,'placeHasOdor-Coll')).
baseKB:cyc_to_plarkc('placeHasOdor-Coll',placeHasOdorColl).
:-retractall(rn('hasSecurityClearance-Coll',hasSecurityClearance)).
:-retractall(rename(hasSecurityClearance,'hasSecurityClearance-Coll')).
baseKB:cyc_to_plarkc('hasSecurityClearance-Coll',hasSecurityClearanceColl).
:-retractall(rn('classificationOfReport-Coll',classificationOfReport)).
:-retractall(rename(classificationOfReport,'classificationOfReport-Coll')).
baseKB:cyc_to_plarkc('classificationOfReport-Coll',classificationOfReportColl).
:-retractall(rn('reliabilityOfReportSources-Coll',reliabilityOfReportSources)).
:-retractall(rename(reliabilityOfReportSources,'reliabilityOfReportSources-Coll')).
baseKB:cyc_to_plarkc('reliabilityOfReportSources-Coll',reliabilityOfReportSourcesColl).
:-retractall(rn('loanTermOptions-Coll',loanTermOptions)).
:-retractall(rename(loanTermOptions,'loanTermOptions-Coll')).
baseKB:cyc_to_plarkc('loanTermOptions-Coll',loanTermOptionsColl).
:-retractall(rn('loanDedication-Coll',loanDedication)).
:-retractall(rename(loanDedication,'loanDedication-Coll')).
baseKB:cyc_to_plarkc('loanDedication-Coll',loanDedicationColl).
:-retractall(rn('loanInterestOptions-Coll',loanInterestOptions)).
:-retractall(rename(loanInterestOptions,'loanInterestOptions-Coll')).
baseKB:cyc_to_plarkc('loanInterestOptions-Coll',loanInterestOptionsColl).
:-retractall(rn('loanPrincipal-Coll',loanPrincipal)).
:-retractall(rename(loanPrincipal,'loanPrincipal-Coll')).
baseKB:cyc_to_plarkc('loanPrincipal-Coll',loanPrincipalColl).
:-retractall(rn('styleOfMusicPerformer-Coll',styleOfMusicPerformer)).
:-retractall(rename(styleOfMusicPerformer,'styleOfMusicPerformer-Coll')).
baseKB:cyc_to_plarkc('styleOfMusicPerformer-Coll',styleOfMusicPerformerColl).
:-retractall(rn('styleOfArtist-Coll',styleOfArtist)).
:-retractall(rename(styleOfArtist,'styleOfArtist-Coll')).
baseKB:cyc_to_plarkc('styleOfArtist-Coll',styleOfArtistColl).
:-retractall(rn('localOrganizationOpennessState-Coll',localOrganizationOpennessState)).
:-retractall(rename(localOrganizationOpennessState,'localOrganizationOpennessState-Coll')).
baseKB:cyc_to_plarkc('localOrganizationOpennessState-Coll',localOrganizationOpennessStateColl).
:-retractall(rn('hasZodiacSign-Coll',hasZodiacSign)).
:-retractall(rename(hasZodiacSign,'hasZodiacSign-Coll')).
baseKB:cyc_to_plarkc('hasZodiacSign-Coll',hasZodiacSignColl).
:-retractall(rn('portalState-Coll',portalState)).
:-retractall(rename(portalState,'portalState-Coll')).
baseKB:cyc_to_plarkc('portalState-Coll',portalStateColl).
:-retractall(rn('softwareFeatures-Coll',softwareFeatures)).
:-retractall(rename(softwareFeatures,'softwareFeatures-Coll')).
baseKB:cyc_to_plarkc('softwareFeatures-Coll',softwareFeaturesColl).
:-retractall(rn('stateOfHealth-Coll',stateOfHealth)).
:-retractall(rename(stateOfHealth,'stateOfHealth-Coll')).
baseKB:cyc_to_plarkc('stateOfHealth-Coll',stateOfHealthColl).
:-retractall(rn('stateOfDevice-Coll',stateOfDevice)).
:-retractall(rename(stateOfDevice,'stateOfDevice-Coll')).
baseKB:cyc_to_plarkc('stateOfDevice-Coll',stateOfDeviceColl).
:-retractall(rn('lockState-Coll',lockState)).
:-retractall(rename(lockState,'lockState-Coll')).
baseKB:cyc_to_plarkc('lockState-Coll',lockStateColl).
:-retractall(rn('bodyHairLevel-Coll',bodyHairLevel)).
:-retractall(rename(bodyHairLevel,'bodyHairLevel-Coll')).
baseKB:cyc_to_plarkc('bodyHairLevel-Coll',bodyHairLevelColl).
:-retractall(rn('postureOfAnimal-Coll',postureOfAnimal)).
:-retractall(rename(postureOfAnimal,'postureOfAnimal-Coll')).
baseKB:cyc_to_plarkc('postureOfAnimal-Coll',postureOfAnimalColl).
:-retractall(rn('executePrivilegeOfProgramCopy-Coll',executePrivilegeOfProgramCopy)).
:-retractall(rename(executePrivilegeOfProgramCopy,'executePrivilegeOfProgramCopy-Coll')).
baseKB:cyc_to_plarkc('executePrivilegeOfProgramCopy-Coll',executePrivilegeOfProgramCopyColl).
:-retractall(rn('activityState-Coll',activityState)).
:-retractall(rename(activityState,'activityState-Coll')).
baseKB:cyc_to_plarkc('activityState-Coll',activityStateColl).
:-retractall(rn('movieGenres-Coll',movieGenres)).
:-retractall(rename(movieGenres,'movieGenres-Coll')).
baseKB:cyc_to_plarkc('movieGenres-Coll',movieGenresColl).
:-retractall(rn('cwGenre-Coll',cwGenre)).
:-retractall(rename(cwGenre,'cwGenre-Coll')).
baseKB:cyc_to_plarkc('cwGenre-Coll',cwGenreColl).
:-retractall(rn('listHasFormat-Coll',listHasFormat)).
:-retractall(rename(listHasFormat,'listHasFormat-Coll')).
baseKB:cyc_to_plarkc('listHasFormat-Coll',listHasFormatColl).
:-retractall(rn('listHasOrder-Coll',listHasOrder)).
:-retractall(rename(listHasOrder,'listHasOrder-Coll')).
baseKB:cyc_to_plarkc('listHasOrder-Coll',listHasOrderColl).
:-retractall(rn('classificationOfOrder-Coll',classificationOfOrder)).
:-retractall(rename(classificationOfOrder,'classificationOfOrder-Coll')).
baseKB:cyc_to_plarkc('classificationOfOrder-Coll',classificationOfOrderColl).
:-retractall(rn('workload-Coll',workload)).
:-retractall(rename(workload,'workload-Coll')).
baseKB:cyc_to_plarkc('workload-Coll',workloadColl).
:-retractall(rn('rank-Military-Coll',rankMilitary)).
:-retractall(rename(rankMilitary,'rank-Military-Coll')).
baseKB:cyc_to_plarkc('rank-Military-Coll',rankMilitaryColl).
:-retractall(rn('troopStrengthOfUnit-Coll',troopStrengthOfUnit)).
:-retractall(rename(troopStrengthOfUnit,'troopStrengthOfUnit-Coll')).
baseKB:cyc_to_plarkc('troopStrengthOfUnit-Coll',troopStrengthOfUnitColl).
:-retractall(rn('hasComplementaryBasePairingProperty-Coll',hasComplementaryBasePairingProperty)).
:-retractall(rename(hasComplementaryBasePairingProperty,'hasComplementaryBasePairingProperty-Coll')).
baseKB:cyc_to_plarkc('hasComplementaryBasePairingProperty-Coll',hasComplementaryBasePairingPropertyColl).
:-retractall(rn('verdict-Coll',verdict)).
:-retractall(rename(verdict,'verdict-Coll')).
baseKB:cyc_to_plarkc('verdict-Coll',verdictColl).
:-retractall(rn('COAEvaluationPredicate','COAEvaluationDimension')).
:-retractall(rename('COAEvaluationDimension','COAEvaluationPredicate')).
baseKB:cyc_to_plarkc('COAEvaluationPredicate',rtCOAEvaluationPredicate).
:-retractall(rn('objectHasColor-Coll',objectHasColor)).
:-retractall(rename(objectHasColor,'objectHasColor-Coll')).
baseKB:cyc_to_plarkc('objectHasColor-Coll',objectHasColorColl).
:-retractall(rn('ScriptRoleConstraintPredicate','SituationTypeRoleConstraintPredicate')).
:-retractall(rename('SituationTypeRoleConstraintPredicate','ScriptRoleConstraintPredicate')).
baseKB:cyc_to_plarkc('ScriptRoleConstraintPredicate',rtScriptRoleConstraintPredicate).
:-retractall(rn('AbductionRelation','UnderstandingEnrichmentRelation')).
:-retractall(rename('UnderstandingEnrichmentRelation','AbductionRelation')).
baseKB:cyc_to_plarkc('AbductionRelation',rtAbductionRelation).
:-retractall(rn('typeHasStyle-Coll',typeHasStyle)).
:-retractall(rename(typeHasStyle,'typeHasStyle-Coll')).
baseKB:cyc_to_plarkc('typeHasStyle-Coll',typeHasStyleColl).
:-retractall(rn('hairColor-Coll',hairColor)).
:-retractall(rename(hairColor,'hairColor-Coll')).
baseKB:cyc_to_plarkc('hairColor-Coll',hairColorColl).
:-retractall(rn('followingValueOnScale-Coll',followingValueOnScale)).
:-retractall(rename(followingValueOnScale,'followingValueOnScale-Coll')).
baseKB:cyc_to_plarkc('followingValueOnScale-Coll',followingValueOnScaleColl).
:-retractall(rn('sizeOfBedding-Coll',sizeOfBedding)).
:-retractall(rename(sizeOfBedding,'sizeOfBedding-Coll')).
baseKB:cyc_to_plarkc('sizeOfBedding-Coll',sizeOfBeddingColl).
:-retractall(rn('sizeOfBed-Coll',sizeOfBed)).
:-retractall(rename(sizeOfBed,'sizeOfBed-Coll')).
baseKB:cyc_to_plarkc('sizeOfBed-Coll',sizeOfBedColl).
:-retractall(rn('schooling-Coll',schooling)).
:-retractall(rename(schooling,'schooling-Coll')).
baseKB:cyc_to_plarkc('schooling-Coll',schoolingColl).
:-retractall(rn('educationLevel-Coll',educationLevel)).
:-retractall(rename(educationLevel,'educationLevel-Coll')).
baseKB:cyc_to_plarkc('educationLevel-Coll',educationLevelColl).
:-retractall(rn('humanMeasurements-Coll',humanMeasurements)).
:-retractall(rename(humanMeasurements,'humanMeasurements-Coll')).
baseKB:cyc_to_plarkc('humanMeasurements-Coll',humanMeasurementsColl).
:-retractall(rn('clothingSize-Coll',clothingSize)).
:-retractall(rename(clothingSize,'clothingSize-Coll')).
baseKB:cyc_to_plarkc('clothingSize-Coll',clothingSizeColl).
:-retractall(rn('ploidy-Organism-Coll',ploidyOrganism)).
:-retractall(rename(ploidyOrganism,'ploidy-Organism-Coll')).
baseKB:cyc_to_plarkc('ploidy-Organism-Coll',ploidyOrganismColl).
:-retractall(rn('clothingTypeFormality-Coll',clothingTypeFormality)).
:-retractall(rename(clothingTypeFormality,'clothingTypeFormality-Coll')).
baseKB:cyc_to_plarkc('clothingTypeFormality-Coll',clothingTypeFormalityColl).
:-retractall(rn('clothingFormality-Coll',clothingFormality)).
:-retractall(rename(clothingFormality,'clothingFormality-Coll')).
baseKB:cyc_to_plarkc('clothingFormality-Coll',clothingFormalityColl).
:-retractall(rn('colorOfType-Coll',colorOfType)).
:-retractall(rename(colorOfType,'colorOfType-Coll')).
baseKB:cyc_to_plarkc('colorOfType-Coll',colorOfTypeColl).
:-retractall(rn('stateOfAilment-Coll',stateOfAilment)).
:-retractall(rename(stateOfAilment,'stateOfAilment-Coll')).
baseKB:cyc_to_plarkc('stateOfAilment-Coll',stateOfAilmentColl).
:-retractall(rn('userRightsRelation-Coll',userRightsRelation)).
:-retractall(rename(userRightsRelation,'userRightsRelation-Coll')).
baseKB:cyc_to_plarkc('userRightsRelation-Coll',userRightsRelationColl).
:-retractall(rn('softwareDesignedForArchitecture-Coll',softwareDesignedForArchitecture)).
:-retractall(rename(softwareDesignedForArchitecture,'softwareDesignedForArchitecture-Coll')).
baseKB:cyc_to_plarkc('softwareDesignedForArchitecture-Coll',softwareDesignedForArchitectureColl).
:-retractall(rn('zodiacSignDateRange-Coll',zodiacSignDateRange)).
:-retractall(rename(zodiacSignDateRange,'zodiacSignDateRange-Coll')).
baseKB:cyc_to_plarkc('zodiacSignDateRange-Coll',zodiacSignDateRangeColl).
:-retractall(rn('succeedingValueOnScale-Coll',succeedingValueOnScale)).
:-retractall(rename(succeedingValueOnScale,'succeedingValueOnScale-Coll')).
baseKB:cyc_to_plarkc('succeedingValueOnScale-Coll',succeedingValueOnScaleColl).
:-retractall(rn('followingOrEqualValueOnScale-Coll',followingOrEqualValueOnScale)).
:-retractall(rename(followingOrEqualValueOnScale,'followingOrEqualValueOnScale-Coll')).
baseKB:cyc_to_plarkc('followingOrEqualValueOnScale-Coll',followingOrEqualValueOnScaleColl).
:-retractall(rn('hungerLevelOf-Coll',hungerLevelOf)).
:-retractall(rename(hungerLevelOf,'hungerLevelOf-Coll')).
baseKB:cyc_to_plarkc('hungerLevelOf-Coll',hungerLevelOfColl).
:-retractall(rn('InterArgExactIsaPredicate','InterArgEqualsIsaPredicate')).
:-retractall(rename('InterArgEqualsIsaPredicate','InterArgExactIsaPredicate')).
baseKB:cyc_to_plarkc('InterArgExactIsaPredicate',rtInterArgExactIsaPredicate).
:-retractall(rn('ScriptProcessingEventPredicate','SituationTypeProcessingEventPredicate')).
:-retractall(rename('SituationTypeProcessingEventPredicate','ScriptProcessingEventPredicate')).
baseKB:cyc_to_plarkc('ScriptProcessingEventPredicate',rtScriptProcessingEventPredicate).
:-retractall(rn('flawAccordingToAgent-Coll',flawAccordingToAgent)).
:-retractall(rename(flawAccordingToAgent,'flawAccordingToAgent-Coll')).
baseKB:cyc_to_plarkc('flawAccordingToAgent-Coll',flawAccordingToAgentColl).
:-retractall(rn('DiscourseStructurePredicate','DiscourseStructureBinaryRole')).
:-retractall(rename('DiscourseStructureBinaryRole','DiscourseStructurePredicate')).
baseKB:cyc_to_plarkc('DiscourseStructurePredicate',rtDiscourseStructurePredicate).
:-retractall(rn('participantStatus-Coll',participantStatus)).
:-retractall(rename(participantStatus,'participantStatus-Coll')).
baseKB:cyc_to_plarkc('participantStatus-Coll',participantStatusColl).
:-retractall(rn('ScriptFunction','SituationTypeFunction')).
:-retractall(rename('SituationTypeFunction','ScriptFunction')).
baseKB:cyc_to_plarkc('ScriptFunction',rtScriptFunction).
:-retractall(rn('ScriptRelation-Scenes-Type','SituationTypeRelationSubSitTypesType')).
:-retractall(rename('SituationTypeRelationSubSitTypesType','ScriptRelation-Scenes-Type')).
baseKB:cyc_to_plarkc('ScriptRelation-Scenes-Type',ttScriptRelationScenesType).
:-retractall(rn('ScriptRelation-Predicate','SituationTypeRelationPredicate')).
:-retractall(rename('SituationTypeRelationPredicate','ScriptRelation-Predicate')).
baseKB:cyc_to_plarkc('ScriptRelation-Predicate',rtScriptRelationPredicate).
:-retractall(rn('RenderingPropertyPredicate','GraphRenderingPropertyPredicate')).
:-retractall(rename('GraphRenderingPropertyPredicate','RenderingPropertyPredicate')).
baseKB:cyc_to_plarkc('RenderingPropertyPredicate',rtRenderingPropertyPredicate).
:-retractall(rn('SharedElementPredicate','AristotelianPredicate')).
:-retractall(rename('AristotelianPredicate','SharedElementPredicate')).
baseKB:cyc_to_plarkc('SharedElementPredicate',rtSharedElementPredicate).
:-retractall(rn('TemporalExistenceEntailingPredicate','TemporalExistencePredicate')).
:-retractall(rename('TemporalExistencePredicate','TemporalExistenceEntailingPredicate')).
baseKB:cyc_to_plarkc('TemporalExistenceEntailingPredicate',rtTemporalExistenceEntailingPredicate).
:-retractall(rn('OnceTrueTrueTillDeathOfAnArgPredicate','TerminalCoexistencePredicate')).
:-retractall(rename('TerminalCoexistencePredicate','OnceTrueTrueTillDeathOfAnArgPredicate')).
baseKB:cyc_to_plarkc('OnceTrueTrueTillDeathOfAnArgPredicate',rtOnceTrueTrueTillDeathOfAnArgPredicate).
:-retractall(rn('ExperimentalSitTypePredicate','ExperimentalSitTypeRelation')).
:-retractall(rename('ExperimentalSitTypeRelation','ExperimentalSitTypePredicate')).
baseKB:cyc_to_plarkc('ExperimentalSitTypePredicate',rtExperimentalSitTypePredicate).
:-retractall(rn('FacetPredicate','FacetingCollectionTypePredicate')).
:-retractall(rename('FacetingCollectionTypePredicate','FacetPredicate')).
baseKB:cyc_to_plarkc('FacetPredicate',rtFacetPredicate).
:-retractall(rn('wordIndexesCycTerm-IR',wordIndexesCycTerm)).
:-retractall(rename(wordIndexesCycTerm,'wordIndexesCycTerm-IR')).
baseKB:cyc_to_plarkc('wordIndexesCycTerm-IR',wordIndexesCycTermIR).
:-retractall(rn('CoExistenceRelation','CoexistenceRelation')).
:-retractall(rename('CoexistenceRelation','CoExistenceRelation')).
baseKB:cyc_to_plarkc('CoExistenceRelation',rtCoExistenceRelation).
:-retractall(rn('SKSISupportedMathFunction','SKSISupportedFunction')).
:-retractall(rename('SKSISupportedFunction','SKSISupportedMathFunction')).
baseKB:cyc_to_plarkc('SKSISupportedMathFunction',rtSKSISupportedMathFunction).
:-retractall(rn('suspects-Prop',suspects)).
:-retractall(rename(suspects,'suspects-Prop')).
baseKB:cyc_to_plarkc('suspects-Prop',suspectsProp).
:-retractall(rn('UnaryEvalautionPredicate','UnaryEvaluationPredicate')).
:-retractall(rename('UnaryEvaluationPredicate','UnaryEvalautionPredicate')).
baseKB:cyc_to_plarkc('UnaryEvalautionPredicate',rtUnaryEvalautionPredicate).
:-retractall(rn('SOEGraphablePredicate','SOEDefaultGraphablePredicate')).
:-retractall(rename('SOEDefaultGraphablePredicate','SOEGraphablePredicate')).
baseKB:cyc_to_plarkc('SOEGraphablePredicate',rtSOEGraphablePredicate).
:-retractall(rn('AgentDataSentencePredicate','TermSummaryPredicate')).
:-retractall(rename('TermSummaryPredicate','AgentDataSentencePredicate')).
baseKB:cyc_to_plarkc('AgentDataSentencePredicate',rtAgentDataSentencePredicate).
:-retractall(rn('EventLocationAndDatePredicate','EventDateAndLocationPredicate')).
:-retractall(rename('EventDateAndLocationPredicate','EventLocationAndDatePredicate')).
baseKB:cyc_to_plarkc('EventLocationAndDatePredicate',rtEventLocationAndDatePredicate).
:-retractall(rn('RCCRelation','RCCBinaryPredicate')).
:-retractall(rename('RCCBinaryPredicate','RCCRelation')).
baseKB:cyc_to_plarkc('RCCRelation',rtRCCRelation).
:-retractall(rn('contractee-New',contractee)).
:-retractall(rename(contractee,'contractee-New')).
baseKB:cyc_to_plarkc('contractee-New',contracteeNew).
:-retractall(rn('intervalOfTypeLiesBetween-Exclusive-New',intervalOfTypeLiesBetweenExclusive)).
:-retractall(rename(intervalOfTypeLiesBetweenExclusive,'intervalOfTypeLiesBetween-Exclusive-New')).
baseKB:cyc_to_plarkc('intervalOfTypeLiesBetween-Exclusive-New',intervalOfTypeLiesBetweenExclusiveNew).
:-retractall(rn('defaultTinyIconTermImagePathnameForType-TillDeathOfAnArg-AnySolidColorOtherThanBlackVariety',defaultTinyIconTermImagePathnameForType)).
:-retractall(rename(defaultTinyIconTermImagePathnameForType,'defaultTinyIconTermImagePathnameForType-TillDeathOfAnArg-AnySolidColorOtherThanBlackVariety')).
baseKB:cyc_to_plarkc('defaultTinyIconTermImagePathnameForType-TillDeathOfAnArg-AnySolidColorOtherThanBlackVariety',defaultTinyIconTermImagePathnameForTypeTillDeathOfAnArgAnySolidColorOtherThanBlackVariety).
:-retractall(rn('TemporallyQualifiableRelation','TimeDependentRelation')).
:-retractall(rename('TimeDependentRelation','TemporallyQualifiableRelation')).
baseKB:cyc_to_plarkc('TemporallyQualifiableRelation',rtTemporallyQualifiableRelation).
:-retractall(rn('TimeDependentRelation','TemporallyQualifiableRelation')).
:-retractall(rename('TemporallyQualifiableRelation','TimeDependentRelation')).
baseKB:cyc_to_plarkc('TimeDependentRelation',rtTimeDependentRelation).
:-retractall(rn('ShapeTypeFunction','GeometricShapeTypeBySizeFunction')).
:-retractall(rename('GeometricShapeTypeBySizeFunction','ShapeTypeFunction')).
baseKB:cyc_to_plarkc('ShapeTypeFunction',rtShapeTypeFunction).
:-retractall(rn('EventCasualtyPredicate','CasualtyPredicate')).
:-retractall(rename('CasualtyPredicate','EventCasualtyPredicate')).
baseKB:cyc_to_plarkc('EventCasualtyPredicate',rtEventCasualtyPredicate).
:-retractall(rn('CasualtyDesignatingPredicate','AgentCasualtyPredicate')).
:-retractall(rename('AgentCasualtyPredicate','CasualtyDesignatingPredicate')).
baseKB:cyc_to_plarkc('CasualtyDesignatingPredicate',rtCasualtyDesignatingPredicate).
:-retractall(rn('GeographicalRegionPredicate','GeoRegionToGeoRegionPredicate')).
:-retractall(rename('GeoRegionToGeoRegionPredicate','GeographicalRegionPredicate')).
baseKB:cyc_to_plarkc('GeographicalRegionPredicate',rtGeographicalRegionPredicate).
:-retractall(rn('SystemEntityPropertyFunction','PhysicalQuantityOrVectorFunction')).
:-retractall(rename('PhysicalQuantityOrVectorFunction','SystemEntityPropertyFunction')).
baseKB:cyc_to_plarkc('SystemEntityPropertyFunction',rtSystemEntityPropertyFunction).
:-retractall(rn('probabilityOfSet-Generic',probabilityOfSet)).
:-retractall(rename(probabilityOfSet,'probabilityOfSet-Generic')).
baseKB:cyc_to_plarkc('probabilityOfSet-Generic',probabilityOfSetGeneric).
:-retractall(rn('probability-Numeric',probability)).
:-retractall(rename(probability,'probability-Numeric')).
baseKB:cyc_to_plarkc('probability-Numeric',probabilityNumeric).
:-retractall(rn('WordNetSpeechPartType',ttWordNetSpeechPart)).
:-retractall(rename(ttWordNetSpeechPart,'WordNetSpeechPartType')).
baseKB:cyc_to_plarkc('WordNetSpeechPartType',ttWordNetSpeechPartType).
:-retractall(rn('kineticEnergyOfObject-Translational',kineticEnergyOfObject)).
:-retractall(rename(kineticEnergyOfObject,'kineticEnergyOfObject-Translational')).
baseKB:cyc_to_plarkc('kineticEnergyOfObject-Translational',kineticEnergyOfObjectTranslational).
:-retractall(rn('evincesGAF-Generic',evincesGAF)).
:-retractall(rename(evincesGAF,'evincesGAF-Generic')).
baseKB:cyc_to_plarkc('evincesGAF-Generic',evincesGAFGeneric).
:-retractall(rn('YahooFinanceStockQuotePagePredicate','YahooFinanceStockQuotePredicate')).
:-retractall(rename('YahooFinanceStockQuotePredicate','YahooFinanceStockQuotePagePredicate')).
baseKB:cyc_to_plarkc('YahooFinanceStockQuotePagePredicate',rtYahooFinanceStockQuotePagePredicate).
:-retractall(rn('PhysicalOrderingPredicate','SpatialOrderingPredicate')).
:-retractall(rename('SpatialOrderingPredicate','PhysicalOrderingPredicate')).
baseKB:cyc_to_plarkc('PhysicalOrderingPredicate',rtPhysicalOrderingPredicate).
:-retractall(rn('instanceDiffersFromPrototypicalInstance-Additions',instanceDiffersFromPrototypicalInstanceAddition)).
:-retractall(rename(instanceDiffersFromPrototypicalInstanceAddition,'instanceDiffersFromPrototypicalInstance-Additions')).
baseKB:cyc_to_plarkc('instanceDiffersFromPrototypicalInstance-Additions',instanceDiffersFromPrototypicalInstanceAdditions).
:-retractall(rn('instanceDiffersFromPrototypicalInstance-Lacunae',instanceDiffersFromPrototypicalInstanceLacuna)).
:-retractall(rename(instanceDiffersFromPrototypicalInstanceLacuna,'instanceDiffersFromPrototypicalInstance-Lacunae')).
baseKB:cyc_to_plarkc('instanceDiffersFromPrototypicalInstance-Lacunae',instanceDiffersFromPrototypicalInstanceLacunae).
:-retractall(rn('instanceDiffersFromPrototypicalInstance-Conflicts',instanceDiffersFromPrototypicalInstanceConflict)).
:-retractall(rename(instanceDiffersFromPrototypicalInstanceConflict,'instanceDiffersFromPrototypicalInstance-Conflicts')).
baseKB:cyc_to_plarkc('instanceDiffersFromPrototypicalInstance-Conflicts',instanceDiffersFromPrototypicalInstanceConflicts).
:-retractall(rn('startsNoEarlierThanStartingOf-2',startsNoEarlierThanStartingOf)).
:-retractall(rename(startsNoEarlierThanStartingOf,'startsNoEarlierThanStartingOf-2')).
baseKB:cyc_to_plarkc('startsNoEarlierThanStartingOf-2',startsNoEarlierThanStartingOf_2).
:-retractall(rn('NearlyFunctionalSlot','NearlyFunctionalBinaryPredicate')).
:-retractall(rename('NearlyFunctionalBinaryPredicate','NearlyFunctionalSlot')).
baseKB:cyc_to_plarkc('NearlyFunctionalSlot',rtNearlyFunctionalSlot).
:-retractall(rn('SystemSlot','SystemRolePredicate')).
:-retractall(rename('SystemRolePredicate','SystemSlot')).
baseKB:cyc_to_plarkc('SystemSlot',rtSystemSlot).
:-retractall(rn('aortaAneurysmSize-1',aortaAneurysmSize)).
:-retractall(rename(aortaAneurysmSize,'aortaAneurysmSize-1')).
baseKB:cyc_to_plarkc('aortaAneurysmSize-1',aortaAneurysmSize_1).
:-retractall(rn('operationType-7',operationType)).
:-retractall(rename(operationType,'operationType-7')).
baseKB:cyc_to_plarkc('operationType-7',operationType_7).
:-retractall(rn('hasIndicationForICUAdmission-8',hasIndicationForICUAdmission)).
:-retractall(rename(hasIndicationForICUAdmission,'hasIndicationForICUAdmission-8')).
baseKB:cyc_to_plarkc('hasIndicationForICUAdmission-8',hasIndicationForICUAdmission_8).
:-retractall(rn('priorHistoryOfConditionOnPartTypeWRTEvent-NoLoop',priorHistoryOfConditionOnPartTypeWRTEvent)).
:-retractall(rename(priorHistoryOfConditionOnPartTypeWRTEvent,'priorHistoryOfConditionOnPartTypeWRTEvent-NoLoop')).
baseKB:cyc_to_plarkc('priorHistoryOfConditionOnPartTypeWRTEvent-NoLoop',priorHistoryOfConditionOnPartTypeWRTEventNoLoop).
:-retractall(rn('cmuReadTheWeb-MappingPredicate','CMUReadTheWebMappingPredicate')).
:-retractall(rename('CMUReadTheWebMappingPredicate','cmuReadTheWeb-MappingPredicate')).
baseKB:cyc_to_plarkc('cmuReadTheWeb-MappingPredicate',cmuReadTheWebMappingPredicate).
:-retractall(rn('causes-SubSitTypeSubSitType-NotNecUnique',causesSubSitTypeSubSitType)).
:-retractall(rename(causesSubSitTypeSubSitType,'causes-SubSitTypeSubSitType-NotNecUnique')).
baseKB:cyc_to_plarkc('causes-SubSitTypeSubSitType-NotNecUnique',causesSubSitTypeSubSitTypeNotNecUnique).
:-retractall(rn('codingFunctionArity-4',codingFunctionArity)).
:-retractall(rename(codingFunctionArity,'codingFunctionArity-4')).
baseKB:cyc_to_plarkc('codingFunctionArity-4',codingFunctionArity_4).
:-retractall(rn('couldImpact-WeakEvidence',couldImpact)).
:-retractall(rename(couldImpact,'couldImpact-WeakEvidence')).
baseKB:cyc_to_plarkc('couldImpact-WeakEvidence',couldImpactWeakEvidence).
:-retractall(rn('ConstantPolynomialFunction','ConstantFunction')).
:-retractall(rename('ConstantFunction','ConstantPolynomialFunction')).
baseKB:cyc_to_plarkc('ConstantPolynomialFunction',rtConstantPolynomialFunction).
:-retractall(rn('patientChronicallyUsesNarcoticWithReleaseProfileBetweenDates-Old',patientChronicallyUsesNarcoticWithReleaseProfileBetweenDates)).
:-retractall(rename(patientChronicallyUsesNarcoticWithReleaseProfileBetweenDates,'patientChronicallyUsesNarcoticWithReleaseProfileBetweenDates-Old')).
baseKB:cyc_to_plarkc('patientChronicallyUsesNarcoticWithReleaseProfileBetweenDates-Old',patientChronicallyUsesNarcoticWithReleaseProfileBetweenDatesOld).
:-retractall(rn('LevelOfWithRespectToRolePredicate','LevelOfWithRespectToRoleTendencyPredicate')).
:-retractall(rename('LevelOfWithRespectToRoleTendencyPredicate','LevelOfWithRespectToRolePredicate')).
baseKB:cyc_to_plarkc('LevelOfWithRespectToRolePredicate',rtLevelOfWithRespectToRolePredicate).
:-retractall(rn('AcquaintancePredicate','BinaryAcquaintancePredicate')).
:-retractall(rename('BinaryAcquaintancePredicate','AcquaintancePredicate')).
baseKB:cyc_to_plarkc('AcquaintancePredicate',rtAcquaintancePredicate).
:-retractall(rn('NuancedAcquaintancePredicate','QualifiedAcquaintancePredicate')).
:-retractall(rename('QualifiedAcquaintancePredicate','NuancedAcquaintancePredicate')).
baseKB:cyc_to_plarkc('NuancedAcquaintancePredicate',rtNuancedAcquaintancePredicate).
:-retractall(rn('VGeneratingFunction','VerbGeneratingFunction')).
:-retractall(rename('VerbGeneratingFunction','VGeneratingFunction')).
baseKB:cyc_to_plarkc('VGeneratingFunction',rtVGeneratingFunction).
:-retractall(rn('parsedFromString-9',parsedFromString)).
:-retractall(rename(parsedFromString,'parsedFromString-9')).
baseKB:cyc_to_plarkc('parsedFromString-9',parsedFromString_9).
:-retractall(rn('EqualityOperator','TheEqualityOperator')).
:-retractall(rename('TheEqualityOperator','EqualityOperator')).
baseKB:cyc_to_plarkc('EqualityOperator',rtEqualityOperator).
:-retractall(rn('BusinessValuationProjectionPredicate','BusinessValuationSpecificationPredicate')).
:-retractall(rename('BusinessValuationSpecificationPredicate','BusinessValuationProjectionPredicate')).
baseKB:cyc_to_plarkc('BusinessValuationProjectionPredicate',rtBusinessValuationProjectionPredicate).
:-retractall(rn('BooleanEvidentialPredicate','TrendDetectionEvidentialPredicate')).
:-retractall(rename('TrendDetectionEvidentialPredicate','BooleanEvidentialPredicate')).
baseKB:cyc_to_plarkc('BooleanEvidentialPredicate',rtBooleanEvidentialPredicate).
:-retractall(rn('wellTestWaterCut-ImplicitUnits',wellTestWaterCut)).
:-retractall(rename(wellTestWaterCut,'wellTestWaterCut-ImplicitUnits')).
baseKB:cyc_to_plarkc('wellTestWaterCut-ImplicitUnits',wellTestWaterCutImplicitUnits).
:-retractall(rn('BridgeAlarmEvidentialPredicate','ExternalAlarmEvidentialPredicate')).
:-retractall(rename('ExternalAlarmEvidentialPredicate','BridgeAlarmEvidentialPredicate')).
baseKB:cyc_to_plarkc('BridgeAlarmEvidentialPredicate',rtBridgeAlarmEvidentialPredicate).
