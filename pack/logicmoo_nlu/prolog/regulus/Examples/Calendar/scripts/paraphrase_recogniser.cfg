
% Config information for paraphrase recognition grammar

% File search paths

file_search_path(paraphrase_grammars,'$REGULUS/Examples/Calendar/Regulus').

file_search_path(calendar_runtime,'$REGULUS/Examples/Calendar/Generated').
file_search_path(calendar_prolog,'$REGULUS/Examples/Calendar/Prolog').
file_search_path(corpora,'$REGULUS/Examples/Calendar/corpora').

file_search_path(tmp,'C:/Temp').

% Regulus config values

regulus_config(regulus_grammar, 
	       [paraphrase_grammars(paraphrase_main),
	        paraphrase_grammars(paraphrase_speech),
	        paraphrase_grammars(paraphrase_analysis),
	        paraphrase_grammars(paraphrase_ignore_sem),
		% Create this file by doing 'make name_lexicon' in $REGULUS/Examples/Calendar/scripts
		paraphrase_grammars(generated_names)]).

regulus_config(top_level_cat, '.MAIN').

regulus_config(prolog_semantics, yes).

regulus_config(nuance_grammar, calendar_runtime(paraphrase_recogniser)).

regulus_config(nuance_grammar_tag, paraphrase).

regulus_config(ebl_grammar_probs, calendar_runtime('paraphrase_recogniser_grammar_probs_data_file.txt')).

% Perform PCFG training on the Nuance grammar
regulus_config(nuance_grammar_for_pcfg_training, calendar_runtime(paraphrase_recogniser)).

% ... putting the result in this directory
regulus_config(pcfg_training_output_directory, calendar_runtime(pcfg_trained)).

% Perform nuance-compile on the grammar resulting from PCFG training
regulus_config(nuance_grammar_for_compilation, calendar_runtime('pcfg_trained/paraphrase_recogniser')).

% ... using the English.America language pack 
%regulus_config(nuance_language_pack, 'English.UK').
regulus_config(nuance_language_pack, 'English.America').

% ... and the following parameters 
regulus_config(nuance_compile_params, ['-auto_pron', '-dont_flatten']).

% ... and writing out the resulting package here
regulus_config(nuance_recognition_package, calendar_runtime(paraphrase_recogniser)).

regulus_config(working_file_prefix, calendar_runtime(paraphrase_recogniser)).
regulus_config(working_directory, calendar_runtime('')).

regulus_config(dialogue_rec_params,
	       [package=calendar_runtime(paraphrase_recogniser), grammar='.MAIN__paraphrase',
		'rec.Pruning=1600', 'rec.DoNBest=TRUE', 'rec.NumNBest=6']).
	       	%'rec.Pruning=1600']).
	       
regulus_config(dialogue_speech_corpus, corpora('EngParaphraseRecogniser/wavfiles_with_transcripts.txt')).
regulus_config(dialogue_speech_corpus(in_coverage), corpora('EngParaphraseRecogniser/wavfiles_with_transcripts_in_coverage.txt')).
regulus_config(dialogue_speech_corpus(out_of_coverage), corpora('EngParaphraseRecogniser/wavfiles_with_transcripts_out_of_coverage.txt')).

regulus_config(dialogue_speech_corpus_results, calendar_runtime('paraphrase_recogniser_speech_dialogue_results.pl')).

regulus_config(dialogue_corpus_judgements, corpora('paraphrase_recogniser_dialogue_judgements.pl')).
