(csetq *LINK-SERVER-ALLOW-LOCAL-START* NIL)
;;(find-or-create-constant "SimCurrentStateMt")
;;(sim-assert '(#$isa *WorldStaticStateMt* #$DataMicrotheory) *WORLDVOCABMT*)
(find-or-create-constant "BoundsOfDirectionFn")
;load file '10.kif'
;load file '10.kif.txt'
;load file '10.mob'
(FORCE-PRINT ";; Sourcing Mob File C:\OpenSim\src\daxmoo\worlds\10.mob")
;; mob #1000
(find-or-create-constant "NpcCol1000")
(sim-assert '(#$isa #$NpcCol1000 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1000 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1000 "Lieutenant") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1000 "Commander") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1000 "Geordi") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1000 "LaForge") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nameString #$NpcCol1000 "Geordi LaForge") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$definiteDescriptions #$NpcCol1000 "Lieutenant Commander Geordi LaForge is standing here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1000 "Geordi is the Chief Engineer of the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1000 "He's blind, so he wears a special VISOR that lets him see things") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1000 "ACT_STAY_ZONE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1000 "MEMORY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1000 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1000 "HELPER") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1000 "ACT_FRIEND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1000 #$HelpingAnAgent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1000 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1000 "NOCHARM") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1000 #$InfluencingAnAgent #$recipientOfInfo) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1000 "NOBASH") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1000 #$IncurringPhysicalDamage #$damages) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1000 "NOBLIND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1000 "NPC_DETECT_INVIS") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1000 "NPC_NOTRACK") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1000(#$MediumAmountFn #$Goodness-Moral)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1000 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1000 "+mudToHitArmorClass0: 3") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1000 #$HighAmountFn) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1000 "mudMaxHitPoints: 12d12+3200") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1000 "#$PunchingSomething mudBareHandDamage: 9d9+42") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$netWorth #$NpcCol1000(#$USDollarFn 75000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1000 #$IntentionalMentalEvent #$Effectiveness #$mediumAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1000 #$UprightPosture)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$NpcCol1000 #$MaleAnimal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1001

(find-or-create-constant "NpcCol1001")
(sim-assert '(#$isa #$NpcCol1001 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1001 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1001 "Lieutenant") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1001 "Commander") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1001 "Data") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1001 "Android") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nameString #$NpcCol1001 "Data") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$definiteDescriptions #$NpcCol1001 "Lieutenant Commander Data is here, trying to be more human") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1001 "Data is the only android on the Enterprise, and the only android in all of Starfleet") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1001 "He possesses super-human strength, and is extremely tough") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "ACT_NICE_THIEF") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "AWARE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "NOBACKSTAB") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "ACT_STAY_ZONE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "MEMORY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1001 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "HELPER") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "ACT_FRIEND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1001 #$HelpingAnAgent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1001 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "NOCHARM") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1001 #$InfluencingAnAgent #$recipientOfInfo) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "NOSUMMON") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1001 #$CoercingAnAgentToMove #$objectMoving) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "NOSLEEP") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1001 #$Sleeping #$bodilyDoer) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "NOBASH") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1001 #$IncurringPhysicalDamage #$damages) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "NOBLIND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "NPC_DETECT_INVIS") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "NPC_NOTRACK") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1001(#$MediumAmountFn #$Goodness-Moral)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1001 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "+mudToHitArmorClass0: 1") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1001 #$VeryHighAmountFn) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "mudMaxHitPoints: 18d18+4000") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1001 "#$PunchingSomething mudBareHandDamage: 10d10+75") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$netWorth #$NpcCol1001(#$USDollarFn 125000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1001 #$IntentionalMentalEvent #$Effectiveness #$veryHighAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1001 #$UprightPosture)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$NpcCol1001 #$MaleAnimal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )


(sim-assert '(#$isa (#$SimClassFn "player_simmarine_mp") #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls (#$SimClassFn "player_simmarine_mp") #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$relationAllInstance #$nicknames (#$SimClassFn "player_simmarine_mp") "Lieutenant") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames (#$SimClassFn "player_simmarine_mp") "Commander") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames (#$SimClassFn "player_simmarine_mp") "Human") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nameString (#$SimClassFn "player_simmarine_mp") "Player") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$definiteDescriptions (#$SimClassFn "player_simmarine_mp") "Lieutenant Commander Player is here, trying to be more human") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic (#$SimClassFn "player_simmarine_mp") "Player is the only Player on the Enterprise, and the only in all of Starfleet") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic (#$SimClassFn "player_simmarine_mp") "He possesses super-human strength, and is extremely tough") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "ACT_NICE_THIEF") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "AWARE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "NOBACKSTAB") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "ACT_STAY_ZONE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "MEMORY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$RevengeAction (#$SimClassFn "player_simmarine_mp") #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "HELPER") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "ACT_FRIEND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorCapable-PerformedBy (#$SimClassFn "player_simmarine_mp") #$HelpingAnAgent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$ProtectingSomething (#$SimClassFn "player_simmarine_mp") #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "NOCHARM") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable (#$SimClassFn "player_simmarine_mp") #$InfluencingAnAgent #$recipientOfInfo) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "NOSUMMON") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable (#$SimClassFn "player_simmarine_mp") #$CoercingAnAgentToMove #$objectMoving) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "NOSLEEP") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable (#$SimClassFn "player_simmarine_mp") #$Sleeping #$bodilyDoer) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "NOBASH") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable (#$SimClassFn "player_simmarine_mp") #$IncurringPhysicalDamage #$damages) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "NOBLIND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "NPC_DETECT_INVIS") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "NPC_NOTRACK") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$moralCharacter (#$SimClassFn "player_simmarine_mp")(#$MediumAmountFn #$Goodness-Moral)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel (#$SimClassFn "player_simmarine_mp") #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "+mudToHitArmorClass0: 1") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$toughnessOfObject (#$SimClassFn "player_simmarine_mp") #$VeryHighAmountFn) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "mudMaxHitPoints: 18d18+4000") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment (#$SimClassFn "player_simmarine_mp") "#$PunchingSomething mudBareHandDamage: 10d10+75") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$netWorth (#$SimClassFn "player_simmarine_mp")(#$USDollarFn 125000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel (#$SimClassFn "player_simmarine_mp") #$IntentionalMentalEvent #$Effectiveness #$veryHighAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possible(#$relationAllInstance #$postureOfAnimal (#$SimClassFn "player_simmarine_mp") #$UprightPosture)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls (#$SimClassFn "player_simmarine_mp") #$MaleAnimal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1002
(find-or-create-constant "NpcCol1002")
(sim-assert '(#$isa #$NpcCol1002 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1002 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1002 "Lieutenant") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1002 "Worf") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1002 "Klingon") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nameString #$NpcCol1002 "Lieutenant Worf") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$definiteDescriptions #$NpcCol1002 "Lieutenant Worf is here, looking pretty mean") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1002 "Worf is the first Klingon to have joined Starfleet") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1002 "He's Chief of Security of the Enterprise, and he's plenty strong") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1002 "ACT_STAY_ZONE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1002 "MEMORY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1002 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1002 "HELPER") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1002 "ACT_FRIEND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1002 #$HelpingAnAgent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1002 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1002 "NOCHARM") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1002 #$InfluencingAnAgent #$recipientOfInfo) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1002 "NOBASH") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1002 #$IncurringPhysicalDamage #$damages) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1002 "NOBLIND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1002 "NPC_DETECT_INVIS") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1002 "NPC_NOTRACK") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1002(#$MediumAmountFn #$Goodness-Moral)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1002 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1002 "+mudToHitArmorClass0: 2") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1002 #$HighToVeryHighAmountFn) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1002 "mudMaxHitPoints: 12d12+3400") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1002 "#$PunchingSomething mudBareHandDamage: 9d9+60") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$netWorth #$NpcCol1002(#$USDollarFn 10000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1002 #$IntentionalMentalEvent #$Effectiveness #$mediumToVeryHighAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1002 #$UprightPosture)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$NpcCol1002 #$MaleAnimal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1003
(find-or-create-constant "NpcCol1003")
(sim-assert '(#$isa #$NpcCol1003 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1003 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1003 "Doctor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1003 "Beverly") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1003 "Crusher") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nameString #$NpcCol1003 "Doctor Crusher") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$definiteDescriptions #$NpcCol1003 "Lieutenant Beverly Crusher is here, looking for someone to heal") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1003 "Doctor Crusher is the Enterprise's Chief Medical Officer") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1003 "Wesley is her son") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1003 "Her husband was killed years ago in an accident on another starship which was also commanded by Captain Picard") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1003 "ACT_STAY_ZONE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1003 "MEMORY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1003 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1003 "HELPER") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1003 "ACT_FRIEND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1003 #$HelpingAnAgent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1003 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1003 "NOCHARM") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1003 #$InfluencingAnAgent #$recipientOfInfo) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1003 "NOBASH") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1003 #$IncurringPhysicalDamage #$damages) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1003 "NOBLIND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1003 "NPC_DETECT_INVIS") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1003 "NPC_NOTRACK") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1003(#$MediumAmountFn #$Goodness-Moral)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1003 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1003 "+mudToHitArmorClass0: 3") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1003 #$HighAmountFn) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1003 "mudMaxHitPoints: 12d12+3200") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1003 "#$PunchingSomething mudBareHandDamage: 9d9+42") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$netWorth #$NpcCol1003(#$USDollarFn 75000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1003 #$IntentionalMentalEvent #$Effectiveness #$mediumAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1003 #$UprightPosture)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$NpcCol1003 #$FemaleAnimal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1004
(find-or-create-constant "NpcCol1004")
(sim-assert '(#$isa #$NpcCol1004 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1004 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1004 "Counselor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1004 "Deanna") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1004 "Troi") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nameString #$NpcCol1004 "Counselor Troi") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$definiteDescriptions #$NpcCol1004 "Counselor Deanna Troi is here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1004 "Counselor Troi is the ship's main counselor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1004 "She's half betazoid, which means that she can read people's minds") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1004 "ACT_STAY_ZONE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1004 "MEMORY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1004 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1004 "HELPER") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1004 "ACT_FRIEND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1004 #$HelpingAnAgent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1004 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1004 "NOCHARM") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1004 #$InfluencingAnAgent #$recipientOfInfo) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1004 "NOBASH") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1004 #$IncurringPhysicalDamage #$damages) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1004 "NOBLIND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1004 "NPC_DETECT_INVIS") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1004 "NPC_NOTRACK") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1004(#$MediumAmountFn #$Goodness-Moral)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1004 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1004 "+mudToHitArmorClass0: 3") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1004 #$HighAmountFn) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1004 "mudMaxHitPoints: 12d12+3200") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1004 "#$PunchingSomething mudBareHandDamage: 9d9+42") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$netWorth #$NpcCol1004(#$USDollarFn 75000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1004 #$IntentionalMentalEvent #$Effectiveness #$mediumAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1004 #$UprightPosture)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$NpcCol1004 #$FemaleAnimal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1005
(find-or-create-constant "NpcCol1005")
(sim-assert '(#$isa #$NpcCol1005 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1005 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1005 "Commander") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1005 "William") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1005 "Riker") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nameString #$NpcCol1005 "Commander Riker") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$definiteDescriptions #$NpcCol1005 "Commander William Riker is here, staring at you") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1005 "Commander Riker is the Enterprise's first officer") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1005 "He's in charge of keeping the crew in line") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1005 "ACT_STAY_ZONE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1005 "MEMORY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1005 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1005 "HELPER") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1005 "ACT_FRIEND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1005 #$HelpingAnAgent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1005 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1005 "NOCHARM") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1005 #$InfluencingAnAgent #$recipientOfInfo) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1005 "NOBASH") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1005 #$IncurringPhysicalDamage #$damages) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1005 "NOBLIND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1005 "NPC_DETECT_INVIS") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1005 "NPC_NOTRACK") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1005(#$MediumAmountFn #$Goodness-Moral)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1005 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1005 "+mudToHitArmorClass0: 2") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1005 #$HighToVeryHighAmountFn) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1005 "mudMaxHitPoints: 12d12+3200") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1005 "#$PunchingSomething mudBareHandDamage: 9d9+52") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$netWorth #$NpcCol1005(#$USDollarFn 75000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1005 #$IntentionalMentalEvent #$Effectiveness #$mediumToVeryHighAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1005 #$UprightPosture)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$NpcCol1005 #$MaleAnimal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1006
(find-or-create-constant "NpcCol1006")
(sim-assert '(#$isa #$NpcCol1006 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1006 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1006 "Captain") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1006 "Jean") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1006 "Luc") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1006 "Jean-Luc") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1006 "Picard") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nameString #$NpcCol1006 "Captain Picard") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$definiteDescriptions #$NpcCol1006 "Captain Jean-Luc Picard is standing here, watching you") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1006 "Captain Picard is a very important man") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1006 "He's in charge of Starfleet's flagship, the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1006 "He's very smart, and very wise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1006 "Don't mess with him!") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "ACT_NICE_THIEF") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "AWARE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "NOBACKSTAB") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "ACT_STAY_ZONE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "MEMORY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1006 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "HELPER") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "ACT_FRIEND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1006 #$HelpingAnAgent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1006 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "NOCHARM") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1006 #$InfluencingAnAgent #$recipientOfInfo) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "NOSUMMON") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1006 #$CoercingAnAgentToMove #$objectMoving) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "NOSLEEP") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1006 #$Sleeping #$bodilyDoer) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "NOBASH") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1006 #$IncurringPhysicalDamage #$damages) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "NOBLIND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "NPC_DETECT_INVIS") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "NPC_SANCTUARY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "NPC_NOTRACK") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1006(#$MediumAmountFn #$Goodness-Moral)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1006 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "+mudToHitArmorClass0: 0") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1006 #$VeryHighAmountFn) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "mudMaxHitPoints: 20d20+5000") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1006 "#$PunchingSomething mudBareHandDamage: 12d12+75") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$netWorth #$NpcCol1006(#$USDollarFn 750000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1006 #$IntentionalMentalEvent #$Effectiveness #$veryHighAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1006 #$UprightPosture)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$NpcCol1006 #$MaleAnimal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1007
(find-or-create-constant "NpcCol1007")
(sim-assert '(#$isa #$NpcCol1007 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1007 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1007 "Guinan") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nameString #$NpcCol1007 "Guinan") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$definiteDescriptions #$NpcCol1007 "Guinan is here, tending the bar") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1007 "Guinan is a strange being") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1007 "She's lived for thousands of years and experienced many things, but now she's decided to work on the Enterprise as a bartender") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1007 "ACT_SENTINEL") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$LeavingAPlace #$NpcCol1007 #$bodilyDoer #$Never) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1007 "ACT_STAY_ZONE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1007 "MEMORY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1007 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1007 "HELPER") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1007 "ACT_FRIEND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1007 #$HelpingAnAgent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1007 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1007 "NOCHARM") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1007 #$InfluencingAnAgent #$recipientOfInfo) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1007 "NOBASH") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1007 #$IncurringPhysicalDamage #$damages) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1007 "NOBLIND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1007 "NPC_DETECT_INVIS") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1007 "NPC_NOTRACK") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1007(#$MediumAmountFn #$Goodness-Moral)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1007 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1007 "+mudToHitArmorClass0: 4") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1007 #$MediumToVeryHighAmountFn) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1007 "mudMaxHitPoints: 12d12+2600") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1007 "#$PunchingSomething mudBareHandDamage: 9d9+36") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$netWorth #$NpcCol1007(#$USDollarFn 50000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1007 #$IntentionalMentalEvent #$Effectiveness #$mediumAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1007 #$UprightPosture)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$NpcCol1007 #$FemaleAnimal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1008
(find-or-create-constant "NpcCol1008")
(sim-assert '(#$isa #$NpcCol1008 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1008 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1008 "Chief") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1008 "O'Brien") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1008 "Transporter") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nameString #$NpcCol1008 "Chief O'Brien") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$definiteDescriptions #$NpcCol1008 "Chief O'Brien is here, waiting to teleport you somwhere") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1008 "Chief O'Brien is the transporter chief on the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1008 "It's his job to make sure everyone arrives(and leaves) in one piece, instead of trillions of atoms") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1008 "ACT_SENTINEL") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$LeavingAPlace #$NpcCol1008 #$bodilyDoer #$Never) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1008 "ACT_STAY_ZONE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1008 "MEMORY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1008 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1008 "HELPER") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1008 "ACT_FRIEND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1008 #$HelpingAnAgent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1008 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1008 "NOCHARM") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1008 #$InfluencingAnAgent #$recipientOfInfo) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1008 "NOBASH") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1008 #$IncurringPhysicalDamage #$damages) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1008 "NOBLIND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1008 "NPC_DETECT_INVIS") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1008 "NPC_NOTRACK") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1008(#$MediumAmountFn #$Goodness-Moral)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1008 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1008 "+mudToHitArmorClass0: 4") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1008 #$MediumToVeryHighAmountFn) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1008 "mudMaxHitPoints: 12d12+2600") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1008 "#$PunchingSomething mudBareHandDamage: 9d9+36") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$netWorth #$NpcCol1008(#$USDollarFn 50000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1008 #$IntentionalMentalEvent #$Effectiveness #$mediumAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1008 #$UprightPosture)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$NpcCol1008 #$MaleAnimal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1009
(find-or-create-constant "NpcCol1009")
(sim-assert '(#$isa #$NpcCol1009 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1009 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1009 "Wesley") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1009 "Crusher") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nameString #$NpcCol1009 "Wesley") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$definiteDescriptions #$NpcCol1009 "Wesley Crusher is here, eagerly trying to earn your praise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1009 "Wesley Crusher is not even an official officer, but he serves as an acting Ensign on the bridge") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1009 "He got this position only because Captain Picard feels guilty about killing his father") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1009 "ACT_STAY_ZONE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1009 "ACT_WIMPY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1009 "wimpy mobile will try to flee when it gets low on hit points. A mobile which is both aggressive and wimpy will not attack a player that is awake") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1009 "MEMORY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1009 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1009 "HELPER") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1009 "ACT_FRIEND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1009 #$HelpingAnAgent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1009 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1009 "NOCHARM") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1009 #$InfluencingAnAgent #$recipientOfInfo) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1009 "NOBASH") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1009 #$IncurringPhysicalDamage #$damages) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1009 "NOBLIND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1009 "NPC_DETECT_INVIS") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1009 "NPC_NOTRACK") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1009(#$MediumAmountFn #$Goodness-Moral)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1009 #$SingleDoerAction #$Effectiveness #$mediumToVeryHighAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1009 "+mudToHitArmorClass0: 6") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1009 #$LowAmountFn) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1009 "mudMaxHitPoints: 12d12+1400") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1009 "#$PunchingSomething mudBareHandDamage: 9d9+24") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$netWorth #$NpcCol1009(#$USDollarFn 18000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1009 #$IntentionalMentalEvent #$Effectiveness #$veryLowToLowAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1009 #$UprightPosture)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$NpcCol1009 #$MaleAnimal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1010
(find-or-create-constant "NpcCol1010")
(sim-assert '(#$isa #$NpcCol1010 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1010 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1010 "Livingston") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1010 "fish") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nameString #$NpcCol1010 "Livingston") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$definiteDescriptions #$NpcCol1010 "Livingston the fish is here, swimming about in his tank") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1010 "Livingston is Captain Picard's pet fish") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1010 "He's some sort of exotic breed, and he's expensive to feed and keep alive") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1010 "ACT_SENTINEL") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$LeavingAPlace #$NpcCol1010 #$bodilyDoer #$Never) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1010 "ACT_STAY_ZONE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1010 "MEMORY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1010 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1010 "HELPER") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1010 "ACT_FRIEND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1010 #$HelpingAnAgent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1010 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1010 "NOCHARM") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1010 #$InfluencingAnAgent #$recipientOfInfo) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1010 "NPC_DETECT_INVIS") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1010 "NPC_NOTRACK") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1010(#$MediumAmountFn #$Goodness-Moral)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1010 #$SingleDoerAction #$Effectiveness #$mediumAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1010 "+mudToHitArmorClass0: 6") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1010 #$NoAmountFn) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1010 "mudMaxHitPoints: 12d12+800") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1010 "#$PunchingSomething mudBareHandDamage: 9d9+14") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$netWorth #$NpcCol1010(#$USDollarFn 5000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1010 #$IntentionalMentalEvent #$Effectiveness #$veryLowToLowAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1010 #$UprightPosture)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$NpcCol1010 #$MaleAnimal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1011
(find-or-create-constant "NpcCol1011")
(sim-assert '(#$isa #$NpcCol1011 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1011 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1011 "spot") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1011 "the") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1011 "cat") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nameString #$NpcCol1011 "Spot") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$definiteDescriptions #$NpcCol1011 "Spot, Data's pet cat, is sitting here looking at you") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1011 "Spot is Data's orange coloured cat") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1011 "Data is always trying to become more human, so he thinks that having a pet might help him achieve his goal") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1011 "ACT_SENTINEL") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$LeavingAPlace #$NpcCol1011 #$bodilyDoer #$Never) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1011 "ACT_STAY_ZONE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1011 "MEMORY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1011 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1011 "HELPER") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1011 "ACT_FRIEND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1011 #$HelpingAnAgent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1011 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1011 "NOCHARM") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1011 #$InfluencingAnAgent #$recipientOfInfo) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1011 "NPC_DETECT_INVIS") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1011 "NPC_NOTRACK") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1011(#$MediumAmountFn #$Goodness-Moral)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1011 #$SingleDoerAction #$Effectiveness #$mediumAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1011 "+mudToHitArmorClass0: 6") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1011 #$NoAmountFn) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1011 "mudMaxHitPoints: 12d12+800") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1011 "#$PunchingSomething mudBareHandDamage: 9d9+14") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$netWorth #$NpcCol1011(#$USDollarFn 5000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1011 #$IntentionalMentalEvent #$Effectiveness #$veryLowToLowAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1011 #$UprightPosture)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$NpcCol1011 #$MaleAnimal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1012
(find-or-create-constant "NpcCol1012")
(sim-assert '(#$isa #$NpcCol1012 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1012 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1012 "ensign") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nameString #$NpcCol1012 "the ensign") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$definiteDescriptions #$NpcCol1012 "A nervous looking ensign is standing here, watching you") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1012 "These ensigns make up the backbone of the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1012 "They clean things, do jobs the higher ups won't even consider doing, and get yelled at all the time") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1012 "ACT_STAY_ZONE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1012 "MEMORY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1012 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1012 "HELPER") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1012 "ACT_FRIEND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1012 #$HelpingAnAgent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1012 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1012 "NOCHARM") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1012 #$InfluencingAnAgent #$recipientOfInfo) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1012 "NOBASH") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1012 #$IncurringPhysicalDamage #$damages) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1012 "NOBLIND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1012 "NPC_DETECT_INVIS") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1012 "NPC_NOTRACK") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1012(#$MediumAmountFn #$Goodness-Moral)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1012 #$SingleDoerAction #$Effectiveness #$mediumAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1012 "+mudToHitArmorClass0: 6") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1012 #$NoAmountFn) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1012 "mudMaxHitPoints: 8d8+1600") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1012 "#$PunchingSomething mudBareHandDamage: 8d8+26") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$netWorth #$NpcCol1012(#$USDollarFn 12000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1012 #$IntentionalMentalEvent #$Effectiveness #$veryLowToLowAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1012 #$UprightPosture)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$NpcCol1012 #$MaleAnimal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1013
(find-or-create-constant "NpcCol1013")
(sim-assert '(#$isa #$NpcCol1013 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1013 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1013 "alexander") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$NpcCol1013 "rozhenko") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nameString #$NpcCol1013 "alexander rozhenko") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$definiteDescriptions #$NpcCol1013 "Alexander Rozhenko is here, practicing laughing hour") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1013 "Alexander Rozhenko is Worf's son") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1013 "His mother was half human and half Klingon, so Alexander is 3/4 Klingon") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1013 "He's quite small, but since he's a Klingon he's very strong") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1013 "ACT_STAY_ZONE") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1013 "MEMORY") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1013 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1013 "HELPER") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1013 "ACT_FRIEND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1013 #$HelpingAnAgent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1013 #$bodilyDoer #$Often) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1013 "NOCHARM") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1013 #$InfluencingAnAgent #$recipientOfInfo) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1013 "NOBASH") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$typeBehaviorIncapable #$NpcCol1013 #$IncurringPhysicalDamage #$damages) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1013 "NOBLIND") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1013 "NPC_DETECT_INVIS") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1013 "NPC_NOTRACK") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1013(#$NoAmountFn #$Goodness-Moral)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1013 #$SingleDoerAction #$Effectiveness #$mediumAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1013 "+mudToHitArmorClass0: 6") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1013 #$NoAmountFn) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1013 "mudMaxHitPoints: 8d8+1600") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$NpcCol1013 "#$PunchingSomething mudBareHandDamage: 8d8+26") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$netWorth #$NpcCol1013(#$USDollarFn 12000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;;(sim-assert '(#$relationAllInstance #$skillLevel #$NpcCol1013 #$IntentionalMentalEvent #$Effectiveness #$veryLowToLowAmountOf) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1013 #$UprightPosture)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$NpcCol1013 #$MaleAnimal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob
;load file '10.mob.kif'
;load file '10.mob.txt'
;load file '10.obj'
(find-or-create-constant "ArtifactCol1000")
(sim-assert '(#$isa #$ArtifactCol1000 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1000 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1000 "standard") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1000 "issue") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1000 "starfleet") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1000 "phaser") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1000 #$Handgun) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1000 "a standard issue phaser") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1000 "A standard issue Starfleet phaser has been left here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1000 #$Weapon) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1000 #$Weapon) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1000 #$Weapon) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1000 "damageNumberDice 5") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1000 "damageSizeDice 5") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1000 "WeaponBlasting") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$stateOfDevice #$ArtifactCol1000 #$Device-On) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1000 #$LightingDevice) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1000 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1000 #$Device-SingleUser) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1000 #$SomethingToWear) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1000(#$Kilogram 3)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1000(#$Dollar-UnitedStates 20000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1000(#$DollarsPerDay 500)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1000 "These phasers are the standard weapon of Starfleet officers. It offers decent damage for its fairly small size") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1000 "phaser") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1001")
(sim-assert '(#$isa #$ArtifactCol1001 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1001 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1001 "phaser") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1001 "rifle") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1001 "a phaser rifle") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1001 "A large phaser rifle is lying here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1001 #$Weapon) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1001 #$Weapon) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1001 #$Weapon) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1001 "damageNumberDice 7") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1001 "damageSizeDice 6") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1001 "WeaponBlasting") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$stateOfDevice #$ArtifactCol1001 #$Device-On) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1001 #$LightingDevice) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1001 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1001 #$Device-SingleUser) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1001 #$SomethingToWear) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1001(#$Kilogram 8)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1001(#$Dollar-UnitedStates 40000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1001(#$DollarsPerDay 1000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1001 "This phaser rifle looks pretty powerful. These weapons are used mainly on assault type missions, where power is important") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1001 "phaser") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1001 "rifle") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002")
(sim-assert '(#$isa #$ArtifactCol1002 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1002 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1002 "burgandy") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1002 "starfleet") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1002 "command") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1002 "uniform") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1002 "a burgandy Starfleet command uniform") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1002 "A neatly folded burgandy Starfleet command uniform is lying here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1002 #$ProtectiveAttire) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1002 "armorLevel: 10") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1002 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn-TypeType #$ArtifactCol1002 #$Trunk-BodyCore) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1002 #$SomethingToWear) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1002(#$Kilogram 5)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1002(#$Dollar-UnitedStates 12000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1002(#$DollarsPerDay 500)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1002 "These uniforms are worn by command officers on Federation starships. It's kind of tight, but it looks pretty good") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1002 "burgandy") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1002 "command") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1002 "uniform") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003")
(sim-assert '(#$isa #$ArtifactCol1003 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1003 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1003 "gold") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1003 "starfleet") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1003 "engineering") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1003 "uniform") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1003 "a gold Starfleet engineering uniform") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1003 "A neatly folded gold Starfleet engineering uniform is lying here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1003 #$ProtectiveAttire) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1003 "armorLevel: 10") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1003 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn-TypeType #$ArtifactCol1003 #$Trunk-BodyCore) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1003 #$SomethingToWear) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1003(#$Kilogram 5)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1003(#$Dollar-UnitedStates 12000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1003(#$DollarsPerDay 500)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1003 "These uniforms are worn by engineering officers on Federation starships. It's kind of tight, but it looks pretty good") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1003 "gold") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1003 "engineering") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1003 "uniform") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004")
(sim-assert '(#$isa #$ArtifactCol1004 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1004 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1004 "blue") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1004 "starfleet") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1004 "medical") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1004 "uniform") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1004 "a blue Starfleet medical uniform") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1004 "A neatly folded blue Starfleet medical uniform is lying here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1004 #$ProtectiveAttire) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1004 "armorLevel: 10") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1004 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn-TypeType #$ArtifactCol1004 #$Trunk-BodyCore) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1004 #$SomethingToWear) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1004(#$Kilogram 5)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1004(#$Dollar-UnitedStates 12000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1004(#$DollarsPerDay 500)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1004 "These uniforms are worn by medical officers on Federation starships. It's kind of tight, but it looks pretty good") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1004 "blue") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1004 "medical") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1004 "uniform") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1005 "starfleet") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1005 "black") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1005 "boots") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1005 "a pair of Starfleet black boots") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1005 "A pair of Starfleet black boots are sitting here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1005 #$ProtectiveAttire) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1005 "armorLevel: 5") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1005 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn-TypeType #$ArtifactCol1005 #$Foot-AnimalBodyPart) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1005 #$SomethingToWear) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1005(#$Kilogram 3)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1005(#$Dollar-UnitedStates 8000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1005(#$DollarsPerDay 250)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1005 "These boots must be worn by all Starfleet officers while on duty. They're quite light, and offer good protection for the feet") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1005 "starfleet") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1005 "black") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1005 "boots") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1006 "starfleet") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1006 "comm") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1006 "com") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1006 "communication") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1006 "badge") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1006 "a Starfleet communication badge") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1006 "A Starfleet communication badge is lying here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1006 #$ProtectiveAttire) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1006 "armorLevel: 1") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1006 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1006 #$Necklace) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1006(#$Kilogram 1)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1006(#$Dollar-UnitedStates 20000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1006(#$DollarsPerDay 500)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1006 "These communication badges must be worn by all officers while on a starship. It looks like a silver arrow head on top of a golden coloured oval: ____/\____ / / \ \ | / \ | \_/ _/\_ \_/ // \\ ") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1006 "starfleet") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1006 "comm") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1006 "com") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1006 "communication") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1006 "badge") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1007")
(sim-assert '(#$isa #$ArtifactCol1007 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1007 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1007 "worf's") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1007 "worf") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1007 "sash") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1007 "Worf's sash") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1007 "Worf's silver chain sash has been left here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1007 #$ProtectiveAttire) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1007 "armorLevel: 8") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1007 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn-TypeType #$ArtifactCol1007 #$Torso) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1007 #$SomethingToWear) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1007(#$Kilogram 6)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1007(#$Dollar-UnitedStates 15000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1007(#$DollarsPerDay 300)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1007 "Worf's sash is some sort of Klingon clothing. Worf always wears it, which makes you wonder how you managed to get a hold of it..") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1007 "worf's") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1007 "worf") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1007 "sash") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1008")
(sim-assert '(#$isa #$ArtifactCol1008 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1008 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1008 "geordi") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1008 "geordi's") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1008 "visor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1008 "Geordi's VISOR") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1008 "Geordi's VISOR is lying here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1008 #$ProtectiveAttire) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1008 "armorLevel: 2") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1008 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1008(#$Kilogram 6)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1008(#$Dollar-UnitedStates 35000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1008(#$DollarsPerDay 750)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1008 "Geordi's VISOR was made specially for him, because he's blind. This piece of equipment allows him to see things, but differently than normal eyes. I wonder how Geordi is managing, now that you've stolen his only way of seeing?") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1008 "geordi") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1008 "geordi's") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1008 "visor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009")
(sim-assert '(#$isa #$ArtifactCol1009 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1009 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1009 "medical") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1009 "tricorder") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1009 "a medical Tricorder") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1009 "A medical Tricorder is lying here, ready to be used") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1009 #$RodShapedObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1009 #$ControlDevice) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1009 #$HandTool) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1009 #$RodShapedObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1009 #$ControlDevice) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1009 "mudLevelOf: 10") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1009 "chargeCapacity: 5") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1009 "chargeRemaining: 5") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1009 "28") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1009 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1009 #$HandTool) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1009 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1009(#$Kilogram 6)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1009(#$Dollar-UnitedStates 15000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1009(#$DollarsPerDay 500)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1009 "This medical Tricorder is used to heal small wounds and cuts. While it isn't made for major injuries, it can help you limp home. To use, hold it and then use it") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1009 "medical") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1009 "tricorder") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1010")
(sim-assert '(#$isa #$ArtifactCol1010 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1010 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1010 "dilithium") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1010 "crystal") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1010 "a dilithium crystal") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1010 "A shard of dilithium crystal is lying here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1010 "maybe a #$LightingDevice") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$duration #$ArtifactCol1010 -1) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$stateOfDevice #$ArtifactCol1010 #$Device-On) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1010 #$LightingDevice) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1010 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1010 #$HandTool) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1010 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1010(#$Kilogram 2)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1010(#$Dollar-UnitedStates 8000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1010(#$DollarsPerDay 250)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1010 "Dilithium crystals are used to power warp cores of starships. This particular crystal is glowing brightly, and gives off a blue-ish tinge") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1010 "dilithium") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1010 "crystal") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1011")
(sim-assert '(#$isa #$ArtifactCol1011 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1011 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1011 "picard") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1011 "picard's") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1011 "flute") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1011 "Picard's flute") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1011 "Captain Picard's wooden flute is sitting here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1011 #$Artifact-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$stateOfDevice #$ArtifactCol1011 #$Device-On) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1011 #$InformationStore) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1011 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1011 #$HandTool) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1011 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1011(#$Kilogram 3)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1011(#$Dollar-UnitedStates 8000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1011(#$DollarsPerDay 250)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1011 "Captain Picard recieved this flute when he lost his memory and was stuck on some strange world. Now, he plays it to relieve stress") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1011 "picard") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1011 "picard's") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1011 "flute") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1012")
(sim-assert '(#$isa #$ArtifactCol1012 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1012 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1012 "riker") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1012 "riker's") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1012 "trombone") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1012 "Riker's trombone") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1012 "Commander Riker's trombone has been placed here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1012 #$Artifact-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$stateOfDevice #$ArtifactCol1012 #$Device-On) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1012 #$InformationStore) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1012 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1012 #$HandTool) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1012 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1012(#$Kilogram 5)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1012(#$Dollar-UnitedStates 10000)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1012(#$DollarsPerDay 250)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1012 "Commander Riker considers himself to be a talented jazz musician. He practices on this trombone all the time") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1012 "riker") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1012 "riker's") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1012 "trombone") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1020")
(sim-assert '(#$isa #$ArtifactCol1020 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1020 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1020 "tea") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1020 "cup") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1020 "a small cup") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1020 "A small cup of tea is sitting here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1020 #$Flask-LabGlassware) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1020 #$Bottle) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1020 #$FluidReservoir) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1020 #$Container) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$volumeOfObject #$ArtifactCol1020(#$Liter 4)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$volumeContained #$ArtifactCol1020(#$Liter 4)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1020 #$Portal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$portalState #$ArtifactCol1020 #$ClosedPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$Tea-Beverage #$LiquidTangibleThing) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1020 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1020 #$HandTool) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1020 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1020(#$Kilogram 3)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1020(#$Dollar-UnitedStates 15)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1020(#$DollarsPerDay 10)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1021")
(sim-assert '(#$isa #$ArtifactCol1021 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1021 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1021 "wine") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1021 "bottle") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1021 "synthehol") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1021 "a synthehol") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1021 "A bottle of synthehol is standing here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1021 #$Flask-LabGlassware) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1021 #$Bottle) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1021 #$FluidReservoir) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1021 #$Container) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$volumeOfObject #$ArtifactCol1021(#$Liter 8)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$volumeContained #$ArtifactCol1021(#$Liter 8)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1021 #$Portal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1021 #$LimitedAccess) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$Wine #$LiquidTangibleThing) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1021 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1021 #$HandTool) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1021 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1021(#$Kilogram 6)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1021(#$Dollar-UnitedStates 30)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1021(#$DollarsPerDay 10)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1022")
(sim-assert '(#$isa #$ArtifactCol1022 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1022 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1022 "ale") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1022 "ferengi") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1022 "bottle") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1022 "a Ferengi bottle") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1022 "A bottle of Ferengi ale is sitting here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1022 #$Flask-LabGlassware) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1022 #$Bottle) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1022 #$FluidReservoir) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1022 #$Container) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$volumeOfObject #$ArtifactCol1022(#$Liter 8)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$volumeContained #$ArtifactCol1022(#$Liter 8)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1022 #$Portal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1022 #$LimitedAccess) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$AleBeer #$LiquidTangibleThing) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1022 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1022 #$HandTool) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1022 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1022(#$Kilogram 6)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1022(#$Dollar-UnitedStates 30)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1022(#$DollarsPerDay 10)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1023")
(sim-assert '(#$isa #$ArtifactCol1023 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1023 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1023 "whisky") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1023 "whiskey") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1023 "romulan") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1023 "bottle") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1023 "a Romulan bottle") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1023 "A bottle of Romulan whiskey is sitting here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1023 #$Flask-LabGlassware) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1023 #$Bottle) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1023 #$FluidReservoir) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1023 #$Container) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$volumeOfObject #$ArtifactCol1023(#$Liter 8)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$volumeContained #$ArtifactCol1023(#$Liter 8)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1023 #$Portal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1023 #$LimitedAccess) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$Whisky #$LiquidTangibleThing) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1023 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1023 #$HandTool) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1023 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1023(#$Kilogram 6)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1023(#$Dollar-UnitedStates 45)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1023(#$DollarsPerDay 10)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1024")
(sim-assert '(#$isa #$ArtifactCol1024 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1024 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1024 "lemonade") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1024 "prune") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1024 "juice") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1024 "glass") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1024 "a small glass") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1024 "A small glass of prune juice is sitting here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1024 #$Flask-LabGlassware) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1024 #$Bottle) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1024 #$FluidReservoir) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1024 #$Container) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$volumeOfObject #$ArtifactCol1024(#$Liter 8)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$volumeContained #$ArtifactCol1024(#$Liter 8)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1024 #$Portal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1024 #$LimitedAccess) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$Lemonade #$LiquidTangibleThing) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1024 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1024 #$HandTool) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1024 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1024(#$Kilogram 3)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1024(#$Dollar-UnitedStates 10)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1024(#$DollarsPerDay 10)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1025")
(sim-assert '(#$isa #$ArtifactCol1025 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1025 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1025 "beer") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1025 "vulcan") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$nicknames #$ArtifactCol1025 "bottle") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1025 "a Vulcan bottle") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$comment #$ArtifactCol1025 "A bottle of Vulcan beer is standing here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1025 #$Flask-LabGlassware) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1025 #$Bottle) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1025 #$FluidReservoir) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1025 #$Container) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$volumeOfObject #$ArtifactCol1025(#$Liter 8)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$volumeContained #$ArtifactCol1025(#$Liter 8)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1025 #$Portal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1025 #$LimitedAccess) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$Beer #$LiquidTangibleThing) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1025 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1025 #$HandTool) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$genls #$ArtifactCol1025 #$PortableObject) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1025(#$Kilogram 3)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1025(#$Dollar-UnitedStates 10)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$relationAllInstance #$cost #$ArtifactCol1025(#$DollarsPerDay 10)) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;load file '10.obj.kif'
;load file '10.shp'
;load file '10.wld'
(FORCE-PRINT ";; Sourcing C:\OpenSim\src\daxmoo\worlds\10.wld")
(find-or-create-constant "Area1000")
(sim-assert '(#$isa #$Area1000 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1000 "Main Engineering") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1000 "Main") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1000 "Engineering") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1000 "You find yourself in the middle of main engineering") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1000 "The room is longer than it is wide, and it has fairly low ceilings") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1000 "Computer terminals cover all the walls, and a large table built into the floor sits in the middle of the room") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1000 "At the far end of the room you see the warp core, a large pulsating vertical tube") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1000 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1000 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1002")
(sim-assert '(#$isa #$Area1002 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1000 #$North-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1000 #$North-Directly) #$Area1000 #$Area1002) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1000 #$North-Directly) "A corridor is North") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1000 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1000 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1000 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1000 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1000 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1001")
(FORCE-PRINT ";; Made two now")
(sim-assert '(#$isa #$Area1001 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1001 "Geordi's Quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1001 "Geordi's") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1001 "Quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1001 "You're in the middle of Geordi's quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1001 "The room is sparsely decorated, due to the fact that Geordi is blind") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1001 "A small personal computer sits on a desk against the western wall, in between two windows that look out into space") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1001 "A neatly made bed has been placed against the northern wall") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1001 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1001 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1002")
(sim-assert '(#$isa #$Area1002 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1001 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1001 #$East-Directly) #$Area1001 #$Area1002) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1001 #$East-Directly) "A corridor is East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1001 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1001 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1001 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1001 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1001 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1002")
(sim-assert '(#$isa #$Area1002 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1002 "A Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1002 "Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1002 "You find yourself in the middle of a well lit corridor on the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1002 "It isn't very wide, and the light beige walls have been rounded, making the corridor an oval shape") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1002 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1002 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1005")
(sim-assert '(#$isa #$Area1005 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1002 #$North-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1002 #$North-Directly) #$Area1002 #$Area1005) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1002 #$North-Directly) "The corridor continues North") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1003")
(sim-assert '(#$isa #$Area1003 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1002 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1002 #$East-Directly) #$Area1002 #$Area1003) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1002 #$East-Directly) "Data's Quarters are East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1000")
(sim-assert '(#$isa #$Area1000 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1002 #$South-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1002 #$South-Directly) #$Area1002 #$Area1000) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1002 #$South-Directly) "Main Engineering is South") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1001")
(sim-assert '(#$isa #$Area1001 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1002 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1002 #$West-Directly) #$Area1002 #$Area1001) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1002 #$West-Directly) "Geordi's Quarters are West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1002 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1002 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1003")
(sim-assert '(#$isa #$Area1003 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1003 "Data's Quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1003 "Data's") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1003 "Quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1003 "You're in the middle of Data's quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1003 "Some easils and paintings have been left scattered around the southern part of the room, while a huge computer screen showing a cross section of the Enterprise covers the entire northern wall") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1003 "In front of the screen is a large desk, which is covered in computer controls") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1003 "You can't see a bed in this room, but you figure it's because Data doesn't sleep") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1003 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1003 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1002")
(sim-assert '(#$isa #$Area1002 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1003 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1003 #$West-Directly) #$Area1003 #$Area1002) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1003 #$West-Directly) "A corridor is West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1003 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1003 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1003 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1003 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1003 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1004")
(sim-assert '(#$isa #$Area1004 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1004 "The Brig") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1004 "Brig") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1004 "You're in the dimly lit Brig") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1004 "This is where all the criminals and prisoners are kept while on board the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1004 "Three fairly large cells can been seen in the southern part of the room, and they're all empty") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1004 "A computer control panel is situated in the northwestern corner of the room, which is where the force fields for the cells are controlled") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1004 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1004 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1005")
(sim-assert '(#$isa #$Area1005 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1004 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1004 #$East-Directly) #$Area1004 #$Area1005) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1004 #$East-Directly) "A corridor is East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1004 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1004 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1004 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1004 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1004 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1005")
(sim-assert '(#$isa #$Area1005 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1005 "A Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1005 "Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1005 "You find yourself in the middle of a well lit corridor on the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1005 "It isn't very wide, and the light beige walls have been rounded, making the corridor an oval shape") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1005 "You notice a tiny computer panel embedded into the wall") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1005 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1005 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1008")
(sim-assert '(#$isa #$Area1008 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1005 #$North-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1005 #$North-Directly) #$Area1005 #$Area1008) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1005 #$North-Directly) "The corridor continues North") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1006")
(sim-assert '(#$isa #$Area1006 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1005 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1005 #$East-Directly) #$Area1005 #$Area1006) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1005 #$East-Directly) "The Transporter Room is East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1002")
(sim-assert '(#$isa #$Area1002 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1005 #$South-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1005 #$South-Directly) #$Area1005 #$Area1002) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1005 #$South-Directly) "The corridor continues South") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1004")
(sim-assert '(#$isa #$Area1004 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1005 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1005 #$West-Directly) #$Area1005 #$Area1004) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1005 #$West-Directly) "The Brig is West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1005-Object666")
(sim-assert '(#$isa #$Area1005-Object666 #$PartiallyTangible) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1005-Object666 "The panel says: <br> <br>*************************************************** <br>* * <br>* NCC-1701-D - 'ENTERPRISE' * <br>* * <br>* ***** * <br>* ********************** * <br>* *********************** _________ * <br>* ***** ***(___ ____( * <br>* ***** \ \* * <br>* ********** * <br>* * <br>* You are currently on deck 1 * <br>* * <br>***************************************************") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$in-ContCompletely #$Area1005-Object666 #$Area1005) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1005-Object666 "control") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1005-Object666 "panel") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1005-Object666 "computer") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1005-Object666 "screen") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1005-Object666 "sign") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1005 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1005 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1006")
(sim-assert '(#$isa #$Area1006 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1006 "Transporter Room") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1006 "Transporter") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1006 "Room") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1006 "You're in the Enterprise transporter room") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1006 "A computer terminal is sitting near the southern wall, where the transporter chief can control the transporters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1006 "Eight round transport pads have been arranged in a circle, on a raised platform against the northern wall") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1006 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1006 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1042")
(sim-assert '(#$isa #$Area1042 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1006 #$North-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1006 #$North-Directly) #$Area1006 #$Area1042) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1006 #$North-Directly) "A transporter beam is North") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1005")
(sim-assert '(#$isa #$Area1005 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1006 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1006 #$West-Directly) #$Area1006 #$Area1005) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1006 #$West-Directly) "A corridor is West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1006 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1006 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1006 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1006 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1007")
(sim-assert '(#$isa #$Area1007 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1007 "School") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1007 "School") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1007 "You step through the doors and find yourself in a large school room") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1007 "Various tables and chairs are set up all around the room, and many paintings and drawings have been attached to the walls") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1007 "Several computer consoles with a children's interface on them can be seen on the tables") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1007 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1007 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1008")
(sim-assert '(#$isa #$Area1008 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1007 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1007 #$East-Directly) #$Area1007 #$Area1008) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1007 #$East-Directly) "A corridor is East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1007 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1007 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1007 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1007 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1007 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1008")
(sim-assert '(#$isa #$Area1008 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1008 "A Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1008 "Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1008 "You find yourself in the middle of a well lit corridor on the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1008 "It isn't very wide, and the light beige walls have been rounded, making the corridor an oval shape") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1008 "You see the holodeck's control panel beside the holodeck door, and it has some information on it") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1008 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1008 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1010")
(sim-assert '(#$isa #$Area1010 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1008 #$North-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1008 #$North-Directly) #$Area1008 #$Area1010) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1008 #$North-Directly) "The turbolift is North") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1009")
(sim-assert '(#$isa #$Area1009 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1008 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1008 #$East-Directly) #$Area1008 #$Area1009) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1008 #$East-Directly) "Holodeck 2 is East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1005")
(sim-assert '(#$isa #$Area1005 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1008 #$South-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1008 #$South-Directly) #$Area1008 #$Area1005) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1008 #$South-Directly) "The corridor continues South") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1007")
(sim-assert '(#$isa #$Area1007 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1008 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1008 #$West-Directly) #$Area1008 #$Area1007) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1008 #$West-Directly) "The School is West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1008-Object667")
(sim-assert '(#$isa #$Area1008-Object667 #$PartiallyTangible) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1008-Object667 "It looks like this: <br> <br>*************************************************** <br>* * <br>* NCC-1701-D - 'ENTERPRISE' * <br>* HOLODECK 2 * <br>* * <br>* STATUS : Inactive * <br>* CURRENT PROGRAM : N/A * <br>* SAFETIES : N/A * <br>* * <br>* NOTE: Starfleet is not responsible for * <br>* any injuries incurred while on this * <br>* holodeck! * <br>* * <br>* WARNING: While the safeties are disabled, you * <br>* CAN be injured, or even killed. * <br>* * <br>***************************************************") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$in-ContCompletely #$Area1008-Object667 #$Area1008) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1008-Object667 "holodeck") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1008-Object667 "computer") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1008-Object667 "control") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1008-Object667 "panel") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1008-Object667 "sign") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1008 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1008 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1009")
(sim-assert '(#$isa #$Area1009 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1009 "Holodeck 2") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1009 "Holodeck") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1009 "You're now on Holodeck 2") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1009 "The room is just a large cube, with jet black walls and a yellow grid painted on the floors, the walls, and the ceiling") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1009 "This is where different programs can be loaded and experienced, which seem totally real") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1009 "Right now, this holodeck is not functioning") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1009 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1009 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1008")
(sim-assert '(#$isa #$Area1008 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1009 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1009 #$West-Directly) #$Area1009 #$Area1008) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1009 #$West-Directly) "A corridor is West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1009 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1009 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1009 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1009 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1009 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1010")
(sim-assert '(#$isa #$Area1010 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1010 "Turbolift") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1010 "Turbolift") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1010 "You're in the turbolift") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1010 "The turbolift walls have been rounded off, making it in the shape of a tube") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1010 "Several vertical rows of lights make this place very well lit") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1010 "From here, you can access the other decks on the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1010 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1010 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1008")
(sim-assert '(#$isa #$Area1008 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1010 #$South-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1010 #$South-Directly) #$Area1010 #$Area1008) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1010 #$South-Directly) "A corridor leads South") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1011")
(sim-assert '(#$isa #$Area1011 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1010 #$Up-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1010 #$Up-Directly) #$Area1010 #$Area1011) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1010 #$Up-Directly) "The turbolift goes Up") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1010 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1010 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1010 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1010 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1011")
(sim-assert '(#$isa #$Area1011 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1011 "Turbolift") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1011 "Turbolift") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1011 "You're in the turbolift") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1011 "The turbolift walls have been rounded off, making it in the shape of a tube") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1011 "Several vertical rows of lights make this place very well lit") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1011 "From here, you can accessthe other decks on the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1011 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1011 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1013")
(sim-assert '(#$isa #$Area1013 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1011 #$North-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1011 #$North-Directly) #$Area1011 #$Area1013) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1011 #$North-Directly) "A corridor leads North") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1032")
(sim-assert '(#$isa #$Area1032 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1011 #$Up-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1011 #$Up-Directly) #$Area1011 #$Area1032) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1011 #$Up-Directly) "The turbolift goes Up") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1010")
(sim-assert '(#$isa #$Area1010 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1011 #$Down-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1011 #$Down-Directly) #$Area1011 #$Area1010) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1011 #$Down-Directly) "The turbolift goes Down") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1011 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1011 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1011 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1012")
(sim-assert '(#$isa #$Area1012 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1012 "Cargo Bay 1") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1012 "Cargo") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1012 "Bay") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1012 "You're in the main cargo bay of the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1012 "It's quite a large room, with a very high ceiling and a lot of floor space") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1012 "You can see several hundred plastic crates and barrels with the Starfleet insignia on them stacked right up to the ceiling") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1012 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1012 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1013")
(sim-assert '(#$isa #$Area1013 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1012 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1012 #$East-Directly) #$Area1012 #$Area1013) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1012 #$East-Directly) "A corridor is East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1012 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1012 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1012 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1012 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1012 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1013")
(sim-assert '(#$isa #$Area1013 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1013 "A Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1013 "Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1013 "You find yourself in the middle of a well lit corridor on the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1013 "It isn't very wide, and the light beige walls have been rounded, making the corridor an oval shape") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1013 "You notice a tiny computer panel embedded into the wall") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1013 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1013 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1016")
(sim-assert '(#$isa #$Area1016 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1013 #$North-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1013 #$North-Directly) #$Area1013 #$Area1016) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1013 #$North-Directly) "The corridor continues North") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1014")
(sim-assert '(#$isa #$Area1014 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1013 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1013 #$East-Directly) #$Area1013 #$Area1014) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1013 #$East-Directly) "Riker's Quarters are East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1011")
(sim-assert '(#$isa #$Area1011 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1013 #$South-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1013 #$South-Directly) #$Area1013 #$Area1011) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1013 #$South-Directly) "The Turbolift is South") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1012")
(sim-assert '(#$isa #$Area1012 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1013 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1013 #$West-Directly) #$Area1013 #$Area1012) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1013 #$West-Directly) "The Cargo Bay is West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1013-Object668")
(sim-assert '(#$isa #$Area1013-Object668 #$PartiallyTangible) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1013-Object668 "The panel says: <br> <br>*************************************************** <br>* * <br>* NCC-1701-D - 'ENTERPRISE' * <br>* * <br>* ***** * <br>* ********************** * <br>* *********************** _________ * <br>* ***** ***(___ ____( * <br>* ***** \ \* * <br>* ********** * <br>* * <br>* You are currently on deck 2 * <br>* * <br>***************************************************") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$in-ContCompletely #$Area1013-Object668 #$Area1013) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1013-Object668 "control") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1013-Object668 "panel") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1013-Object668 "computer") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1013-Object668 "screen") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1013-Object668 "sign") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1013 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1013 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1014")
(sim-assert '(#$isa #$Area1014 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1014 "Riker's Quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1014 "Riker's") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1014 "Quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1014 "You've arrived in Riker's quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1014 "The room is very neat and tidy, with a couch and several chairs aranged around a coffee table by the eastern wall") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1014 "A small partition at the northern part of the room seperates his sleeping area with the rest of the room") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1014 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1014 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1013")
(sim-assert '(#$isa #$Area1013 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1014 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1014 #$West-Directly) #$Area1014 #$Area1013) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1014 #$West-Directly) "A corridor is West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1014 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1014 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1014 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1014 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1014 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1015")
(sim-assert '(#$isa #$Area1015 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1015 "Sick Bay") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1015 "Sick") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1015 "Bay") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1015 "You're in the middle of the Enterprise's Sick Bay") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1015 "About a dozen beds are arranged along the walls of the room, while several carts covered with medical supplies are scattered around the room") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1015 "A large glass window in the northern part of the room separates the doctor's office with the rest of the room") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1015 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1015 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1016")
(sim-assert '(#$isa #$Area1016 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1015 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1015 #$East-Directly) #$Area1015 #$Area1016) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1015 #$East-Directly) "A corridor is East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1015 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1015 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1015 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1015 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1015 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1016")
(sim-assert '(#$isa #$Area1016 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1016 "A Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1016 "Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1016 "You find yourself in the middle of a well lit corridor on the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1016 "It isn't very wide, and the light beige walls have been rounded, making the corridor an oval shape") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1016 "You see the holodeck's control panel beside the holodeck door, and it has some information on it") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1016 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1016 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1019")
(sim-assert '(#$isa #$Area1019 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1016 #$North-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1016 #$North-Directly) #$Area1016 #$Area1019) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1016 #$North-Directly) "The corridor continues North") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1017")
(sim-assert '(#$isa #$Area1017 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1016 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1016 #$East-Directly) #$Area1016 #$Area1017) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1016 #$East-Directly) "Holodeck 4 is East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1013")
(sim-assert '(#$isa #$Area1013 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1016 #$South-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1016 #$South-Directly) #$Area1016 #$Area1013) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1016 #$South-Directly) "The corridor continues South") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1015")
(sim-assert '(#$isa #$Area1015 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1016 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1016 #$West-Directly) #$Area1016 #$Area1015) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1016 #$West-Directly) "Sick Bay is West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1016-Object669")
(sim-assert '(#$isa #$Area1016-Object669 #$PartiallyTangible) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1016-Object669 "It looks like this: <br> <br>*************************************************** <br>* * <br>* NCC-1701-D - 'ENTERPRISE' * <br>* HOLODECK 4 * <br>* * <br>* STATUS : Active * <br>* CURRENT PROGRAM : Sherlock Holmes(19th * <br>* century London) * <br>* SAFETIES : Disabled * <br>* * <br>* NOTE: Starfleet is not responsible for * <br>* any injuries incurred while on this * <br>* holodeck! * <br>* * <br>* WARNING: While the safeties are disabled, you * <br>* CAN be injured, or even killed. * <br>* * <br>* -ENTER WHEN READY- * <br>* * <br>***************************************************") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$in-ContCompletely #$Area1016-Object669 #$Area1016) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1016-Object669 "holodeck") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1016-Object669 "computer") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1016-Object669 "control") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1016-Object669 "panel") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1016-Object669 "sign") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1016 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1016 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1017")
(sim-assert '(#$isa #$Area1017 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1017 "Holodeck 4 Entrance - A Narrow Alley") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1017 "Holodeck") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1017 "Entrance") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1017 "Narrow") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1017 "Alley") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1017 "You emerge into a dark narrow alley") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1017 "Tall dark brick buildings block your way north and south") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1017 "You can see that the windows on the buildings are fairly high, and some have been boarded up") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1017 "The smell from the rotting food and garbage mixing with the foul water on the ground is unbearable") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1017 "You can hear the sounds of a bustling marketpace to the east") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1017 "The archway leading out of the holodeck is west") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1017 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1017 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1016")
(sim-assert '(#$isa #$Area1016 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1017 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1017 #$West-Directly) #$Area1017 #$Area1016) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1017 #$West-Directly) "A corridor is West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1017 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1017 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1017 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1017 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1017 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1018")
(sim-assert '(#$isa #$Area1018 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1018 "Crusher's Quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1018 "Crusher's") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1018 "Quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1018 "You're in Doctor Crusher's quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1018 "Several different paintings are attached to the walls, and you also notice a few sculptures") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1018 "A neatly made bed is located by the northern wall, in between two large windows looking out into space") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1018 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1018 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1019")
(sim-assert '(#$isa #$Area1019 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1018 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1018 #$East-Directly) #$Area1018 #$Area1019) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1018 #$East-Directly) "A corridor is East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1018 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1018 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1018 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1018 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1018 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1019")
(sim-assert '(#$isa #$Area1019 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1019 "A Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1019 "Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1019 "You find yourself in the middle of a well lit corridor on the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1019 "It isn't very wide, and the light beige walls have been rounded, making the corridor an oval shape") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1019 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1019 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1021")
(sim-assert '(#$isa #$Area1021 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1019 #$North-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1019 #$North-Directly) #$Area1019 #$Area1021) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1019 #$North-Directly) "Ten Forward is North") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1020")
(sim-assert '(#$isa #$Area1020 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1019 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1019 #$East-Directly) #$Area1019 #$Area1020) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1019 #$East-Directly) "Security is East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1016")
(sim-assert '(#$isa #$Area1016 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1019 #$South-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1019 #$South-Directly) #$Area1019 #$Area1016) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1019 #$South-Directly) "The corridor continues South") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1018")
(sim-assert '(#$isa #$Area1018 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1019 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1019 #$West-Directly) #$Area1019 #$Area1018) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1019 #$West-Directly) "Crusher's Quarters are West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1019 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1019 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1020")
(sim-assert '(#$isa #$Area1020 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1020 "Enterprise Security") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1020 "Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1020 "Security") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1020 "You're standing in the dimly lit Enterprise Security") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1020 "Weapons lockers cover all of the walls, except along the northern wall, where a large glass window protects dozens of different phasors, blaster rifles, and other high tech weapons") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1020 "Three long tables surrounded by chairs stretch across the room") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1020 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1020 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1019")
(sim-assert '(#$isa #$Area1019 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1020 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1020 #$West-Directly) #$Area1020 #$Area1019) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1020 #$West-Directly) "A corridor is West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1020 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1020 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1020 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1020 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1020 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1021")
(sim-assert '(#$isa #$Area1021 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1021 "Ten Forward") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1021 "Ten") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1021 "Forward") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1021 "You're now in Ten Forward, the entertainment room of the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1021 "The entire northern wall is covered with windows looking out into space, while two large wooden doors with the Starfleet insignia stamped on them face south") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1021 "Many round metal tables are scattered around the room, surrounded by metal chairs") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1021 "A long bar spans almost the entire length of the southern part of the room, and about two dozen bar stools are sitting in front of it") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1021 "It's very noisy in here, due to all the talking and laughing") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1021 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1021 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1019")
(sim-assert '(#$isa #$Area1019 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1021 #$South-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1021 #$South-Directly) #$Area1021 #$Area1019) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1021 #$South-Directly) "A corridor is South") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1021 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1021 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1021 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1021 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1021 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1022")
(sim-assert '(#$isa #$Area1022 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1022 "Shuttle Bay") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1022 "Shuttle") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1022 "Bay") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1022 "You're in the main shuttle bay of the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1022 "It's quite a large room, with a very high ceiling and a lot of floor space") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1022 "You can see three different shuttle crafts sitting here, waiting to be flown") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1022 "A large grey door leads into space") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1022 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1022 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1024")
(sim-assert '(#$isa #$Area1024 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1022 #$North-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1022 #$North-Directly) #$Area1022 #$Area1024) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1022 #$North-Directly) "A corridor is North") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1039")
(sim-assert '(#$isa #$Area1039 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1022 #$South-Directly) #$Doorway) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1022 #$South-Directly) #$Area1022 #$Area1039) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nicknames(#$BoundsOfDirectionFn #$Area1022 #$South-Directly) "door") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nicknames(#$BoundsOfDirectionFn #$Area1022 #$South-Directly) "grey") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nicknames(#$BoundsOfDirectionFn #$Area1022 #$South-Directly) "doors") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1022 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1022 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1022 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1022 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1023")
(sim-assert '(#$isa #$Area1023 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1023 "Troi's Quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1023 "Troi's") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1023 "Quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1023 "You're in Counselor Deanna Troi's quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1023 "Several different paintings have been hung from the walls, and a small couch and a recliner are positioned around a coffee table") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1023 "A neatly made bed is partially hidden behind a curtain at the northern part of the room") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1023 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1023 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1024")
(sim-assert '(#$isa #$Area1024 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1023 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1023 #$East-Directly) #$Area1023 #$Area1024) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1023 #$East-Directly) "A corridor is East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1023 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1023 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1023 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1023 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1023 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1024")
(sim-assert '(#$isa #$Area1024 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1024 "A Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1024 "Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1024 "You find yourself in the middle of a well lit corridor on the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1024 "It isn't very wide, and the light beige walls have been rounded, making the corridor an oval shape") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1024 "You notice a tiny computer panel embedded into the wall") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1024 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1024 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1027")
(sim-assert '(#$isa #$Area1027 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1024 #$North-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1024 #$North-Directly) #$Area1024 #$Area1027) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1024 #$North-Directly) "The corridor continues North") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1025")
(sim-assert '(#$isa #$Area1025 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1024 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1024 #$East-Directly) #$Area1024 #$Area1025) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1024 #$East-Directly) "Worf's Quarters are East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1022")
(sim-assert '(#$isa #$Area1022 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1024 #$South-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1024 #$South-Directly) #$Area1024 #$Area1022) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1024 #$South-Directly) "The shuttle bay is South") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1023")
(sim-assert '(#$isa #$Area1023 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1024 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1024 #$West-Directly) #$Area1024 #$Area1023) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1024 #$West-Directly) "Troi's Quarters are West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1024-Object670")
(sim-assert '(#$isa #$Area1024-Object670 #$PartiallyTangible) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1024-Object670 "The panel says: <br> <br>*************************************************** <br>* * <br>* NCC-1701-D - 'ENTERPRISE' * <br>* * <br>* ***** * <br>* ********************** * <br>* *********************** _________ * <br>* ***** ***(___ ____( * <br>* ***** \ \* * <br>* ********** * <br>* * <br>* You are currently on deck 3 * <br>* * <br>***************************************************") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$in-ContCompletely #$Area1024-Object670 #$Area1024) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1024-Object670 "control") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1024-Object670 "panel") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1024-Object670 "computer") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1024-Object670 "screen") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1024-Object670 "sign") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1024 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1024 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1025")
(sim-assert '(#$isa #$Area1025 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1025 "Worf's Quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1025 "Worf's") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1025 "Quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1025 "You're in Worf's quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1025 "A small table is sitting in the southeastern corner, and on it is a small potted plant") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1025 "An impressive selection of Klingon weapons have been mounted on the northern wall, and a partition splits this room with Worf's bedroom to the east") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1025 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1025 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1024")
(sim-assert '(#$isa #$Area1024 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1025 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1025 #$West-Directly) #$Area1025 #$Area1024) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1025 #$West-Directly) "A corridor is West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1025 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1025 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1025 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1025 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1025 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1026")
(sim-assert '(#$isa #$Area1026 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1026 "Enterprise Gym") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1026 "Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1026 "Gym") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1026 "You emerge into the Enterprise gym") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1026 "The room is quite large, with a soft grey floor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1026 "A set of lockers against the southern wall contain all of the necessary equipment needed for using the gym") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1026 "A thick stack of mats have been piled high in one corner, which can be used for different activities") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1026 "Captain Picard likes to come here to practice his fencing") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1026 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1026 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1027")
(sim-assert '(#$isa #$Area1027 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1026 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1026 #$East-Directly) #$Area1026 #$Area1027) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1026 #$East-Directly) "A corridor is East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1026 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1026 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1026 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1026 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1026 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1027")
(sim-assert '(#$isa #$Area1027 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1027 "A Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1027 "Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1027 "You find yourself in the middle of a well lit corridor on the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1027 "It isn't very wide, and the light beige walls have been rounded, making the corridor an oval shape") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1027 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1027 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1030")
(sim-assert '(#$isa #$Area1030 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1027 #$North-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1027 #$North-Directly) #$Area1027 #$Area1030) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1027 #$North-Directly) "The corridor continues North") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1028")
(sim-assert '(#$isa #$Area1028 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1027 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1027 #$East-Directly) #$Area1027 #$Area1028) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1027 #$East-Directly) "Picard's Quarters are East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1024")
(sim-assert '(#$isa #$Area1024 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1027 #$South-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1027 #$South-Directly) #$Area1027 #$Area1024) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1027 #$South-Directly) "The corridor continues South") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1026")
(sim-assert '(#$isa #$Area1026 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1027 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1027 #$West-Directly) #$Area1027 #$Area1026) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1027 #$West-Directly) "The Enterprise Gym is West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1027 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1027 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1028")
(sim-assert '(#$isa #$Area1028 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1028 "Picard's Quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1028 "Picard's") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1028 "Quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1028 "You find yourself standing by the door of Captain Picard's quarters") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1028 "He isn't very fond of visitors, but you decide to stay and have a look around") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1028 "You can see several different ancient artifacts on tables and small pedestals, and a large wooden wardrobe is facing south") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1028 "A comfortable looking recliner with a matching footrest sits beside the door, along with a bright reading lamp and end table") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1028 "Two large windows offer a great view of space") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1028 "A small partition at the northern part of the room contains Picard's sleeping area") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1028 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1028 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1027")
(sim-assert '(#$isa #$Area1027 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1028 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1028 #$West-Directly) #$Area1028 #$Area1027) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1028 #$West-Directly) "A corridor is West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1028 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1028 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1028 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1028 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1028 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1029")
(sim-assert '(#$isa #$Area1029 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1029 "Science Lab") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1029 "Science") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1029 "Lab") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1029 "You're in the Enterprise science lab") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1029 "A strange looking machine sits in the middle of the room, up on a slightly raised platform") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1029 "It looks as though something(or someone) could be placed inside, hooked up to the multitude of wires and cables, and have scientific tests performed on it(or them)") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1029 "A complex looking computer console is facing this machine") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1029 "Around the rest of the room are counterops with with the odd computer terminal") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1029 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1029 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1030")
(sim-assert '(#$isa #$Area1030 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1029 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1029 #$East-Directly) #$Area1029 #$Area1030) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1029 #$East-Directly) "A corridor is East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1029 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1029 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1029 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1029 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1029 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1030")
(sim-assert '(#$isa #$Area1030 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1030 "A Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1030 "Corridor") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1030 "You find yourself in the middle of a well lit corridor on the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1030 "It isn't very wide, and the light beige walls have been rounded, making the corridor an oval shape") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1030 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1030 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1032")
(sim-assert '(#$isa #$Area1032 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1030 #$North-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1030 #$North-Directly) #$Area1030 #$Area1032) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1030 #$North-Directly) "The Turbolift is North") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1031")
(sim-assert '(#$isa #$Area1031 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1030 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1030 #$East-Directly) #$Area1030 #$Area1031) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1030 #$East-Directly) "Empty Quarters are East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1027")
(sim-assert '(#$isa #$Area1027 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1030 #$South-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1030 #$South-Directly) #$Area1030 #$Area1027) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1030 #$South-Directly) "The corridor continues South") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1029")
(sim-assert '(#$isa #$Area1029 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1030 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1030 #$West-Directly) #$Area1030 #$Area1029) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1030 #$West-Directly) "Empty Quarters are West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1030 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1030 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1031")
(sim-assert '(#$isa #$Area1031 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1031 "Cargo Bay 2") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1031 "Cargo") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1031 "Bay") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1031 "You're in the cargo bay 2 of the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1031 "It's quite a large room, with a very high ceiling and a lot of floor space") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1031 "You can see several hundred plastic crates and barrels with the Starfleet insignia on them stacked right up to the ceiling") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1031 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1031 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1030")
(sim-assert '(#$isa #$Area1030 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1031 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1031 #$West-Directly) #$Area1031 #$Area1030) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1031 #$West-Directly) "A corridor is West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1031 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1031 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1031 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1031 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1031 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1032")
(sim-assert '(#$isa #$Area1032 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1032 "Turbolift") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1032 "Turbolift") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1032 "You're in the turbolift") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1032 "The turbolift walls have been rounded off, making it in the shape of a tube") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1032 "Several vertical rows of lights make this place very well lit") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1032 "From here, you can access the other decks on the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1032 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1032 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1030")
(sim-assert '(#$isa #$Area1030 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1032 #$South-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1032 #$South-Directly) #$Area1032 #$Area1030) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1032 #$South-Directly) "A corridor leads South") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1033")
(sim-assert '(#$isa #$Area1033 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1032 #$Up-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1032 #$Up-Directly) #$Area1032 #$Area1033) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1032 #$Up-Directly) "The turbolift goes Up") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1011")
(sim-assert '(#$isa #$Area1011 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1032 #$Down-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1032 #$Down-Directly) #$Area1032 #$Area1011) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1032 #$Down-Directly) "The turbolift goes Down") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1032 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1032 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1032 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1033")
(sim-assert '(#$isa #$Area1033 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1033 "Turbolift") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1033 "Turbolift") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1033 "You're in the turbolift") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1033 "The turbolift walls have been rounded off, making it in the shape of a tube") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1033 "Several vertical rows of lights make this place very well lit") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1033 "From here, you can access the other decks on the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1033 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1033 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1034")
(sim-assert '(#$isa #$Area1034 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1033 #$Up-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1033 #$Up-Directly) #$Area1033 #$Area1034) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1033 #$Up-Directly) "The turbolift goes Up") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1032")
(sim-assert '(#$isa #$Area1032 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1033 #$Down-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1033 #$Down-Directly) #$Area1033 #$Area1032) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1033 #$Down-Directly) "The turbolift goes Down") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1033 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1033 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1033 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1033 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1034")
(sim-assert '(#$isa #$Area1034 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1034 "Turbolift") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1034 "Turbolift") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1034 "You're in the turbolift") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1034 "The turbolift walls have been rounded off, making it in the shape of a tube") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1034 "Several vertical rows of lights make this place very well lit") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1034 "From here, you can access the other decks on the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1034 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1034 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1036")
(sim-assert '(#$isa #$Area1036 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1034 #$Up-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1034 #$Up-Directly) #$Area1034 #$Area1036) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1034 #$Up-Directly) "The Main Bridge is Up") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1033")
(sim-assert '(#$isa #$Area1033 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1034 #$Down-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1034 #$Down-Directly) #$Area1034 #$Area1033) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1034 #$Down-Directly) "The turbolift goes Down") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1034 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1034 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1034 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1034 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1035")
(sim-assert '(#$isa #$Area1035 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1035 "Picard's Ready Room") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1035 "Picard's") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1035 "Ready") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1035 "Room") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1035 "You're standing in Captain Picard's ready room") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1035 "A long couch has been placed beside the door, while a large U shaped desk is located by the northern wall") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1035 "A small computer screen is sitting on the desk, as well as several other papers and documents") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1035 "A single high window beside the desk looks into space, and a fish tank is located in the northwestern corner of the room") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1035 "This is where the Captain makes all of his important decisions") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1035 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1035 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1038")
(sim-assert '(#$isa #$Area1038 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1035 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1035 #$East-Directly) #$Area1035 #$Area1038) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1035 #$East-Directly) "The Main Bridge - Lower Half is East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1035 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1035 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1035 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1035 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1035 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1036")
(sim-assert '(#$isa #$Area1036 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1036 "Main Bridge - Upper Half") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1036 "Main") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1036 "Bridge") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1036 "Upper") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1036 "Half") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1036 "You find yourself on the upper half of the main bridge of the USS Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1036 "Directly in front of you is a thick railing that contains many different computer panels used for the tactical systems of the ship") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1036 "The entire southern wall is covered with computer consoles, where the ship's main systems are controlled") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1036 "Two small curved ramps on either side of the room lead north to the lower part of the bridge, and a large circular skylight shows the space outside the ship") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1036 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1036 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1038")
(sim-assert '(#$isa #$Area1038 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1036 #$North-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1036 #$North-Directly) #$Area1036 #$Area1038) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1036 #$North-Directly) "The Main Bridge - Lower Half is North") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1037")
(sim-assert '(#$isa #$Area1037 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1036 #$East-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1036 #$East-Directly) #$Area1036 #$Area1037) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1036 #$East-Directly) "The Conference Room is East") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1034")
(sim-assert '(#$isa #$Area1034 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1036 #$Down-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1036 #$Down-Directly) #$Area1036 #$Area1034) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1036 #$Down-Directly) "The Turbolift is Down") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1036 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1036 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1036 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1037")
(sim-assert '(#$isa #$Area1037 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1037 "Conference Room") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1037 "Conference") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1037 "Room") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1037 "You're in the conference room of the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1037 "A large glass rectangular table sits in the middle of the room, surrounded by about a dozen comfortable looking office chairs") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1037 "The entire eastern wall is covered with windows, looking out into space") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1037 "This is where the senior officers of the Enterprise meet and discuss important issues") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1037 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1037 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1036")
(sim-assert '(#$isa #$Area1036 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1037 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1037 #$West-Directly) #$Area1037 #$Area1036) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1037 #$West-Directly) "The Main Bridge - Upper Half is West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1037 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1037 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1037 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1037 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1037 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1038")
(sim-assert '(#$isa #$Area1038 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1038 "Main Bridge - Lower Half") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1038 "Main") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1038 "Bridge") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1038 "Lower") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1038 "Half") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1038 "You find yourself on the lower half of the main bridge of the USS Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1038 "An enormous view screen covers almost the entire northern wall, and is currently displaying a view of the stars rushing by") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1038 "Three large chairs in the northern part of the room, in front of the railing, face the screen") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1038 "This is where the Captain, Commander Riker, and Counselor Troi sit") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1038 "Two computer consoles with built in chairs rest about ten feet in front of the chairs, also facing the view screen") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1038 "This is where the ship's pilot and information officer sit") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1038 #$Indoors-IsolatedFromOutside) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1038 #$SpaceInAHOC) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1036")
(sim-assert '(#$isa #$Area1036 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1038 #$South-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1038 #$South-Directly) #$Area1038 #$Area1036) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1038 #$South-Directly) "The Main Bridge - Upper Half is South") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1035")
(sim-assert '(#$isa #$Area1035 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1038 #$West-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1038 #$West-Directly) #$Area1038 #$Area1035) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1038 #$West-Directly) "The Captain's Ready Room is West") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1038 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1038 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1038 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1038 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1039")
(sim-assert '(#$isa #$Area1039 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1039 "Outer Space by the Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1039 "Outer") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1039 "Space") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1039 "Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1039 "You're floating in outer space right beside the USS Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1039 "You can see stars in every direction, which provide the only light here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1039 "You feel very cold") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1039 "A large grey door leads into the Enterprise's Shuttle Bay") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1039 #$FreeSpaceContent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1022")
(sim-assert '(#$isa #$Area1022 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1039 #$North-Directly) #$Doorway) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1039 #$North-Directly) #$Area1039 #$Area1022) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1039 #$North-Directly) "The Shuttle Bay is North") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nicknames(#$BoundsOfDirectionFn #$Area1039 #$North-Directly) "door") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nicknames(#$BoundsOfDirectionFn #$Area1039 #$North-Directly) "doors") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nicknames(#$BoundsOfDirectionFn #$Area1039 #$North-Directly) "grey") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1040")
(sim-assert '(#$isa #$Area1040 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1039 #$Up-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1039 #$Up-Directly) #$Area1039 #$Area1040) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1039 #$Up-Directly) "Outer Space is Up") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1039 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1039 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1039 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1039 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1040")
(sim-assert '(#$isa #$Area1040 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1040 "Outer Space") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1040 "Outer") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1040 "Space") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1040 "You're floating in outer space right above the USS Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1040 "You can see stars in every direction, which provide the only light here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1040 "You feel very cold") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1040 #$FreeSpaceContent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1041")
(sim-assert '(#$isa #$Area1041 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1040 #$Up-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1040 #$Up-Directly) #$Area1040 #$Area1041) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1040 #$Up-Directly) "Outer Space is Up") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1039")
(sim-assert '(#$isa #$Area1039 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1040 #$Down-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1040 #$Down-Directly) #$Area1040 #$Area1039) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1040 #$Down-Directly) "Outer Space is Down") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1040 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1040 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1040 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1040 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1041")
(sim-assert '(#$isa #$Area1041 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1041 "Outer Space") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1041 "Outer") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1041 "Space") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1041 "You're floating in outer space right above the USS Enterprise") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1041 "You can see stars in every direction, which provide the only light here") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1041 "You feel very cold") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1041 #$FreeSpaceContent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area-1")
(sim-assert '(#$isa #$Area-1 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1041 #$Up-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1041 #$Up-Directly) #$Area1041 #$Area1041) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1041 #$Up-Directly) "* The Galaxy is Up") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nicknames(#$BoundsOfDirectionFn #$Area1041 #$Up-Directly) "*") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1040")
(sim-assert '(#$isa #$Area1040 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1041 #$Down-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1041 #$Down-Directly) #$Area1041 #$Area1040) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1041 #$Down-Directly) "Outer Space is Down") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1041 #$North-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1041 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1041 #$South-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1041 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1042")
(sim-assert '(#$isa #$Area1042 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$nameString #$Area1042 "Transporter Beam") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1042 "Transporter") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '( #$nicknames #$Area1042 "Beam") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1042 "You find yourself in a transporter beam") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1042 "All you can see is blue flashing light") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1042 "It feels as though your body is racing around at high speeds") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$definiteDescriptions #$Area1042 "As you try to look down at your body, you realize that there's nothing there!") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$Area1042 #$FreeSpaceContent) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area4075")
(sim-assert '(#$isa #$Area4075 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1042 #$North-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1042 #$North-Directly) #$Area1042 #$Area4075) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1006")
(sim-assert '(#$isa #$Area1006 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1042 #$South-Directly) #$OpenPortal) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1042 #$South-Directly) #$Area1042 #$Area1006) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1042 #$South-Directly) "The Transporter Room is South") *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1042 #$East-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1042 #$West-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1042 #$Up-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1042 #$Down-Directly) #$Wall-GenericBarrier) *WorldStaticStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;load file '10.wld.kif'
;load file '10.zon'
(FORCE-PRINT ";; Sourcing C:\OpenSim\src\daxmoo\worlds\10.zon")
(find-or-create-constant "NpcCol1013")
(sim-assert '(#$isa #$NpcCol1013 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1013 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1013-Alexander671")
(find-or-create-constant "NpcCol1013")
(sim-assert '(#$isa #$NpcCol1013-Alexander671 #$NpcCol1013) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1013-Alexander671 "Alexander") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1025")
(sim-assert '(#$isa #$Area1025 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1013-Alexander671 #$Area1025) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )

(sim-assert '(#$isa #$NpcCol1001 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1001 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))

;;(find-or-create-constant "cyc_bot_1")
(sim-assert '(#$isa (#$SimItemFn "cyc_bot_1") #$NpcCol1001) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString (#$SimItemFn "cyc_bot_1") "Data") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString (#$SimItemFn "cyc_bot_1") "CycLBot") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString (#$SimItemFn "cyc_bot_1") "CycBot") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString (#$SimItemFn "cyc_bot_1") "CycBot1") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1029")
(sim-assert '(#$isa #$Area1029 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely (#$SimItemFn "cyc_bot_1") #$Area1010) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots673")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots673 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots673 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots673(#$The(#$BodyPartCollectionFn (#$SimItemFn "cyc_bot_1") #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge674")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge674 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge674 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge674(#$The(#$BodyPartCollectionFn (#$SimItemFn "cyc_bot_1") #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003")
(sim-assert '(#$isa #$ArtifactCol1003 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1003 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003-Gold-Uniform675")
(find-or-create-constant "ArtifactCol1003")
(sim-assert '(#$isa #$ArtifactCol1003-Gold-Uniform675 #$ArtifactCol1003) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1003-Gold-Uniform675 "Gold Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1003-Gold-Uniform675(#$The(#$BodyPartCollectionFn (#$SimItemFn "cyc_bot_1") #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1000")
(sim-assert '(#$isa #$ArtifactCol1000 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1000 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1000-Phaser676")
(find-or-create-constant "ArtifactCol1000")
(sim-assert '(#$isa #$ArtifactCol1000-Phaser676 #$ArtifactCol1000) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1000-Phaser676 "Phaser") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possesses (#$SimItemFn "cyc_bot_1") #$ArtifactCol1000-Phaser676) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )

;;(find-or-create-constant "player1")
(sim-assert '(#$isa (#$SimItemFn "player1") (#$SimClassFn "player_simmarine_mp")) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString (#$SimItemFn "player1") "Player") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1029")
(sim-assert '(#$isa #$Area1029 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely (#$SimItemFn "player1") #$Area1000) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots773")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots773 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots773 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots773(#$The(#$BodyPartCollectionFn (#$SimItemFn "player1") #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge774")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge774 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge774 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge774(#$The(#$BodyPartCollectionFn (#$SimItemFn "player1") #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003")
(sim-assert '(#$isa #$ArtifactCol1003 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1003 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003-Gold-Uniform775")
(find-or-create-constant "ArtifactCol1003")
(sim-assert '(#$isa #$ArtifactCol1003-Gold-Uniform775 #$ArtifactCol1003) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1003-Gold-Uniform775 "Gold Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1003-Gold-Uniform775(#$The(#$BodyPartCollectionFn (#$SimItemFn "player1") #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1000")
(sim-assert '(#$isa #$ArtifactCol1000 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1000 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1000-Phaser776")
(find-or-create-constant "ArtifactCol1000")
(sim-assert '(#$isa #$ArtifactCol1000-Phaser776 #$ArtifactCol1000) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1000-Phaser776 "Phaser") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possesses (#$SimItemFn "player1") #$ArtifactCol1000-Phaser776) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1003")
(sim-assert '(#$isa #$NpcCol1003 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1003 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1003-Dr-Crusher677")
(find-or-create-constant "NpcCol1003")
(sim-assert '(#$isa #$NpcCol1003-Dr-Crusher677 #$NpcCol1003) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1003-Dr-Crusher677 "Dr. Crusher") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1015")
(sim-assert '(#$isa #$Area1015 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1003-Dr-Crusher677 #$Area1015) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots678")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots678 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots678 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots678(#$The(#$BodyPartCollectionFn #$NpcCol1003-Dr-Crusher677 #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge679")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge679 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge679 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge679(#$The(#$BodyPartCollectionFn #$NpcCol1003-Dr-Crusher677 #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004")
(sim-assert '(#$isa #$ArtifactCol1004 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1004 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004-Blue-Uniform680")
(find-or-create-constant "ArtifactCol1004")
(sim-assert '(#$isa #$ArtifactCol1004-Blue-Uniform680 #$ArtifactCol1004) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1004-Blue-Uniform680 "Blue Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1004-Blue-Uniform680(#$The(#$BodyPartCollectionFn #$NpcCol1003-Dr-Crusher677 #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009")
(sim-assert '(#$isa #$ArtifactCol1009 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1009 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009-Medical-Tricorder681")
(find-or-create-constant "ArtifactCol1009")
(sim-assert '(#$isa #$ArtifactCol1009-Medical-Tricorder681 #$ArtifactCol1009) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1009-Medical-Tricorder681 "Medical Tricorder") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possesses #$NpcCol1003-Dr-Crusher677 #$ArtifactCol1009-Medical-Tricorder681) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009")
(sim-assert '(#$isa #$ArtifactCol1009 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1009 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009-Medical-Tricorder682")
(find-or-create-constant "ArtifactCol1009")
(sim-assert '(#$isa #$ArtifactCol1009-Medical-Tricorder682 #$ArtifactCol1009) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1009-Medical-Tricorder682 "Medical Tricorder") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possesses #$NpcCol1003-Dr-Crusher677 #$ArtifactCol1009-Medical-Tricorder682) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009")
(sim-assert '(#$isa #$ArtifactCol1009 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1009 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009-Medical-Tricorder683")
(find-or-create-constant "ArtifactCol1009")
(sim-assert '(#$isa #$ArtifactCol1009-Medical-Tricorder683 #$ArtifactCol1009) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1009-Medical-Tricorder683 "Medical Tricorder") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possesses #$NpcCol1003-Dr-Crusher677 #$ArtifactCol1009-Medical-Tricorder683) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1000")
(sim-assert '(#$isa #$NpcCol1000 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1000 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1000-Geordi684")
(find-or-create-constant "NpcCol1000")
(sim-assert '(#$isa #$NpcCol1000-Geordi684 #$NpcCol1000) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1000-Geordi684 "Geordi") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1000")
(sim-assert '(#$isa #$Area1000 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1000-Geordi684 #$Area1000) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots685")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots685 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots685 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots685(#$The(#$BodyPartCollectionFn #$NpcCol1000-Geordi684 #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge686")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge686 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge686 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge686(#$The(#$BodyPartCollectionFn #$NpcCol1000-Geordi684 #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003")
(sim-assert '(#$isa #$ArtifactCol1003 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1003 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003-Gold-Uniform687")
(find-or-create-constant "ArtifactCol1003")
(sim-assert '(#$isa #$ArtifactCol1003-Gold-Uniform687 #$ArtifactCol1003) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1003-Gold-Uniform687 "Gold Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1003-Gold-Uniform687(#$The(#$BodyPartCollectionFn #$NpcCol1000-Geordi684 #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1008")
(sim-assert '(#$isa #$ArtifactCol1008 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1008 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1008-VISOR688")
(find-or-create-constant "ArtifactCol1008")
(sim-assert '(#$isa #$ArtifactCol1008-VISOR688 #$ArtifactCol1008) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1008-VISOR688 "VISOR") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1008-VISOR688(#$The(#$BodyPartCollectionFn #$NpcCol1000-Geordi684 #$FaceOfAnimal))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1007")
(sim-assert '(#$isa #$NpcCol1007 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1007 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1007-Guinan689")
(find-or-create-constant "NpcCol1007")
(sim-assert '(#$isa #$NpcCol1007-Guinan689 #$NpcCol1007) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1007-Guinan689 "Guinan") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1021")
(sim-assert '(#$isa #$Area1021 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1007-Guinan689 #$Area1021) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1020")
(sim-assert '(#$isa #$ArtifactCol1020 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1020 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1020-Tea690")
(find-or-create-constant "ArtifactCol1020")
(sim-assert '(#$isa #$ArtifactCol1020-Tea690 #$ArtifactCol1020) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1020-Tea690 "Tea") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possesses #$NpcCol1007-Guinan689 #$ArtifactCol1020-Tea690) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1021")
(sim-assert '(#$isa #$ArtifactCol1021 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1021 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1021-Synthehol691")
(find-or-create-constant "ArtifactCol1021")
(sim-assert '(#$isa #$ArtifactCol1021-Synthehol691 #$ArtifactCol1021) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1021-Synthehol691 "Synthehol") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possesses #$NpcCol1007-Guinan689 #$ArtifactCol1021-Synthehol691) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1022")
(sim-assert '(#$isa #$ArtifactCol1022 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1022 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1022-Ferengi-Ale692")
(find-or-create-constant "ArtifactCol1022")
(sim-assert '(#$isa #$ArtifactCol1022-Ferengi-Ale692 #$ArtifactCol1022) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1022-Ferengi-Ale692 "Ferengi Ale") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possesses #$NpcCol1007-Guinan689 #$ArtifactCol1022-Ferengi-Ale692) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1023")
(sim-assert '(#$isa #$ArtifactCol1023 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1023 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1023-Romulan-Whisky693")
(find-or-create-constant "ArtifactCol1023")
(sim-assert '(#$isa #$ArtifactCol1023-Romulan-Whisky693 #$ArtifactCol1023) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1023-Romulan-Whisky693 "Romulan Whisky") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possesses #$NpcCol1007-Guinan689 #$ArtifactCol1023-Romulan-Whisky693) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1024")
(sim-assert '(#$isa #$ArtifactCol1024 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1024 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1024-Lemonade-Prune-Juice694")
(find-or-create-constant "ArtifactCol1024")
(sim-assert '(#$isa #$ArtifactCol1024-Lemonade-Prune-Juice694 #$ArtifactCol1024) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1024-Lemonade-Prune-Juice694 "Lemonade 'Prune Juice'") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possesses #$NpcCol1007-Guinan689 #$ArtifactCol1024-Lemonade-Prune-Juice694) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1025")
(sim-assert '(#$isa #$ArtifactCol1025 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1025 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1025-Vulcan-Beer695")
(find-or-create-constant "ArtifactCol1025")
(sim-assert '(#$isa #$ArtifactCol1025-Vulcan-Beer695 #$ArtifactCol1025) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1025-Vulcan-Beer695 "Vulcan Beer") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possesses #$NpcCol1007-Guinan689 #$ArtifactCol1025-Vulcan-Beer695) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1008")
(sim-assert '(#$isa #$NpcCol1008 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1008 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1008-OBrien696")
(find-or-create-constant "NpcCol1008")
(sim-assert '(#$isa #$NpcCol1008-OBrien696 #$NpcCol1008) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1008-OBrien696 "O'Brien") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1006")
(sim-assert '(#$isa #$Area1006 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1008-OBrien696 #$Area1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots697")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots697 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots697 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots697(#$The(#$BodyPartCollectionFn #$NpcCol1008-OBrien696 #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge698")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge698 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge698 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge698(#$The(#$BodyPartCollectionFn #$NpcCol1008-OBrien696 #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003")
(sim-assert '(#$isa #$ArtifactCol1003 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1003 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003-Gold-Uniform699")
(find-or-create-constant "ArtifactCol1003")
(sim-assert '(#$isa #$ArtifactCol1003-Gold-Uniform699 #$ArtifactCol1003) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1003-Gold-Uniform699 "Gold Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1003-Gold-Uniform699(#$The(#$BodyPartCollectionFn #$NpcCol1008-OBrien696 #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1000")
(sim-assert '(#$isa #$ArtifactCol1000 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1000 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1000-Phaser700")
(find-or-create-constant "ArtifactCol1000")
(sim-assert '(#$isa #$ArtifactCol1000-Phaser700 #$ArtifactCol1000) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1000-Phaser700 "Phaser") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possesses #$NpcCol1008-OBrien696 #$ArtifactCol1000-Phaser700) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1006")
(sim-assert '(#$isa #$NpcCol1006 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1006 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1006-Picard701")
(find-or-create-constant "NpcCol1006")
(sim-assert '(#$isa #$NpcCol1006-Picard701 #$NpcCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1006-Picard701 "Picard") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1035")
(sim-assert '(#$isa #$Area1035 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1006-Picard701 #$Area1035) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots702")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots702 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots702 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots702(#$The(#$BodyPartCollectionFn #$NpcCol1006-Picard701 #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge703")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge703 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge703 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge703(#$The(#$BodyPartCollectionFn #$NpcCol1006-Picard701 #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002")
(sim-assert '(#$isa #$ArtifactCol1002 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1002 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002-Red-Uniform704")
(find-or-create-constant "ArtifactCol1002")
(sim-assert '(#$isa #$ArtifactCol1002-Red-Uniform704 #$ArtifactCol1002) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1002-Red-Uniform704 "Red Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1002-Red-Uniform704(#$The(#$BodyPartCollectionFn #$NpcCol1006-Picard701 #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1001")
(sim-assert '(#$isa #$ArtifactCol1001 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1001 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1001-5-Phaser-Rifle705")
(find-or-create-constant "ArtifactCol1001")
(sim-assert '(#$isa #$ArtifactCol1001-5-Phaser-Rifle705 #$ArtifactCol1001) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1001-5-Phaser-Rifle705 "5 Phaser Rifle") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possesses #$NpcCol1006-Picard701 #$ArtifactCol1001-5-Phaser-Rifle705) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1011")
(sim-assert '(#$isa #$ArtifactCol1011 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1011 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1011-5-Picards-Flute706")
(find-or-create-constant "ArtifactCol1011")
(sim-assert '(#$isa #$ArtifactCol1011-5-Picards-Flute706 #$ArtifactCol1011) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1011-5-Picards-Flute706 "5 Picard's Flute") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possesses #$NpcCol1006-Picard701 #$ArtifactCol1011-5-Picards-Flute706) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1005")
(sim-assert '(#$isa #$NpcCol1005 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1005 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1005-Riker707")
(find-or-create-constant "NpcCol1005")
(sim-assert '(#$isa #$NpcCol1005-Riker707 #$NpcCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1005-Riker707 "Riker") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1036")
(sim-assert '(#$isa #$Area1036 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1005-Riker707 #$Area1036) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots708")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots708 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots708 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots708(#$The(#$BodyPartCollectionFn #$NpcCol1005-Riker707 #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge709")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge709 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge709 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge709(#$The(#$BodyPartCollectionFn #$NpcCol1005-Riker707 #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002")
(sim-assert '(#$isa #$ArtifactCol1002 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1002 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002-Red-Uniform710")
(find-or-create-constant "ArtifactCol1002")
(sim-assert '(#$isa #$ArtifactCol1002-Red-Uniform710 #$ArtifactCol1002) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1002-Red-Uniform710 "Red Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1002-Red-Uniform710(#$The(#$BodyPartCollectionFn #$NpcCol1005-Riker707 #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1012")
(sim-assert '(#$isa #$ArtifactCol1012 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1012 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1012-Trombone711")
(find-or-create-constant "ArtifactCol1012")
(sim-assert '(#$isa #$ArtifactCol1012-Trombone711 #$ArtifactCol1012) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1012-Trombone711 "Trombone") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possesses #$NpcCol1005-Riker707 #$ArtifactCol1012-Trombone711) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1004")
(sim-assert '(#$isa #$NpcCol1004 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1004 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1004-Troi712")
(find-or-create-constant "NpcCol1004")
(sim-assert '(#$isa #$NpcCol1004-Troi712 #$NpcCol1004) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1004-Troi712 "Troi") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1007")
(sim-assert '(#$isa #$Area1007 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1004-Troi712 #$Area1007) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots713")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots713 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots713 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots713(#$The(#$BodyPartCollectionFn #$NpcCol1004-Troi712 #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge714")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge714 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge714 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge714(#$The(#$BodyPartCollectionFn #$NpcCol1004-Troi712 #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004")
(sim-assert '(#$isa #$ArtifactCol1004 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1004 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004-Blue-Uniform715")
(find-or-create-constant "ArtifactCol1004")
(sim-assert '(#$isa #$ArtifactCol1004-Blue-Uniform715 #$ArtifactCol1004) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1004-Blue-Uniform715 "Blue Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1004-Blue-Uniform715(#$The(#$BodyPartCollectionFn #$NpcCol1004-Troi712 #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1009")
(sim-assert '(#$isa #$NpcCol1009 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1009 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1009-Wesley716")
(find-or-create-constant "NpcCol1009")
(sim-assert '(#$isa #$NpcCol1009-Wesley716 #$NpcCol1009) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1009-Wesley716 "Wesley") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1016")
(sim-assert '(#$isa #$Area1016 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1009-Wesley716 #$Area1016) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots717")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots717 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots717 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots717(#$The(#$BodyPartCollectionFn #$NpcCol1009-Wesley716 #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge718")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge718 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge718 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge718(#$The(#$BodyPartCollectionFn #$NpcCol1009-Wesley716 #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002")
(sim-assert '(#$isa #$ArtifactCol1002 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1002 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002-Red-Uniform719")
(find-or-create-constant "ArtifactCol1002")
(sim-assert '(#$isa #$ArtifactCol1002-Red-Uniform719 #$ArtifactCol1002) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1002-Red-Uniform719 "Red Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1002-Red-Uniform719(#$The(#$BodyPartCollectionFn #$NpcCol1009-Wesley716 #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1002")
(sim-assert '(#$isa #$NpcCol1002 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1002 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1002-Worf720")
(find-or-create-constant "NpcCol1002")
(sim-assert '(#$isa #$NpcCol1002-Worf720 #$NpcCol1002) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1002-Worf720 "Worf") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1025")
(sim-assert '(#$isa #$Area1025 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1002-Worf720 #$Area1025) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots721")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots721 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots721 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots721(#$The(#$BodyPartCollectionFn #$NpcCol1002-Worf720 #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge722")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge722 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge722 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge722(#$The(#$BodyPartCollectionFn #$NpcCol1002-Worf720 #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003")
(sim-assert '(#$isa #$ArtifactCol1003 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1003 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003-Gold-Uniform723")
(find-or-create-constant "ArtifactCol1003")
(sim-assert '(#$isa #$ArtifactCol1003-Gold-Uniform723 #$ArtifactCol1003) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1003-Gold-Uniform723 "Gold Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1003-Gold-Uniform723(#$The(#$BodyPartCollectionFn #$NpcCol1002-Worf720 #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1000")
(sim-assert '(#$isa #$ArtifactCol1000 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1000 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1000-Phaser724")
(find-or-create-constant "ArtifactCol1000")
(sim-assert '(#$isa #$ArtifactCol1000-Phaser724 #$ArtifactCol1000) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1000-Phaser724 "Phaser") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$possesses #$NpcCol1002-Worf720 #$ArtifactCol1000-Phaser724) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1007")
(sim-assert '(#$isa #$ArtifactCol1007 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1007 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1007-Sash725")
(find-or-create-constant "ArtifactCol1007")
(sim-assert '(#$isa #$ArtifactCol1007-Sash725 #$ArtifactCol1007) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1007-Sash725 "Sash") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1007-Sash725(#$The(#$BodyPartCollectionFn #$NpcCol1002-Worf720 #$Chest-BodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1010")
(sim-assert '(#$isa #$NpcCol1010 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1010 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1010-Livingston726")
(find-or-create-constant "NpcCol1010")
(sim-assert '(#$isa #$NpcCol1010-Livingston726 #$NpcCol1010) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1010-Livingston726 "Livingston") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1035")
(sim-assert '(#$isa #$Area1035 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1010-Livingston726 #$Area1035) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1011")
(sim-assert '(#$isa #$NpcCol1011 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1011 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1011-Spot727")
(find-or-create-constant "NpcCol1011")
(sim-assert '(#$isa #$NpcCol1011-Spot727 #$NpcCol1011) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1011-Spot727 "Spot") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1003")
(sim-assert '(#$isa #$Area1003 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1011-Spot727 #$Area1003) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1012")
(sim-assert '(#$isa #$NpcCol1012 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1012 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1012-Ensign728")
(find-or-create-constant "NpcCol1012")
(sim-assert '(#$isa #$NpcCol1012-Ensign728 #$NpcCol1012) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1012-Ensign728 "Ensign") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1000")
(sim-assert '(#$isa #$Area1000 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1012-Ensign728 #$Area1000) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots729")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots729 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots729 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots729(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign728 #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge730")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge730 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge730 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge730(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign728 #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003")
(sim-assert '(#$isa #$ArtifactCol1003 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1003 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003-Gold-Uniform731")
(find-or-create-constant "ArtifactCol1003")
(sim-assert '(#$isa #$ArtifactCol1003-Gold-Uniform731 #$ArtifactCol1003) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1003-Gold-Uniform731 "Gold Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1003-Gold-Uniform731(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign728 #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1012")
(sim-assert '(#$isa #$NpcCol1012 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1012 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1012-Ensign732")
(find-or-create-constant "NpcCol1012")
(sim-assert '(#$isa #$NpcCol1012-Ensign732 #$NpcCol1012) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1012-Ensign732 "Ensign") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1004")
(sim-assert '(#$isa #$Area1004 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1012-Ensign732 #$Area1004) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots733")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots733 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots733 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots733(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign732 #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge734")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge734 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge734 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge734(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign732 #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003")
(sim-assert '(#$isa #$ArtifactCol1003 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1003 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003-Gold-Uniform735")
(find-or-create-constant "ArtifactCol1003")
(sim-assert '(#$isa #$ArtifactCol1003-Gold-Uniform735 #$ArtifactCol1003) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1003-Gold-Uniform735 "Gold Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1003-Gold-Uniform735(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign732 #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1012")
(sim-assert '(#$isa #$NpcCol1012 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1012 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1012-Ensign736")
(find-or-create-constant "NpcCol1012")
(sim-assert '(#$isa #$NpcCol1012-Ensign736 #$NpcCol1012) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1012-Ensign736 "Ensign") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1011")
(sim-assert '(#$isa #$Area1011 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1012-Ensign736 #$Area1011) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots737")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots737 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots737 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots737(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign736 #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge738")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge738 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge738 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge738(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign736 #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002")
(sim-assert '(#$isa #$ArtifactCol1002 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1002 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002-Red-Uniform739")
(find-or-create-constant "ArtifactCol1002")
(sim-assert '(#$isa #$ArtifactCol1002-Red-Uniform739 #$ArtifactCol1002) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1002-Red-Uniform739 "Red Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1002-Red-Uniform739(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign736 #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1012")
(sim-assert '(#$isa #$NpcCol1012 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1012 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1012-Ensign740")
(find-or-create-constant "NpcCol1012")
(sim-assert '(#$isa #$NpcCol1012-Ensign740 #$NpcCol1012) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1012-Ensign740 "Ensign") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1020")
(sim-assert '(#$isa #$Area1020 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1012-Ensign740 #$Area1020) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots741")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots741 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots741 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots741(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign740 #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge742")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge742 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge742 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge742(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign740 #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002")
(sim-assert '(#$isa #$ArtifactCol1002 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1002 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002-Red-Uniform743")
(find-or-create-constant "ArtifactCol1002")
(sim-assert '(#$isa #$ArtifactCol1002-Red-Uniform743 #$ArtifactCol1002) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1002-Red-Uniform743 "Red Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1002-Red-Uniform743(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign740 #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1012")
(sim-assert '(#$isa #$NpcCol1012 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1012 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1012-Ensign744")
(find-or-create-constant "NpcCol1012")
(sim-assert '(#$isa #$NpcCol1012-Ensign744 #$NpcCol1012) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1012-Ensign744 "Ensign") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1024")
(sim-assert '(#$isa #$Area1024 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1012-Ensign744 #$Area1024) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots745")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots745 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots745 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots745(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign744 #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge746")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge746 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge746 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge746(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign744 #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004")
(sim-assert '(#$isa #$ArtifactCol1004 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1004 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004-Blue-Uniform747")
(find-or-create-constant "ArtifactCol1004")
(sim-assert '(#$isa #$ArtifactCol1004-Blue-Uniform747 #$ArtifactCol1004) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1004-Blue-Uniform747 "Blue Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1004-Blue-Uniform747(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign744 #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1012")
(sim-assert '(#$isa #$NpcCol1012 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1012 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1012-Ensign748")
(find-or-create-constant "NpcCol1012")
(sim-assert '(#$isa #$NpcCol1012-Ensign748 #$NpcCol1012) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1012-Ensign748 "Ensign") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1022")
(sim-assert '(#$isa #$Area1022 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1012-Ensign748 #$Area1022) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots749")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots749 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots749 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots749(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign748 #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge750")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge750 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge750 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge750(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign748 #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004")
(sim-assert '(#$isa #$ArtifactCol1004 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1004 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004-Blue-Uniform751")
(find-or-create-constant "ArtifactCol1004")
(sim-assert '(#$isa #$ArtifactCol1004-Blue-Uniform751 #$ArtifactCol1004) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1004-Blue-Uniform751 "Blue Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1004-Blue-Uniform751(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign748 #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1012")
(sim-assert '(#$isa #$NpcCol1012 #$BPVAgentType) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$genls #$NpcCol1012 #$Agent-Generic) *WorldVocabularyMt* '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1012-Ensign752")
(find-or-create-constant "NpcCol1012")
(sim-assert '(#$isa #$NpcCol1012-Ensign752 #$NpcCol1012) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$NpcCol1012-Ensign752 "Ensign") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1036")
(sim-assert '(#$isa #$Area1036 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$NpcCol1012-Ensign752 #$Area1036) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1005 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots753")
(find-or-create-constant "ArtifactCol1005")
(sim-assert '(#$isa #$ArtifactCol1005-Boots753 #$ArtifactCol1005) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1005-Boots753 "Boots") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1005-Boots753(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign752 #$Foot-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1006 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge754")
(find-or-create-constant "ArtifactCol1006")
(sim-assert '(#$isa #$ArtifactCol1006-Comm-Badge754 #$ArtifactCol1006) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1006-Comm-Badge754 "Comm Badge") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge754(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign752 #$Neck-AnimalBodyPart))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004")
(sim-assert '(#$isa #$ArtifactCol1004 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1004 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004-Blue-Uniform755")
(find-or-create-constant "ArtifactCol1004")
(sim-assert '(#$isa #$ArtifactCol1004-Blue-Uniform755 #$ArtifactCol1004) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1004-Blue-Uniform755 "Blue Uniform") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$wornOn #$ArtifactCol1004-Blue-Uniform755(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign752 #$Torso))) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1010")
(sim-assert '(#$isa #$ArtifactCol1010 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1010 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1010-Dilithium-Crystal756")
(find-or-create-constant "ArtifactCol1010")
(sim-assert '(#$isa #$ArtifactCol1010-Dilithium-Crystal756 #$ArtifactCol1010) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1010-Dilithium-Crystal756 "Dilithium Crystal") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1000")
(sim-assert '(#$isa #$Area1000 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$ArtifactCol1010-Dilithium-Crystal756 #$Area1000) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1010")
(sim-assert '(#$isa #$ArtifactCol1010 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1010 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1010-Dilithium-Crystal757")
(find-or-create-constant "ArtifactCol1010")
(sim-assert '(#$isa #$ArtifactCol1010-Dilithium-Crystal757 #$ArtifactCol1010) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1010-Dilithium-Crystal757 "Dilithium Crystal") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1000")
(sim-assert '(#$isa #$Area1000 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$ArtifactCol1010-Dilithium-Crystal757 #$Area1000) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1010")
(sim-assert '(#$isa #$ArtifactCol1010 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1010 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1010-Dilithium-Crystal758")
(find-or-create-constant "ArtifactCol1010")
(sim-assert '(#$isa #$ArtifactCol1010-Dilithium-Crystal758 #$ArtifactCol1010) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1010-Dilithium-Crystal758 "Dilithium Crystal") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1000")
(sim-assert '(#$isa #$Area1000 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$ArtifactCol1010-Dilithium-Crystal758 #$Area1000) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009")
(sim-assert '(#$isa #$ArtifactCol1009 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1009 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009-Tricorder759")
(find-or-create-constant "ArtifactCol1009")
(sim-assert '(#$isa #$ArtifactCol1009-Tricorder759 #$ArtifactCol1009) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1009-Tricorder759 "Tricorder") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1015")
(sim-assert '(#$isa #$Area1015 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$ArtifactCol1009-Tricorder759 #$Area1015) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009")
(sim-assert '(#$isa #$ArtifactCol1009 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1009 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009-Tricorder760")
(find-or-create-constant "ArtifactCol1009")
(sim-assert '(#$isa #$ArtifactCol1009-Tricorder760 #$ArtifactCol1009) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1009-Tricorder760 "Tricorder") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1015")
(sim-assert '(#$isa #$Area1015 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$ArtifactCol1009-Tricorder760 #$Area1015) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009")
(sim-assert '(#$isa #$ArtifactCol1009 #$ArtifactTypeByGenericCategory) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$isa #$ArtifactCol1009 #$BPVArtifactType) *WorldVocabularyMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009-Tricorder761")
(find-or-create-constant "ArtifactCol1009")
(sim-assert '(#$isa #$ArtifactCol1009-Tricorder761 #$ArtifactCol1009) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(sim-assert '(#$nameString #$ArtifactCol1009-Tricorder761 "Tricorder") *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1015")
(sim-assert '(#$isa #$Area1015 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$in-ContCompletely #$ArtifactCol1009-Tricorder761 #$Area1015) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1022")
(sim-assert '(#$isa #$Area1022 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1022 #$South-Directly) #$ClosedPortal) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1039")
(sim-assert '(#$isa #$Area1039 #$BPVLocation) *WorldStaticStateMt* '(:DIRECTION :FORWARD))
(sim-assert '(#$isa(#$BoundsOfDirectionFn #$Area1039 #$North-Directly) #$ClosedPortal) *WorldCurrentStateMt* '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;load file '10.zon.kif'
;load file 'CoffeeMud_4_7_4[1].zip'
;load file 'map.txt'
;load file 'MICRO-IRAQ-ART-CONVT.zip'
;load file 'readme.txt'
;load file 'worlds.rar'
;load file 'zone.lst'
(sim-assert `(#$locatedAtPoint-Spatial #$Area1000 (#$Point3Fn 100 100 0)) *StaticStateMt*)

(fi-kill (find-or-create-constant "Area-1")) 
(fi-kill (find-or-create-constant "Area4075")) 

;load file 'zone.lst'
(sim-assert '(#$simItemToName (#$SimItemFn "cyc_bot_1") "cyc_bot_1") #$SimInitialStateMt)
(sim-assert '(#$simItemToName (#$SimItemFn "player1") "player1") #$SimInitialStateMt)

(sim-assert '(#$simGenls #$ArtifactCol1010 (#$SimFacetFn "classname" "dilithium_crystal")) *MappingMt*)
(sim-assert '(#$simGenls #$ArtifactCol1024 (#$SimFacetFn "classname" "small_glass"))*MappingMt*)
(sim-assert '(#$simGenls #$ArtifactCol1023 (#$SimFacetFn "classname" "romulan_bottle")) *MappingMt*)
(sim-assert '(#$simGenls #$ArtifactCol1022 (#$SimFacetFn "classname" "ferengi_bottle")) *MappingMt*)
(sim-assert '(#$simGenls #$ArtifactCol1021 (#$SimFacetFn "classname" "moveable_plasticjar1")) *MappingMt*)
(sim-assert '(#$simGenls #$ArtifactCol1020 (#$SimFacetFn "classname" "moveable_foamcup")) *MappingMt*)
(sim-assert '(#$simGenls #$ArtifactCol1006 (#$SimFacetFn "classname" "starfleet_communication_badge")) *MappingMt*)
(sim-assert '(#$simIsa (#$SimItemFn "player1") (#$SimFacetFn "rezclass" "idPlayer")) #$SimInitialStateMt)
(sim-assert '(#$simIsa (#$SimItemFn "cyc_bot_1") (#$SimFacetFn "rezclass" "idAI")) #$SimInitialStateMt)


