(cyc-assert '(#$termStrings #$Brig "brig")   '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$termStrings #$Bedroom "quarters")  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$termStrings #$MachinePistol "phaser")  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$termStrings #$AirplaneCockpit "bridge")  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$termStrings #$PropositionalConceptualWork "world") #$osim:VocabularyMt)
(cyc-assert '(#$termStrings #$Bottle "bottle") #$osim:VocabularyMt)
(cyc-assert '(#$termStrings #$MarinePersonnel "ensign") #$osim:VocabularyMt)
(cyc-assert '(#$termStrings #$Leader "Commander") #$osim:VocabularyMt)
(cyc-assert '(#$termStrings #$SignTheDisplay "sign") #$osim:VocabularyMt)
(cyc-assert '(#$termStrings #$Elevator "Turbolift") #$osim:VocabularyMt)
(cyc-assert '(#$termStrings #$Bottle "bottle") #$osim:VocabularyMt)
(cyc-assert '(#$termStrings #$LightingDevice "light") #$osim:VocabularyMt)

(find-or-create-constant "osim:relationCandidateExistsAll")
(cyc-assert '(#$isa #$osim:relationCandidateExistsAll #$TernaryPredicate)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$arg1Isa #$osim:relationCandidateExistsAll #$Predicate)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$arg2Isa #$osim:relationCandidateExistsAll #$Collection)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$arg3Isa #$osim:relationCandidateExistsAll #$Collection)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))

;;(#$osim:relationCandidateExistsAll #$objectFoundInLocation ?COL ?BPV)

(cyc-assert '(#$implies
    (#$and (#$no #$Animal ?COL) 
    (#$genls ?COL #$SolidTangibleThing))
(#$osim:relationCandidateExistsAll #$objectFoundInLocation ?COL #$BPVLocation)) '#$osim:VocabularyMt '(:DIRECTION :FORWARD))

;;    (#$genls ?COL #$SolidTangibleThing))





(find-or-create-constant "SpawnTopicTypeFn")
(cyc-assert '(#$isa #$SpawnTopicTypeFn #$UnaryFunction)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa #$SpawnTopicTypeFn #$ReifiableFunction)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$skolemizeForward #$SpawnTopicTypeFn)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$resultIsa #$SpawnTopicTypeFn #$FormulaTemplateTopicType)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$arg1Genl #$SpawnTopicTypeFn #$osim:Instance)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
;(cyc-assert '(#$isa (#$SpawnTopicTypeFn #$BPVAgent) #$FormulaTemplateTopicType)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
;(cyc-assert '(#$isa (#$SpawnTopicTypeFn #$BPVItem) #$FormulaTemplateTopicType)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
;(cyc-assert '(#$isa (#$SpawnTopicTypeFn #$BPVLocation) #$FormulaTemplateTopicType)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))

;(cyc-assert '(#$genls (#$SpawnTopicTypeFn #$BPVAgent) #$osim:WorldSpawn-TopicType)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
;(cyc-assert '(#$genls (#$SpawnTopicTypeFn #$BPVItem) #$osim:WorldSpawn-TopicType)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
;(cyc-assert '(#$genls (#$SpawnTopicTypeFn #$BPVLocation) #$osim:WorldSpawn-TopicType)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
;(cyc-assert '(#$implies (#$isa (#$SpawnTopicTypeFn ?COL) #$FormulaTemplateTopicType)(#$templateTopicGenls (#$SpawnTopicTypeFn ?COL) ?COL))    '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
;(cyc-assert '(#$implies (#$and (#$isa ?I ?TYPE)(#$genls ?TYPE #$osim:Instance)(#$termStrings ?I ?S) (#$osim:denotesContextually ?S (#$SpawnTopicTypeFn ?TYPE) ?C)) (#$ist #$osim:SituationMt (#$isa ?I ?C))) '#$osim:VocabularyMt '(:DIRECTION :FORWARD))

(find-or-create-constant "osim:exceedsSomeConstraint")
(cyc-assert '(#$isa #$osim:exceedsSomeConstraint #$BinaryPredicate)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$comment #$osim:exceedsSomeConstraint "The :ARG1 exceeds the constraint in :ARG2 and is a prefered example")  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$arg1Isa #$osim:exceedsSomeConstraint #$Thing)   '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$arg2Isa #$osim:exceedsSomeConstraint #$FormulaTemplateTopicType)   '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$implies (#$osim:exceedsSomeConstraint ?P #$osim:WorldSpawn-TopicType)(#$meetsSomeConstraintOfTopicType ?P ?TT))  '#$osim:SituationMt)
(cyc-assert '(#$osim:exceedsSomeConstraint #$AirplaneCargoBay #$osim:WorldSpawn-TopicType)  '#$osim:SituationMt)
(cyc-assert '(#$osim:exceedsSomeConstraint #$AirplaneCockpit #$osim:WorldSpawn-TopicType)  '#$osim:SituationMt)

(find-or-create-constant "osim:exceedsSomeIsaConstraint")
(cyc-assert '(#$isa #$osim:exceedsSomeIsaConstraint #$BinaryPredicate)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$comment #$osim:exceedsSomeIsaConstraint "When something is an instance of :ARG1 exceeds the constraint in :ARG2 and is a prefered example")  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$arg1Isa #$osim:exceedsSomeIsaConstraint #$Collection)   '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$arg2Isa #$osim:exceedsSomeIsaConstraint #$FormulaTemplateTopicType)   '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$implies (#$and (#$osim:exceedsSomeIsaConstraint ?W ?TT)(#$isa ?P ?W)) (#$osim:exceedsSomeConstraint ?P ?TT))  '#$osim:SituationMt)
(cyc-assert '(#$osim:exceedsSomeIsaConstraint #$ChromaticColor #$osim:WorldSpawn-TopicType)  '#$osim:SituationMt)

(find-or-create-constant "osim:exceedsSomeGenlsConstraint")
(cyc-assert '(#$isa #$osim:exceedsSomeGenlsConstraint #$BinaryPredicate)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$comment #$osim:exceedsSomeGenlsConstraint "When something is an instance of :ARG1 exceeds the constraint in :ARG2 and is a prefered example")  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$arg1Isa #$osim:exceedsSomeGenlsConstraint #$Collection)   '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$arg2Isa #$osim:exceedsSomeGenlsConstraint #$FormulaTemplateTopicType)   '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$implies (#$and (#$osim:exceedsSomeGenlsConstraint ?W ?TT)(#$genls ?P ?W)) (#$osim:exceedsSomeConstraint ?P ?TT))  '#$osim:SituationMt)
(cyc-assert '(#$osim:exceedsSomeGenlsConstraint #$PartOfBuilding #$osim:WorldSpawn-TopicType)  '#$osim:SituationMt)


(find-or-create-constant "osim:violatesSomeConstraint")
(cyc-assert '(#$isa #$osim:violatesSomeConstraint #$BinaryPredicate)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$comment #$osim:violatesSomeConstraint "The :ARG1 violates the constraint in :ARG2")  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$arg1Isa #$osim:violatesSomeConstraint #$Thing)   '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$arg2Isa #$osim:violatesSomeConstraint #$FormulaTemplateTopicType)   '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$osim:violatesSomeConstraint #$AfricanAmericanPerson #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$Amphetamine  #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$Black-HairColor  #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$Command #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$Communicating #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$Criterion #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$EthnicGroupOfBlacks #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$Fisherman #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$Flag #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$Gold  #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$Issue  #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$InformationTransferEvent #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$OneDollarBill-US #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$QuarterCoin-US  #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$TrunkOfCar  #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint (#$MeatFn #$EdibleFish) #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint (#$GroupFn #$Fish) #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$AcademicQuarter  #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$Ocean  #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$Diligent #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$Stimulant #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$SpottedPattern #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeConstraint #$BootingAComputer  #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
;;(cyc-assert '(#$implies (#$not (#$osim:violatesSomeConstraint ?P ?TT))(#$meetsSomeConstraintOfTopicType ?P ?TT))  '#$osim:SituationMt)

(find-or-create-constant "osim:violatesSomeGenlsConstraint")
(cyc-assert '(#$isa #$osim:violatesSomeGenlsConstraint #$BinaryPredicate)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$comment #$osim:violatesSomeGenlsConstraint "The all specs of :ARG1 violates the constraint in :ARG2")  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$arg1Isa #$osim:violatesSomeGenlsConstraint #$Collection) '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$arg2Isa #$osim:violatesSomeGenlsConstraint #$FormulaTemplateTopicType)   '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$Abnormal-Unusual #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$Action #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$AnimalActivity #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$BPVAgentType #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$BPVItemType #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$Criterion #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$Event #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$Event-Organized #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$Hair-Stuff #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$Microtheory #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$Movement-TranslationProcess #$osim:WorldSpawn-TopicType) '#$osim:SituationMt) 
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$Organization #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$SocialOccurrence #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$Specification #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$osim:Instance #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$AminoAcid #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$Intangible #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$Group #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$Pipeline #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$Bay #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$Sick #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$GatlingGun-GAU4 #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$ShoeUppers #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$VolkswagenTransporterCar #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeGenlsConstraint #$Nucleotide #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)





(find-or-create-constant "osim:violatesSomeIsaConstraint")
(cyc-assert '(#$isa #$osim:violatesSomeIsaConstraint #$BinaryPredicate)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$comment #$osim:violatesSomeIsaConstraint "The all instances of :ARG1 violates the constraint in :ARG2")  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$arg1Isa #$osim:violatesSomeIsaConstraint #$Collection) '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$arg2Isa #$osim:violatesSomeIsaConstraint #$FormulaTemplateTopicType)   '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$osim:violatesSomeIsaConstraint #$AccomplishmentType #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeIsaConstraint #$Action #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeIsaConstraint #$AnimalActivity #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeIsaConstraint #$BPVAgentType #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeIsaConstraint #$BPVItemType #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeIsaConstraint #$CollectionType #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeIsaConstraint #$DerivedMeasurableQuantityType #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeIsaConstraint #$DisjointCollectionType #$osim:WorldSpawn-TopicType) '#$osim:SituationMt) 
(cyc-assert '(#$osim:violatesSomeIsaConstraint #$DurativeEventType #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeIsaConstraint #$Microtheory #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeIsaConstraint #$Relation #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeIsaConstraint #$VehiclePart #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeIsaConstraint #$osim:Instance #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)
(cyc-assert '(#$osim:violatesSomeIsaConstraint #$Individual #$osim:WorldSpawn-TopicType) '#$osim:SituationMt)

(cyc-assert '(#$negationPreds #$osim:exceedsSomeConstraint #$osim:violatesSomeConstraint)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))

;(cyc-assert '(#$osim:exceedsSomeConstraint #$DrinkingGlass)   '#$osim:SituationMt '(:DIRECTION :FORWARD))
;(cyc-assert '(#$completeExtentDecidable #$osim:violatesSomeConstraint) '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
;(cyc-assert '(#$completeExtentDecidable #$osim:exceedsSomeConstraint) '#$osim:VocabularyMt '(:DIRECTION :FORWARD))

(find-or-create-constant "osim:parsesContextually")
(cyc-assert '(#$isa #$osim:parsesContextually #$Predicate) #$UniversalVocabularyMt)
(cyc-assert '(#$comment #$osim:parsesContextually "HL Predicate (#$parsesContextually ?String ?Ctx ?Result) uses the (parse-a-sentence-completely ?String #$AllEnglishLexicalMicrotheoryPSC) to produce ?Result that is choosen best in ?Ctx.") #$UniversalVocabularyMt)
(cyc-assert '(#$isa #$osim:parsesContextually #$RemovalModuleSupportedPredicate-Specific) #$CycAPIMt)
(cyc-assert '(#$arity #$osim:parsesContextually 3) #$UniversalVocabularyMt)
(cyc-assert '(#$arg1Isa #$osim:parsesContextually #$TextString) #$UniversalVocabularyMt)
(cyc-assert '(#$arg2Isa #$osim:parsesContextually #$Thing) #$UniversalVocabularyMt)
(cyc-assert '(#$arg3Isa #$osim:parsesContextually #$Thing) #$UniversalVocabularyMt)
(inference-removal-module :removal-parsesContextually-bound-bound-unbound
 '(:sense :pos 
	:predicate #$osim:parsesContextually 
	:required-pattern (#$osim:parsesContextually :fully-bound :fully-bound :not-fully-bound) 
	:cost-expression 0 :completeness :complete 
	:input-extract-pattern (:template  (#$osim:parsesContextually (:bind value-1) (:bind value-2) :anything) ((:value value-1) (:value value-2)))
	:input-verify-pattern :anything
	:output-generate-pattern (:call parsesContextually :input)
	:output-construct-pattern  (#$osim:parsesContextually (:value value-1) (:value value-2) :input)))
(register-solely-specific-removal-module-predicate #$osim:parsesContextually)
(define parsesContextually (vs) 
  (clet ((str (car vs))(mt (nth 1 vs))(res nil))
  (cand (stringp str) 
    (progn
    (cand 
       (cq1 (list #$isa mt #$Microtheory))
       (progn 
	  (csetq res (parse-a-question-completely str mt))
	  (cand res (ret res))
	  (csetq res (parse-a-sentence-completely str mt))
	  (cand res (ret res))))
  (csetq res (parse-a-question-completely str #$AllEnglishLexicalMicrotheoryPSC))
  (cand res (ret res))
  (ret (parse-a-sentence-completely str #$AllEnglishLexicalMicrotheoryPSC))))))

(define parsesContextually (vs) 
  (clet ((str (car vs))(mt (nth 1 vs))(res nil))
  (cand (stringp str) 
  (csetq res (parse-a-question-completely str #$AllEnglishTemplateMt))
  (cand res (ret res))
  (csetq res (parse-a-sentence-completely str #$AllEnglishTemplateMt))
  (cand res (ret res))
  (csetq res (parse-a-question-completely str #$AllEnglishLexicalMicrotheoryPSC))
  (cand res (ret res))
  (ret (parse-a-sentence-completely str #$AllEnglishLexicalMicrotheoryPSC)))))

(define parsesContextually (vs) 
  (clet ((str (car vs))(mt (nth 1 vs))(res nil))
  (cand (stringp str) 
  (csetq res (parse-a-question-completely str #$AllEnglishLexicalMicrotheoryPSC))
  (cand res (ret res))
  (ret (parse-a-sentence-completely str #$AllEnglishLexicalMicrotheoryPSC)))))
  
(parsesContextually1 "What is the population of the Turkey?")
(parsesContextually1 "How many people live in the USA?")

(cyc-assert
'(#$implies 
 (#$and
  (#$osim:descriptionStrings ?AREA ?TEXT)
   (#$osim:parsesContextually ?TEXT #$osim:WorldSpawn-TopicType ?CYCL))
 (#$futureAssertion ?AREA ?TEXT ?CYCL))
 #$osim:SituationMt '(:DIRECTION :FORWARD))

  
Three large chairs in the northern part of the room, in front of the railing, face the screen

Directly in front of you is a thick railing that contains many different computer panels used for the tactical systems of the ship

You can't see a bed in this room, but you figure it's because Data doesn't sleep  
  )))

(define parsesContextually1 (str) (parsesContextually (list str '#$osim:WorldSpawn-TopicType)))
#|


;  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND
; 7598 root      11 -14 1954m 910m 289m R 99.8 44.9 387:21.84 latest.bin
	     
;  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND
;  7598 root      11 -14 1954m 1.0g 289m R 99.9 50.3 397:16.08 latest.bin



(cyc-query '(#$osim:parsesContextually "I love you" #$osim:WorldSpawn-TopicType ?X) #$UniversalVocabularyMt) 
|#
;(define bestdenoted (l ctx) (cand l (clet ((best (car l))) (progn (cdolist (x (cdr l)) (csetq best (better1 best x ctx))) (ret (list (cdr best)))))))


;osim:denotesContextually
(find-or-create-constant "osim:denotesContextually")
(cyc-assert '(#$isa #$osim:denotesContextually #$Predicate) #$UniversalVocabularyMt)
(cyc-assert '(#$comment #$osim:denotesContextually "HL Predicate (#$representsContextually ?String ?Ctx ?Result) uses the (denotation-mapper ?String) to produce ?Result that is choosen best in ?Ctx.") #$UniversalVocabularyMt)
(cyc-assert '(#$isa #$osim:denotesContextually #$RemovalModuleSupportedPredicate-Specific) #$CycAPIMt)
(cyc-assert '(#$arity #$osim:denotesContextually 3) #$UniversalVocabularyMt)
(cyc-assert '(#$arg1Isa #$osim:denotesContextually #$TextString) #$UniversalVocabularyMt)
(cyc-assert '(#$arg2Isa #$osim:denotesContextually #$Thing) #$UniversalVocabularyMt)
(cyc-assert '(#$arg3Isa #$osim:denotesContextually #$Thing) #$UniversalVocabularyMt)
;;(cyc-assert '(#$genlPreds  #$meetsSpecification #$osim:denotesContextually) #$UniversalVocabularyMt)
(cyc-assert '(#$conceptuallyRelated #$osim:denotesContextually #$termRankingPreference) #$UniversalVocabularyMt)
(cyc-assert '(#$conceptuallyRelated #$osim:denotesContextually #$Criterion) #$UniversalVocabularyMt)
(cyc-assert '(#$conceptuallyRelated #$osim:denotesContextually #$superiorTypeWRTCriterion) #$UniversalVocabularyMt)
(cyc-assert '(#$conceptuallyRelated #$osim:denotesContextually #$superiorWRTCriterion) #$UniversalVocabularyMt)
(cyc-assert '(#$conceptuallyRelated #$osim:denotesContextually #$ratingTypeCriterion) #$UniversalVocabularyMt)
(cyc-assert '(#$conceptuallyRelated #$osim:denotesContextually #$meetsSpecification) #$UniversalVocabularyMt)
(cyc-assert '(#$conceptuallyRelated #$osim:denotesContextually #$osim:exceedsSomeConstraint) #$UniversalVocabularyMt)
(cyc-assert '(#$conceptuallyRelated #$osim:denotesContextually #$osim:violatesSomeConstraint) #$UniversalVocabularyMt)

;;(cyc-assert (#$isa #$osim:WorldSpawn-TopicType #$FormulaTemplateTopicType
(inference-removal-module :removal-denotesContextually-bound-bound-unbound
 '(:sense :pos 
	:predicate #$osim:denotesContextually 
	:required-pattern (#$osim:denotesContextually :fully-bound :fully-bound :not-fully-bound) 
	:cost-expression 0 :completeness :complete 
	:input-extract-pattern (:template  (#$osim:denotesContextually (:bind value-1) (:bind value-2) :anything) ((:value value-1) (:value value-2)))
	:input-verify-pattern :anything
	:output-generate-pattern (:call denoter :input)
	:output-construct-pattern  (#$osim:denotesContextually (:value value-1) (:value value-2) :input)))
(register-solely-specific-removal-module-predicate #$osim:denotesContextually)
(define denoter (vs) (cand (stringp (car vs))(constantp (nth 1 vs)) (ret (bestdenoted (remove-violaters (denotation-mapper (car vs) nil :diligent) (nth 1 vs)) (nth 1 vs)))))
(define bestdenoted (l ctx) (cand l (clet ((best (car l))) (progn (cdolist (x (cdr l)) (csetq best (better1 best x ctx))) (ret (list (cdr best)))))))


(find-or-create-constant "osim:denotationMapper")
(cyc-assert '(#$isa #$osim:denotationMapper #$Predicate) #$UniversalVocabularyMt)
(cyc-assert '(#$comment #$osim:denotationMapper "HL Predicate (#$denotationMapper ?String ?Result ?Lex) uses the (denotation-mapper ?String) to produce ?Result that is choosen best in ?Ctx.") #$UniversalVocabularyMt)
(cyc-assert '(#$isa #$osim:denotationMapper #$RemovalModuleSupportedPredicate-Specific) #$CycAPIMt)
(cyc-assert '(#$arity #$osim:denotationMapper 3) #$UniversalVocabularyMt)
(cyc-assert '(#$arg1Isa #$osim:denotationMapper #$TextString) #$UniversalVocabularyMt)
(cyc-assert '(#$arg2Isa #$osim:denotationMapper #$Thing) #$UniversalVocabularyMt)
(cyc-assert '(#$arg3Isa #$osim:denotationMapper #$Thing) #$UniversalVocabularyMt)
;;(cyc-assert (#$isa #$osim:WorldSpawn-TopicType #$FormulaTemplateTopicType
(inference-removal-module :removal-denotationMapper-bound-unbound-unbound
 '(:sense :pos 
	:predicate #$osim:denotationMapper 
	:required-pattern (#$osim:denotationMapper :fully-bound :not-fully-bound :not-fully-bound) 
	:cost-expression 0 :completeness :complete 
	:input-extract-pattern (:template  (#$osim:denotationMapper (:bind value-1) :anything :anything) ((:value value-1)))
	:input-verify-pattern :anything
	:output-generate-pattern (:call dentoterMapper :input)))
(register-solely-specific-removal-module-predicate #$osim:denotationMapper)
(define dentoterMapper (calv) (ret (cand (stringp (car calv))
     (clet ((str (car calv))(lst (denotation-mapper str nil))(results nil))
     (cdolist (x lst) (csetq results (cons (list #$osim:denotationMapper str (car x) (cdr x)) results)))
     (ret results)))))


;(cyc-query '(#$osim:denotationMapper "good" ?C ?Y) '#$EverythingPSC)

(define remove-violaters (lst ctx)
 (ret (cand (consp lst)
 (clet ((results nil))
  (cdolist (x lst) 
    (cand (consp x) (null (cq (list #$osim:violatesSomeConstraint (cdr x) ctx))) (csetq results (cons x results))))
  (ret results)))))

;;(cyc-query '(#$and (#$isa ?I #$osim:Instance) (#$nameString ?I ?S) (#$osim:denotesContextually ?S #$osim:WorldSpawn-TopicType ?C)) '#$EverythingPSC)
      
(define cq1 (q &optional (hmt #$EverythingPSC)) (ret (car (cyc-query q hmt '(:backchain T  :time 15  :number 1)))))
(define cq (q &optional (hmt #$EverythingPSC)) (ret (cyc-query q hmt '(:backchain T :time 30))))
(define cq (q &optional (hmt #$EverythingPSC)) (clet ((result (cyc-query q hmt '(:backchain T)))) (print (list q hmt result)) (ret result)))
(define better1 (x y ctx) (clet ((best (better2 y x ctx))) (print (list (cdr x) (cdr y ) best )) (ret best)))
  
;; (print (list x y ))(force-output)
;; Assume violators are removed first with #'remove-violaters
(define better1 (x y ctx)
 (clet ((xx (cdr x)) (yy (cdr y )))
 (pcond 
  ((eq xx yy) (ret x))
  ((cq (list #$osim:exceedsSomeConstraint xx ctx)) (ret x ))
  ((cq (list #$osim:exceedsSomeConstraint yy ctx)) (ret y ))
  ((cq (list #$termRankingPreference ctx xx yy)) (ret xx ))
  ((cq (list #$termRankingPreference ctx yy xx)) (ret yy ))
  ((cq (list #$superiorWRTCriterion xx yy ctx)) (ret xx ))
  ((cq (list #$superiorWRTCriterion yy xx ctx)) (ret yy ))
  ((> (length (car x)) (length (car y ))) (ret x ) )
  ((< (length (car x)) (length (car y ))) (ret y ) )
  ((consp yy) (ret x ))
  ((consp xx) (ret y ))
  ( (> (length (all-term-assertions  xx)) (length (all-term-assertions  yy ))) (ret y ))
  ( (< (length (all-term-assertions  xx)) (length (all-term-assertions  yy ))) (ret x ))
  (T (ret x )))))
  

(define denoter1 (x) (ret (denoter (list x '#$osim:WorldSpawn-TopicType))))
(define denoter2 (str) (ret (remove-violaters (denotation-mapper str nil :diligent)  '#$osim:WorldSpawn-TopicType ) ))

#|
(cq '(#$osim:violatesSomeConstraint #$Area1031 #$osim:WorldSpawn-TopicType))
(load "/rcyc/cycosim/startrek.lisp")
(load "/rcyc/cycosim/mudtool.lisp")
(denoter1 "Quarters")
(denoter1 "room")
(denoter1 "bridge")
(denoter1 "trombone")
(denoter1 "cargo bay")
(denoter1 "captain")
  
  ((cq (list #$genls (cdr x) #$osim:Instance)) (ret y ))
  ((cq (list #$genls (cdr y ) #$osim:Instance)) (ret x ))
  ((cq (list #$isa (cdr x ) #$ChromaticColor)) (ret x ))
  ((cq (list #$isa (cdr y ) #$ChromaticColor)) (ret y ))
  ((cq (list #$genls (cdr x ) #$Device-SingleUser)) (ret x ))
  ((cq (list #$genls (cdr y ) #$Device-SingleUser)) (ret y ))
  ((cq (list #$genls (cdr x ) #$Facility-Generic)) (ret x ))
  ((cq (list #$genls (cdr y ) #$Facility-Generic)) (ret y ))
  ((cq (list #$genls (cdr x) #$ScalarInterval)) (ret y ))
  ((cq (list #$genls (cdr y ) #$ScalarInterval)) (ret x ))
  ((cq (list #$genls (cdr x) #$Ocean)) (ret y ))
  ((cq (list #$genls (cdr y ) #$Ocean)) (ret x ))
  ((cq (list #$genls (cdr x) #$IntangibleIndividual)) (ret y ))
  ((cq (list #$genls (cdr y ) #$IntangibleIndividual)) (ret x ))  
  ((cq (list #$genls (cdr x) #$Intangible)) (ret y ))
  ((cq (list #$genls (cdr y ) #$Intangible)) (ret x ))  
  ((cq (list #$genls (cdr x) #$AminoAcid)) (ret y ))
  ((cq (list #$genls (cdr y ) #$AminoAcid)) (ret x ))         
  ((cq (list #$genls (cdr x) #$MolecularComponent)) (ret y ))
  ((cq (list #$genls (cdr y ) #$MolecularComponent)) (ret x ))  
  ((cq (list #$genls (cdr x) #$AspatialInformationStore)) (ret y ))
  ((cq (list #$genls (cdr y ) #$AspatialInformationStore)) (ret x ))  
  ((cq (list #$genls (cdr x) #$Event)) (ret y ))
  ((cq (list #$genls (cdr y ) #$Event)) (ret x ))
  ((cq (list #$isa (cdr x ) #$Individual )) (ret y ))
  ((cq (list #$isa (cdr y ) #$Individual )) (ret x ))
  ((> (length (car x)) (length (car y ))) (ret x) )
  ((null (cq (list #$isa (cdr x ) #$Collection ))) (ret y ))
  ((null (cq (list #$isa (cdr y ) #$Collection ))) (ret x ))
|#

(cyc-assert '
 (#$equals 
  (#$osim:descriptionStrings ?PLACE "Two large windows offer a great view of space") 
  (#$thereExistExactly 2 ?INST 
    (#$and 
      (#$isa ?INST #$VisualInformationBearingThing) 
      (#$isa ?INST #$WindowPortal) 
      (#$objectFoundInLocation ?INST ?PLACE) 
      (#$visuallyDepicts ?INST #$OuterSpace))))	#$osim:SituationMt)
      

denotation-mapper

      


(cyc-assert '(#$implies (#$and (#$osim:violatesSomeGenlsConstraint ?Super ?TT)(#$genls ?Sub ?Super))(#$osim:violatesSomeConstraint ?Sub ?TT))  '#$osim:SituationMt)
(cyc-assert '(#$implies (#$and (#$osim:violatesSomeIsaConstraint ?Super ?TT)(#$isa ?Sub ?Super))(#$osim:violatesSomeConstraint ?Sub ?TT))  '#$osim:SituationMt)

(cyc-assert '(#$implies (#$and (#$genls ?C ?U)(#$osim:violatesSomeConstraint ?U)) (#$osim:violatesSomeConstraint ?C))  '#$osim:SituationMt)
(cyc-assert '(#$implies (#$and (#$osim:violatesSomeConstraint ?U)(#$genls ?C ?U)) (#$not (#$osim:exceedsSomeConstraint ?C)))  '#$osim:SituationMt '(:DIRECTION :FORWARD))



(find-or-create-constant "osim:spawnPredicate")
(cyc-assert '(#$isa #$osim:spawnPredicate #$TernaryPredicate) #$UniversalVocabularyMt)
(cyc-assert '(#$comment #$osim:spawnPredicate "(#$osim:spawnPredicate ?Arg1 ?Arg2 ?P) will return #$isa or #$genls or some other mostly legal reation between the two arguments") #$UniversalVocabularyMt)
(cyc-assert '(#$isa #$osim:spawnPredicate #$RemovalModuleSupportedPredicate-Specific) #$CycAPIMt)
(cyc-assert '(#$arity #$osim:spawnPredicate 3) #$UniversalVocabularyMt)
(cyc-assert '(#$arg1Isa #$osim:spawnPredicate #$Thing) #$UniversalVocabularyMt)
(cyc-assert '(#$arg2Genl #$osim:spawnPredicate #$ThreeDimensionalThing) #$UniversalVocabularyMt)
(cyc-assert '(#$arg2Genl #$osim:spawnPredicate #$SomethingExisting) #$UniversalVocabularyMt)
(cyc-assert '(#$arg3Isa #$osim:spawnPredicate #$BinaryPredicate) #$UniversalVocabularyMt)
(cyc-assert '(#$conceptuallyRelated #$osim:spawnPredicate #$osim:violatesSomeConstraint) #$UniversalVocabularyMt)
(inference-removal-module :removal-spawnPredicate-bound-bound-unbound
 '(:sense :pos 
	:predicate #$osim:spawnPredicate 
	:required-pattern (#$osim:spawnPredicate :fully-bound :fully-bound :not-fully-bound) 
	:cost-expression 0 :completeness :complete 
	:input-extract-pattern (:template  (#$osim:spawnPredicate (:bind value-1) (:bind value-2) :anything) ((:value value-1) (:value value-2)))
	:input-verify-pattern :anything
	:output-generate-pattern (:call spawnPredicate :input)
	:output-construct-pattern  (#$osim:spawnPredicate (:value value-1) (:value value-2) :input)
	:documentation "(#$osim:spawnPredicate <fully-bound> <not-fully-bound>)"
	:example "(#$osim:spawnPredicate -1 ?WHAT)"))
(register-solely-specific-removal-module-predicate #$osim:spawnPredicate)
(define spawnPredicate (vs)
 (clet ((v1 (car vs)) (v2 (nth 1 vs)))
  (ret (cand  (cq (list #$isa v2 #$Collection)) (ret (list (fif (cq (list #$isa v1 #$Collection)) #$genls #$isa)))))))
       
;;HumanScaleObject     
	
#|
(#$implies 
  (#$and 
    (#$isa ?I #$osim:Instance) 
    (#$or (#$termStrings ?I ?S) 
    (#$webSearchableStrings ?I ?S) 
    (#$nameString ?I ?S)) 
    (#$osim:denotesContextually ?S ?C) 
    (#$osim:spawnPredicate ?I ?C ?P)) 
  (#$ist #$osim:SituationMt 
    (?P ?I ?C)))
    
;;    (#$or (#$isa ?I #$BPVLocation)(#$isa ?I #$BPVAgent)(#$isa ?I #$BPVItem))
    ;;(#$or (#$nameString ?I ?S) (#$webSearchableStrings ?I ?S))

(cyc-assert '(#$implies 
(#$and 
    (#$isa ?I #$osim:Instance)
    (#$termStrings ?I ?S)
    (#$osim:denotesContextually ?S #$osim:WorldSpawn-TopicType ?C))
  (#$ist #$osim:SituationMt (#$isa ?I ?C))) #$osim:SituationMt)

(cyc-assert '(#$implies 
(#$and 
    (#$isa ?I #$BPVAgent)
    (#$termStrings ?I ?S) 
    (#$osim:denotesContextually ?S #$osim:WorldSpawn-TopicType ?C))
  (#$ist #$osim:SituationMt (#$isa ?I ?C))) #$osim:SituationMt '(:DIRECTION :FORWARD))

(cyc-assert '(#$isa #$TheAtmosphereQuaSinglePieceOfStuff #$FluidTangibleThing) #$osim:SituationMt)
(cyc-assert '(#$isa #$TheAtmosphereQuaSinglePieceOfStuff #$PartiallyTangible) #$osim:SituationMt)
(cyc-assert '(#$isa #$TheAtmosphereQuaSinglePieceOfStuff #$SpatialThing-Localized) #$osim:SituationMt)


(cyc-assert '(#$implies 
(#$and 
;;    (#$or (#$isa ?I #$BPVLocation)(#$isa ?I #$BPVAgent)(#$isa ?I #$BPVItem))
    (#$isa ?I #$osim:Instance)
    (#$termStrings ?I ?S) 
    (#$osim:denotesContextually ?S #$osim:WorldSpawn-TopicType ?C))
  (#$ist #$osim:SituationMt (#$isa ?I ?C))) #$osim:SituationMt '(:DIRECTION :FORWARD))

|#    
 
;==================================================
; Mapping Predicate: gameCollection
;==================================================
(create-constant "osim:gameCollection")
(cyc-assert '(#$isa #$osim:gameCollection #$BinaryPredicate) #$UniversalVocabularyMt)
(cyc-assert '(#$arg1Isa #$osim:gameCollection #$Collection) #$UniversalVocabularyMt)
(cyc-assert '(#$arg2Isa #$osim:gameCollection #$Criterion) #$UniversalVocabularyMt)
(cyc-assert '(#$conceptuallyRelated #$osim:gameCollection #$synonymousExternalConcept) #$osim:SituationMt)
(cyc-assert '(#$conceptuallyRelated #$osim:gameCollection #$synonymousExternalConcept) #$osim:SituationMt)
;(cyc-assert '(#$genlPreds #$osim:gameCollection #$programStrings) #$osim:SituationMt)
(cyc-assert '(#$comment #$osim:gameCollection "If something is an instance of ?COL then it may be spawned via ?TEXT then it Maps (#$osim:gameCollection ?COL ?TEXT) like (#$synonymousExternalConcept ?COL #$osim:VocabularyMt ?TEXT)") #$UniversalVocabularyMt)

(create-constant "GameTypeCreatable")
(cyc-assert '(#$isa #$GameTypeCreatable #$CollectionType) #$UniversalVocabularyMt)
(cyc-assert '(#$conceptuallyRelated #$osim:gameCollection #$GameTypeCreatable) #$osim:SituationMt)
(cyc-assert '(#$implies (#$osim:gameCollection ?COL ?HOW) (#$isa ?COL #$GameTypeCreatable)) #$osim:SituationMt)
(cyc-assert '(#$comment #$GameTypeCreatable "If something is an instance of #$GameTypeCreatable then it may be spawned)") #$UniversalVocabularyMt)

(create-constant "GameTypePossible")
(cyc-assert '(#$isa #$GameTypePossible #$CollectionType) #$UniversalVocabularyMt)
(cyc-assert '(#$genls #$GameTypeCreatable #$GameTypePossible ) #$UniversalVocabularyMt)
(cyc-assert '(#$isa #$GeneralLivingAreaFurnitureMC #$GameTypePossible ) #$osim:VocabularyMt)
(cyc-assert '(#$isa #$Decoration #$GameTypePossible ) #$osim:VocabularyMt)
(cyc-assert '(#$isa #$Person-SupportingFurniture #$GameTypePossible ) #$osim:VocabularyMt)



(cyc-assert '(#$comment #$GameTypePossible "If something is an instance of #$GameType then it's specs may be spawned if they are not #$GameTypeTooGeneral") #$UniversalVocabularyMt)
(cyc-assert '(#$conceptuallyRelated #$GameTypePossible #$GameTypeCreatable) #$osim:SituationMt)

#|
(exceptWhen (isa ?ARG1 GameTypeExceptions)
   (implies 
         (isa ?ARG1 GameTypePossibles) 
         (isa ?ARG1 GameTypeCreatable)))
	 
;since i work on an expert system that designs new games i needed a better target infrastructure. so i am converting the osim3 game to a SDK that lets you write games that are more RPG-like.  
whenever i get frustrated i look for a new engine/system ;P.. even though this is a potental govt contract work, I dont get paid and i have to use free things
looks pretty neat i almost want to switch. osims graphics is not interesting.. mainly its tools that enable devopers to write games that i care about. droid area system
well my expert system is a webserver app.. so web doesnt bother me
[13:58] <dmiles> oh so only one person plays?
[13:58] <@Uhfgood> essentially you go in build your bot, upload a script, and enter an arena
[13:59] <@Uhfgood> when others enter, then a fight can take place
[13:59] <dmiles> ah.. i should look at their programming language
[13:59] <dmiles> did you have to write a yacc?
[13:59] <@Uhfgood> many people play... in fact it can't exactly be played alone, although you can run a fight simulation, which pits your bot against 3 simulated bots
;yacc=yet another c commpiler 
one problem is i am doing research that probly wont make me or them money.. if i get government grants sure i dont mind giving them %
|#
	 

(isa 

GameTypeExceptions
 
 (CollectionDifferenceFn GameTypePossibles GameTypeExceptions) 
(implies (isa ?ARG1 GameTypeExceptions)(not (isa ?ARG1 GameTypeCreatable)))

(implies (isa ?ARG1 GameTypePossibles)(or (isa ?ARG1 GameTypeExceptions) (isa ?ARG1 GameTypeCreatable)))

(implies (isa ?ARG1 GameTypeCreatable) (isa ?ARG1 GameTypePossibles))
(implies (isa ?ARG1 GameTypeExceptions) (not (isa ?ARG1 GameTypePossibles)))

(implies (genls ?X Intangible)(isa ?X GameTypeExceptions)) 

(implies (genls ?X SolidTangibleThing)(isa ?X GameTypePossibles)) 

(implies (and (isa ?ARG1 GameTypePossibles) (not (isa ?ARG1 GameTypeExceptions))) (isa ?ARG1 GameTypeCreatable))

(exceptWhen (isa ?ARG1 GameTypeExceptions)(typeGenlss GameTypePossibles GameTypeCreatable))


(implies (isa ?ARG1 (CollectionDifferenceFn GameTypePossibles GameTypeExceptions)) (isa ?ARG1 GameTypeCreatable))

(and 
(isa SymmetricAnatomicalPartType GameTypeExceptions)
(isa UniqueAnatomicalPartType GameTypeExceptions)
(isa AnimalBodyPart GameTypeExceptions)
(isa Currency-US GameTypeExceptions)
(isa Chairman GameTypeExceptions)
(isa Star GameTypeExceptions)
(isa FamousHuman GameTypeExceptions))
(isa  Buttocks  GameTypeExceptions)
(isa  Well  GameTypeExceptions)
(isa  Healthy  GameTypeExceptions)
(isa  EllipticalRegion  GameTypeExceptions)
(genls  osim:Instance   GameTypeExceptions)
(implies (genls ?X osim:Instance) (ist osim:VocabularyMt (isa  ?X  GameTypeExceptions)))
(isa  DoorInABuilding    GameTypeExceptions)
(isa  DoorwayCovering   GameTypeExceptions)
(isa  TallPhysicalBuild   GameTypeExceptions)
(isa  Block  GameTypeExceptions)
(isa CoverOfIBO  GameTypeExceptions)
(isa Cover-Protector GameTypeExceptions)
(isa FreeSheet GameTypeExceptions)


(implies 
       (and 
           (isa ?INST BPVLocation) 
           (osim:descriptionStrings ?INST ?TEXT) 
           (osim:denotationMapper ?TEXT ?STRING ?COL)) 
       (ist osim:SituationMt (osim:descriptionTerms ?INST ?COL)))
       

(cyc-assert '(#$typeGenls #$NonessentialAminoAcidType #$GameTypeExceptions) '#$osim:VocabularyMt  '(:DIRECTION :FORWARD))
(isa Terrorist GameTypeExceptions)

(cyc-unassert '(#$implies (#$osim:violatesSomeIsaConstraint ?COL ?ANYWHERE) (#$genls #$GameTypeExceptions  ?COL))   '#$osim:VocabularyMt)
(cyc-unassert '(#$implies (#$osim:violatesSomeIsaConstraint ?COL ?ANYWHERE) (#$typeGenls #$GameTypeExceptions  ?COL))   '#$osim:VocabularyMt)
(cyc-unassert '(#$implies (#$osim:violatesSomeConstraint ?COL ?ANYWHERE) (#$isa  ?COL #$GameTypeExceptions ))   '#$osim:VocabularyMt )


(cyc-assert '(#$isa #$GameTypeCreatable #$FacetingCollectionType) '#$osim:VocabularyMt  '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa #$GameTypeExceptions #$FacetingCollectionType) '#$osim:VocabularyMt  '(:DIRECTION :FORWARD))
;FacetingCollectionType
(cyc-assert '(#$implies (#$osim:violatesSomeIsaConstraint ?COL ?ANYWHERE) (#$ist  #$osim:VocabularyMt  (#$typeGenls ?COL  #$GameTypeExceptions)))   '#$osim:VocabularyMt  '(:DIRECTION :FORWARD))
(cyc-assert '(#$implies (#$osim:violatesSomeGenlsConstraint ?COL ?ANYWHERE) (#$ist  #$osim:VocabularyMt  (#$genls ?COL  #$GameTypeExceptions)))   '#$osim:VocabularyMt  '(:DIRECTION :FORWARD))
(cyc-assert '(#$implies (#$osim:violatesSomeIsaConstraint ?COL ?ANYWHERE) (#$ist  #$osim:VocabularyMt  (#$typeGenls ?COL  #$GameTypeExceptions)))   '#$osim:VocabularyMt  '(:DIRECTION :FORWARD))

(cyc-assert '(#$implies (#$osim:violatesSomeConstraint ?COL ?ANYWHERE) (#$ist #$osim:VocabularyMt (#$isa  ?COL #$GameTypeExceptions )))   '#$osim:VocabularyMt  '(:DIRECTION :FORWARD))
       
(implies            
   (and 
;;   (genls ?COL GameTypePossibles)
   (isa ?GOOD GameTypeCreatable) 
   (isa ?BAD GameTypeExceptions)
   (genls ?COL ?GOOD) 
   (unknownSentence (genls ?COL ?BAD)))
(meetsSomeConstraintOfTopicType ?COL #$osim:FoundInLocations-TopicType))        


(implies 
    (and 
       (osim:descriptionTerms ?INST ?COL)
       (meetsSomeConstraintOfTopicType ?COL #$osim:FoundInLocations-TopicType))
   (ist osim:SituationMt (relationExistsInstance spatialThingTypeFoundInLocation ?COL ?INST)))

(implies 
    (and 
       (osim:descriptionTerms ?INST ?COL)
       (meetsSomeConstraintOfTopicType ?COL #$osim:WorldSpawn-TopicType))
   (ist osim:SituationMt (relationExistsInstance spatialThingTypeFoundInLocation ?COL ?INST)))
	   

Mt : osim:SituationMt
Direction : Forward
(implies 
       (and 
           (isa ?INST BPVLocation) 
           (osim:descriptionStrings ?INST ?TEXT) 
           (genls ?COL Person-SupportingFurniture) 
           (osim:denotationMapper ?TEXT ?STRING ?COL)) 
       (ist osim:SituationMt 
           (relationExistsInstance spatialThingTypeFoundInLocation ?COL ?INST)))
(implies 
       (and 
           (isa ?INST BPVLocation) 
           (osim:descriptionStrings ?INST ?TEXT) 
           (genls ?COL Decoration) 
           (osim:denotationMapper ?TEXT ?STRING ?COL)) 
       (ist osim:SituationMt 
           (relationExistsInstance spatialThingTypeFoundInLocation ?COL ?INST)))
(implies 
       (and 
           (osim:descriptionStrings ?AREA ?TEXT) 
           (osim:parsesContextually ?TEXT osim:WorldSpawn-TopicType ?CYCL)) 
       (futureAssertion ?AREA ?TEXT ?CYCL))
       

GeneralLivingAreaFurnitureMC Person-SupportingFurniture  Decoration


(implies 
       (and 
           (isa ?INST BPVLocation) 
           (osim:descriptionStrings ?INST ?TEXT) 
           (genls ?COL GeneralLivingAreaFurnitureMC) 
           (osim:denotationMapper ?TEXT ?STRING ?COL)) 
       (ist osim:SituationMt 
           (relationExistsInstance spatialThingTypeFoundInLocation ?COL ?INST)))
	   
(implies 
       (and 
           (isa ?INST BPVLocation) 
           (osim:descriptionStrings ?INST ?TEXT) 
           (osim:relationCandidateExistsAll objectFoundInLocation ?COL BPVLocation) 
           (osim:denotationMapper ?TEXT ?STRING ?COL)) 
       (ist osim:SituationMt 
           (relationExistsInstance objectFoundInLocation ?COL ?INST)))



GameTypeCreatable

;(templateTopicGenls osim:FoundInLocations-TopicType GameTypeCreatable)
(find-or-create-constant "osim:WorldSpawn-TopicType")
(cyc-assert '(#$isa #$osim:WorldSpawn-TopicType #$FormulaTemplateTopicType)  '#$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$titleForFormulaTemplateType-String #$osim:WorldSpawn-TopicType "Topic template for constraining worldspawning")  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$formulaTemplateTypeHasTopicType #$IndividualTerrainArtifactTemplate #$osim:WorldSpawn-TopicType) '#$osim:SituationMt '(:DIRECTION :FORWARD))
;(cyc-assert '(#$templateTopicGenls #$osim:WorldSpawn-TopicType #$osim:Instance) '#$osim:SituationMt '(:DIRECTION :FORWARD))
(find-or-create-constant "osim:FoundInLocations-TopicType")
(cyc-assert '(#$isa #$osim:FoundInLocations-TopicType #$FormulaTemplateTopicType)  '#$UniversalVocabularyMt '(:DIRECTION :FORWARD))
;(cyc-assert '(#$isa #$osim:FoundInLocations-TopicType #$Collection)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$osim:FoundInLocations-TopicType #$osim:WorldSpawn-TopicType)  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$titleForFormulaTemplateType-String #$osim:FoundInLocations-TopicType "Topic template for constraining objects in rooms")  '#$osim:VocabularyMt '(:DIRECTION :FORWARD))
;(cyc-assert '(#$formulaTemplateTypeHasTopicType #$IndividualTerrainArtifactTemplate #$osim:FoundInLocations-TopicType) '#$osim:SituationMt '(:DIRECTION :FORWARD))
;(cyc-assert '(#$templateTopicGenls #$osim:FoundInLocations-TopicType #$GameTypeCreatable) '#$osim:SituationMt '(:DIRECTION :FORWARD))

   


(implies 
       (and 
           (isa ?INST BPVLocation) 
           (osim:descriptionStrings ?INST ?TEXT) 
           (osim:denotationMapper ?TEXT ?STRING ?COL)
           (meetsSomeConstraintOfTopicType ?COL #$osim:FoundInLocations-TopicType))
       (ist osim:SituationMt 
           (relationExistsInstance spatialThingTypeFoundInLocation ?COL ?INST)))
	   



(implies (genls ?X BPVAgent) (ist osim:SituationMt (isa ?X GameTypeExceptions)))
)
;; EllipticalRegion  

;(isa Channel-BodyOfWaterLink  GameTypeExceptions)
; spatialThingTypeFoundInLocation  Decoration  
#|
AllEnglishLexicalMicrotheoryPSC
AllEnglishTemplateMt
(define pasc (x) (parse-a-question-completely x #$AllEnglishLexicalMicrotheoryPSC))
(pasc "who do you love?")




|#

(create-constant "GameTypeTooGeneral")
(cyc-assert '(#$isa #$GameTypeTooGeneral #$CollectionType) #$UniversalVocabularyMt)
(cyc-assert '(#$disjointWith #$GameTypeTooGeneral #$GameTypeCreatable) #$osim:SituationMt)
;;(cyc-assert '(#$implies (#$osim:gameCollection ?COL ?HOW) (#$isa ?COL #$GameTypeCreatable)) #$osim:SituationMt)
(cyc-assert '(#$comment #$GameTypeTooGeneral "If something is an instance of #$GameTypeTooGeneral then it may not be spawned)") #$UniversalVocabularyMt)

(cyc-assert '(#$genls (#$CollectionDifferenceFn #$GameType #$GameTypeTooGeneral) #$GameTypeCreatable) #$UniversalVocabularyMt)

(#$typeGenls #$GameTypeCreatable  (#$CollectionDifferenceFn #$GameType #$GameTypeTooGeneral) )
(cyc-assert '(#$collectionConventionMt  #$GameTypeCreatable #$osim:VocabularyMt)    #$UniversalVocabularyMt)
(cyc-assert '(#$collectionConventionMt  #$GameTypeTooGeneral #$osim:VocabularyMt)    #$UniversalVocabularyMt)
(cyc-assert '(#$collectionConventionMt  #$GameType #$osim:VocabularyMt)    #$UniversalVocabularyMt)
;==================================================
; Mapping Predicate: gameCollectionImplied
;==================================================
(create-constant "osim:gameCollectionImplied")
(cyc-assert '(#$isa #$osim:gameCollectionImplied #$BinaryPredicate) #$UniversalVocabularyMt)
(cyc-assert '(#$arg1Isa #$osim:gameCollectionImplied #$Collection) #$UniversalVocabularyMt)
(cyc-assert '(#$arg2Isa #$osim:gameCollectionImplied #$Criterion) #$UniversalVocabularyMt)
(cyc-assert '(#$conceptuallyRelated #$osim:gameCollectionImplied #$synonymousExternalConcept) #$osim:SituationMt)
(cyc-assert '(#$conceptuallyRelated #$osim:gameCollectionImplied #$synonymousExternalConcept) #$osim:SituationMt)
;(cyc-assert '(#$genlPreds #$osim:gameCollectionImplied #$programStrings) #$osim:SituationMt)
(cyc-assert '(#$comment #$osim:gameCollectionImplied "If something is an instance of subclass of ?TEXT then it is a implicitly ?COL (#$osim:gameCollectionImplied ?COL ?TEXT) like (#$synonymousExternalConcept ?COL #$osim:VocabularyMt ?TEXT)") #$UniversalVocabularyMt)

(cyc-assert '(#$genlPreds #$osim:gameCollection #$osim:gameCollectionImplied) #$osim:SituationMt)

;==================================================
; EXTENT: gameCollectionImplied
;==================================================
(cyc-assert '(#$implies (#$and (#$isa ?INST #$osim:Instance)(#$unknownSentence (#$osim:gameInstance ?INST ?ANYTEXT))(#$isa ?INST ?SPEC)(#$genls ?SPEC ?COL) (#$osim:gameCollection ?COL  (#$osim:BindingFn ?TEXT "classname"))) (#$ist #$osim:SituationMt (#$osim:gameInstance ?INST ?TEXT)))#$osim:SituationMt)
(cyc-assert '(#$completeExtentDecidable #$osim:gameInstance) '#$osim:VocabularyMt '(:DIRECTION :FORWARD))

;==================================================
; Function: BindingFn
;==================================================
(create-constant "osim:BindingFn")
(cyc-assert '(#$isa #$osim:BindingFn #$BinaryFunction) #$UniversalVocabularyMt)
(cyc-assert '(#$isa #$osim:BindingFn #$UnreifiableFunction) #$UniversalVocabularyMt)												  
(cyc-assert '(#$arg1Isa #$osim:BindingFn #$Thing) #$UniversalVocabularyMt)
(cyc-assert '(#$arg2Isa #$osim:BindingFn #$Thing) #$UniversalVocabularyMt)
(cyc-assert '(#$resultIsa #$osim:BindingFn #$Criterion) #$UniversalVocabularyMt)
(cyc-assert '(#$comment #$osim:BindingFn "Used in (#$osim:gameSpawnArg ?Instance (#$osim:BindingFn ?Property ?Value)) and (#$osim:gameValue ?Instance (#$osim:BindingFn ?Property ?Value))") #$UniversalVocabularyMt)
(cyc-assert '(#$isa #$osim:gameInstance #$FunctionalSlot)#$UniversalVocabularyMt)
               

(cyc-assert '(#$osim:gameCollection #$BPVAgent (#$osim:BindingFn "cyc_bot" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$BPVLocation (#$osim:BindingFn "mud_room" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$ArmChair (#$osim:BindingFn "moveable_chair2" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$BarrelContainer (#$osim:BindingFn "moveable_barrel1" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$BarrelContainer (#$osim:BindingFn "moveable_barrel2" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$BarrelContainer (#$osim:BindingFn "moveable_barrel3" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$BarrelContainer (#$osim:BindingFn "moveable_base_barrel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$BarrelContainer (#$osim:BindingFn "moveable_explodingbarrel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Bottle (#$osim:BindingFn "moveable_bottle1" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Boulder (#$osim:BindingFn "moveable_base_boulder" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$BoxTheContainer (#$osim:BindingFn "moveable_cartonbox4" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$BoxTheContainer (#$osim:BindingFn "moveable_cartonbox7" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$BoxTheContainer (#$osim:BindingFn "moveable_cartonbox8" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Brick (#$osim:BindingFn "moveable_base_brick" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Brick (#$osim:BindingFn "moveable_guardian_brick" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Bucket (#$osim:BindingFn "moveable_mopbucket" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Can (#$osim:BindingFn "moveable_cokecan" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Canister (#$osim:BindingFn "moveable_cannister" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$CardboardBox (#$osim:BindingFn "moveable_cartonbox2" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$CardboardCanister (#$osim:BindingFn "moveable_cartonbox3" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$CellularTelephone (#$osim:BindingFn "moveable_phone" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Chair-PieceOfFurniture (#$osim:BindingFn "moveable_normchair" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Cheeseburger (#$osim:BindingFn "moveable_burger" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Computer (#$osim:BindingFn "moveable_computer" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$ComputerHardwareItem (#$osim:BindingFn "moveable_gizmo2" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$ComputerKeyboard (#$osim:BindingFn "moveable_keyboard1" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$ComputerMonitor-Color (#$osim:BindingFn "moveable_hangingmonitor" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$ComputerMonitor-Color (#$osim:BindingFn "moveable_monitor" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$ComputerStand (#$osim:BindingFn "moveable_tablecart1" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$ComputerTerminal (#$osim:BindingFn "moveable_compcart" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$ComputerWorkstation (#$osim:BindingFn "moveable_compcart" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Cone (#$osim:BindingFn "moveable_cone" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$ContainerLid (#$osim:BindingFn "debris_barreltop2" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Cooler-Container (#$osim:BindingFn "moveable_spigotcan" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Crate (#$osim:BindingFn "moveable_cartonbox5" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Crate (#$osim:BindingFn "moveable_cartonbox6" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$CustomModification (#$osim:BindingFn "moveable_gizmo3" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$DeskLamp (#$osim:BindingFn "moveable_desklamp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Diamond (#$osim:BindingFn "moveable_diamondbox_sm" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Diamond-Gem (#$osim:BindingFn "moveable_diamondbox" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$DiningRoomChair (#$osim:BindingFn "moveable_chair5" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$DiningRoomChair (#$osim:BindingFn "moveable_kitchenchair" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$DominoesGame (#$osim:BindingFn "moveable_base_domino" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$DrinkingGlass (#$osim:BindingFn "moveable_foamcup" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$DrinkingMug (#$osim:BindingFn "moveable_foamcup" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$EatingTable (#$osim:BindingFn "moveable_ktable" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$ElectronicDevice (#$osim:BindingFn "moveable_gizmo1" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$FireExtinguisher (#$osim:BindingFn "moveable_fireext" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$FlatPanelDisplay (#$osim:BindingFn "moveable_monitorflip" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$FloorLamp (#$osim:BindingFn "moveable_utilitylamp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$GarbageCan (#$osim:BindingFn "moveable_plasticbin" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$GeographicalPlace-0D (#$osim:BindingFn "info_player_deathmatch" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$GliderChair (#$osim:BindingFn "moveable_tech_chair1" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$HypodermicSyringe (#$osim:BindingFn "moveable_infusion" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Jar (#$osim:BindingFn "moveable_plasticjar2" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Lantern (#$osim:BindingFn "moveable_item_lantern_world" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$LaptopComputer (#$osim:BindingFn "moveable_blaptop" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$LaptopComputer (#$osim:BindingFn "moveable_laptop" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$LiquidStorageTank (#$osim:BindingFn "moveable_burningbarrel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$LiquidStorageTank (#$osim:BindingFn "moveable_burningtank" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$LiquidStorageTank (#$osim:BindingFn "moveable_explodingtank" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Microscope (#$osim:BindingFn "moveable_microscope" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Mop (#$osim:BindingFn "moveable_mop" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Paper (#$osim:BindingFn "moveable_paperwad" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$PlasticBox (#$osim:BindingFn "moveable_plasticbinmini" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$PlasticFoodContainer (#$osim:BindingFn "moveable_burgerboxclose" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$PlasticFoodContainer (#$osim:BindingFn "moveable_burgerboxopen" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$PlasticJar (#$osim:BindingFn "moveable_plasticjar1" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$SafeTheLocker (#$osim:BindingFn "moveable_metalbox1" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Scientist (#$osim:BindingFn "alphalabs2_scientist1" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$ScrapMetal (#$osim:BindingFn "debris_barrelpiece2" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$ServingTray (#$osim:BindingFn "moveable_tray" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$ShoppingCart (#$osim:BindingFn "moveable_tablecart2" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$SpatialThing-Localized (#$osim:BindingFn "moveable_base_fixed" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$SpiralStaircase (#$osim:BindingFn "mud_twisty" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$SwivelChair (#$osim:BindingFn "moveable_chair1" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$TIPersonalComputer (#$osim:BindingFn "moveable_pc1" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$VerticalFileCabinet-PieceOfFurniture (#$osim:BindingFn "moveable_filecabinet1" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Vial (#$osim:BindingFn "moveable_beaker" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Wastebasket (#$osim:BindingFn "moveable_trashcan01" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$WaxedCardboardCarton (#$osim:BindingFn "moveable_cartonbox1" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$Wrench (#$osim:BindingFn "moveable_wrench" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Agent-Generic (#$osim:BindingFn "cyc_bot" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$AmmunitionBelt (#$osim:BindingFn "ammo_belt_small_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$AmmunitionBelt (#$osim:BindingFn "ammo_clip_large_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$BodyArmor (#$osim:BindingFn "item_armor_shard_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$ContainerLid (#$osim:BindingFn "debris_barreltop" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$GeographicalPlace-0D (#$osim:BindingFn "info_player_start" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$GeographicalSpaceRegion (#$osim:BindingFn "info_location" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$HandGrenade (#$osim:BindingFn "weapon_handgrenade_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Handgun (#$osim:BindingFn "weapon_pistol_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$MachineGun (#$osim:BindingFn "weapon_machinegun_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$MarinePersonnel (#$osim:BindingFn "model_mp_marine" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$MarinePersonnel (#$osim:BindingFn "player_osimmarine_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$MedicalDevice (#$osim:BindingFn "item_medkit_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$MedicalDevice (#$osim:BindingFn "item_medkit_small_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$MissileLauncher (#$osim:BindingFn "weapon_rocketlauncher_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Person (#$osim:BindingFn "cyc_bot" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Person (#$osim:BindingFn "human_marine_pistol" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$ProjectileShell-Blast (#$osim:BindingFn "ammo_rockets_large_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$ProjectileShell-Blast (#$osim:BindingFn "ammo_rockets_small_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Scientist (#$osim:BindingFn "alphalabs2_scientist1" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Scientist (#$osim:BindingFn "skins/characters/npcs/body_labcoat_lantern.skin" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$ScrapMetal (#$osim:BindingFn "debris_barrelpiece" "classname")) #$osim:VocabularyMt) 
(cyc-assert '(#$osim:gameCollectionImplied #$Shotgun (#$osim:BindingFn "weapon_shotgun_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Table-PieceOfFurniture (#$osim:BindingFn "moveable_Table_centercart1" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Terrorist (#$osim:BindingFn "human_marine_machinegun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Vest-Bulletproof (#$osim:BindingFn "item_armor_shard_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$implies (#$osim:gameCollection ?P ?W) (#$osim:exceedsSomeConstraint ?P #$osim:WorldSpawn-TopicType))  '#$osim:SituationMt)


(cyc-assert '(#$osim:gameCollectionImplied #$MedicalDevice (#$osim:BindingFn "item_medkit" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "aas" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "aas_cyberdemon" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "aas_guardian" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "aas_mancubus" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "aas_sabaoth" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "admin_bfgcase" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "admin_doorframe_pinkyattack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "admin_imp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "admin_impdoors" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "admin_overhear_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "admin_overhear_campbell" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "admin_overhear_campbell_bfg" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "admin_overhear_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "admin_overhear_swann" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "admin_pinky_glassbreak" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "admin_pinkyattack_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "admin_pinkyattack_pinky" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "admin_railing_pinkyattack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "admin_vent_swann" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "admin_wounded_marine" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ai_attackcone" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ai_attackcone_once" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ai_attackcone_turret" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ai_lostcombat" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "alphalabs_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "alphalabs_cin_imp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "alphalabs_elevatorenv" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "alphalabs_fragchamber_scientist" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "alphalabs_fragchamber_skeleton" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "alphalabs_helldoll" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "alphalabs_imp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "alphalabs_labcoat_bald" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "alphalabs_maggot" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "alphalabs_marine_helmet_p" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "alphalabs_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "alphalabs_scientist" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "alphalabs_vagaryintro_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "alphalabs_vagaryintro_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "alphalabs_vagaryintro_vagary" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_belt_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_belt_small_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_bfg_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_bloodstone_normal" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_bloodstone_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_bullets_large" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_bullets_large_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_bullets_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_bullets_small_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_cells_large" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_cells_large_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_cells_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_cells_small_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_clip_large" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_clip_large_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_clip_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_clip_small_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_grenade_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_grenade_small_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_names" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_rockets_large" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_rockets_large_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_rockets_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_rockets_small_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_shells_large" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_shells_large_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_shells_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_shells_small_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_types" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ammo_types_dxp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "archvile_flamewall" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "archvile_incinerate" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "bot_base" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "bot_sabot" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "caverns_boulderbridge" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "caverns_bridge" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "caverns_bridgeback" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "caverns_bridgefront" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "caverns_char_maint_scared" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "caverns_hellknight" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "caverns_hkwall" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "caverns_imp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "caverns_vagary" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "caverns_vagrocks" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "char_betruger" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "char_campbell" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "char_campbell_bfg" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "char_campbell_bfgcase" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "char_hazmat" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "char_labcoat_black" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "char_marine_asian_chair" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "char_marine_young_chair" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "char_mcneil_fem" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "char_security_goggles_pistol" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "char_sentry" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "char_sentry_flashlight" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "char_swann" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "character_default" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "character_soldier_machinegun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "cin_base" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "cloud" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "comm_sentry" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "comm_sentry_blank" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "comm_sentryloader" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "commoutside_campbell" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "commoutside_fatty" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "commoutside_hellgoo" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "commoutside_swann" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "commoutside_vehicle" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "cpu_camphunt_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "cpu_camphunt_campbell" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "cpu_monster_trite" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "cpu_wounded_campbell" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "cpuboss_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "cpuboss_cin_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "cpuboss_cin_sabaoth" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "cyc_bot" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_archvilefirewall" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_archvileincinerate" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bfg" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bfg_cinematic" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bfg_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bfg_overcharge" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bfgfreq" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bfgfreq_cinematic" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bfgsplash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bfgsplash_cinematic" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bfgsplash_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bullet_chaingun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bullet_chaingun_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bullet_char_soldier_machinegun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bullet_machinegun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bullet_machinegun_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bullet_pistol" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bullet_pistol_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bullet_turret" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bullet_zsec_machinegun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bullet_zsec_pistol" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bullet_zsec_shield" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_bullet_zsec_shotgun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_cacodemon_fireball" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_cacodemon_fireball_catch" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_cacodemon_fireball_splash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_chainsaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_chainsaw_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_co_electric_trac" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_crush" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_cyberrocketdirect" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_cyberrocketsplash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_explodingbarrel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_explodingbarrel_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_explosion" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_fatalfall" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_fatalfall_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_fireball_berzerker" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_fireball_berzerker_splash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_fireball_hellknight" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_fireball_hellknight_catch" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_fireball_hellknight_splash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_fireball_invul" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_fireball_invul_catch" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_fireball_invul_splash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_fists" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_fists_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_flashlight" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_flashlight_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_fragchamberfog" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_fragchamberpipe" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_generic" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_gib" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_grenadedirect" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_grenadedirect_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_grenadesplash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_grenadesplash_inhand" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_grenadesplash_inhand_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_grenadesplash_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_guardian_smash_direct" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_guardian_smash_splash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_guardiancharge" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_guardianheadbutt" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_guardianpoundground" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_hardfall" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_hardfall_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_helltimefireball" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_helltimefireball_splash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_hugeexplosion" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_impfireball" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_impfireball_catch" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_impfireball_splash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_invulelectricwall" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_invulnarea" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_killer_fireball" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_killerfireball_splash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_lava" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_lightbreak" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_maledict_asteroid" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_maledict_asteroid_catch" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_maledict_asteroid_splash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_maledict_fireball" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_maledict_fireball_catch" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_maledict_fireball_splash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_maledictfirewall" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_mancubusblast" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_mancubusblast_catch" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_mancubussplash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_moveable_carton" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_moveable_large" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_moveable_medium" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_moveable_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_moveable_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_moveable_tiny" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_moveable_xlarge" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_movercrush" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_noair" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_paintrigger" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_plasmablast" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_plasmablast_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_plasmatracer" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_revrocket" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_revrocket_catch" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_revrocketsplash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_rocketdirect" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_rocketdirect_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_rocketsplash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_rocketsplash_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_sentry_bullet" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_shotgun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_shotgun_double" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_shotgun_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_smallexplosion" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_softfall" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_softfall_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_soulblast" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_soulblast_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_soulsplash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_soulsplash_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_suicide" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_telefrag" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_thrown_ragdoll" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_tick_explode" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_triggerhurt_" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_triggerhurt_toxin" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_triggerhurt_toxin_" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_trite_explode" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_vagaryobject" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_vulgar_fireball" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_vulgar_fireball_catch" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_vulgar_fireball_splash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "damage_zombie_commando_cgun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "debris_barrelpiece" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "debris_barreltop" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "debris_brass" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "debris_largeshrapnel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "debris_shotgunbrass" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "debris_shrapnel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "delta_betruger" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "delta_cin_hazguy" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "delta_cin_hk" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "delta_cin_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "delta_cin_player_start" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "delta_cin_teleporter" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "delta_hazguy" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "delta_hkintro_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "delta_scipull" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "delta_wounded_swann" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltaa_cin_fatty" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltaa_commando" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltaa_fatty" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltaa_imp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltaa_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltaa_player_scientist" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltaa_sci_tele_hell_visions_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltaa_scientist" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltaa_scientist_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltaa_scientist_return" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltaa_teleporter" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltaa_teleporter_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltaa_zombie_office" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltab_hazmat" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltab_imp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltab_keycardzombie" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltab_tankimp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltab_tankimpwires" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltab_tankrev" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltab_tankrevwires" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltab_waterwires" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltax_doorframe_pinkyattack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "deltax_railing_pinkyattack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ending_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ending_debris" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_campbell" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_cin_female" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_cin_lostsoul" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_cin_machinegun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_cin_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_cin_wraith" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_escape_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_exit_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_exit_helmet" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_exit_imp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_glass_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_keycard" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_lost_chair" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_lost_spine" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_lostintro_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_monitor_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_soldier" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_swann" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_tuberide_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_wounded_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_wounded_marine" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "enpro_wounded_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ai_dummy" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_airlockdoor" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_bfg_overcharge" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_bfgcase" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_cage_corpse" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_crane" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_craneplatform_caverns" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_dxp_vehicle" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_evilmeat" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_gibs_leftarm" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_gibs_leftleg" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_gibs_rtlolegstump" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_gibs_rtuplegstump" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_gibs_ruparmstub" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_gibs_spine" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_gibs_torso" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_grenade_explodeinhand" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_harvest" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_harvest_default" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_harvest_hazmat" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_harvest_lab" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_harvest_maint" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_harvest_marine" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_hellchain" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_hellpuzzle_smoke" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_inviso" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_lamp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_lostsoul_fx" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_pcellgen" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_pcellgen_single" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_phobos_bridge" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_archvile" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_boney" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_cherub" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_commando" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_fatty" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_gibbable_base" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_hazmat" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_hellknight" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_imp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_lab" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_maint" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_marine" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_marine_helmet" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_marine_stump" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_marine_stump_gib" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_mummy" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_mummy_fixed" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_pinky" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_poppy" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_revenant" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_sentry" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_skeleton" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_suit" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_zmaint" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_zscientist" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_zsecm" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_zsecm_xray" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_zsecp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_ragdoll_zsecs" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_storagecabinet" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_storagecabinet_openback" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_swinglight_long_wbulbs" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_swinglight_long_wbulbs_" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_swinglight_long_wbulbs_fixed" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_swinglight_round" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_swinglight_sl" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_swinglight_sl_fixed" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "env_xianbutton_" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "envirosuit_light" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_ai_dummy" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_bottech" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cinematic_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cinematic_cam_death" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cinematic_camera" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cinematic_hunter" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cinematic_hunterdeath" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cinematic_imp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cinematic_marine_gravitygun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cinematic_marine_gravitygun_end" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cinematic_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cinematic_player_end" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cinematic_player_fill" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cinematic_player_start" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cinematic_player_vulgarintro" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cinematic_wall" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cloud_cinematic" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cloud_cinematic_camera_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_cloud_player_cinematic" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_dying_marine" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_envirosuit_off_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_envirosuit_on_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_envirosuit_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_fan_npc" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_ggun_marine_die" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_hunterintro_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_intro_camera" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_intro_camera_p" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_intro_detonate" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_intro_flash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_intro_flash_for_roq" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_intro_marine" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_intro_marine_for_roq" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_intro_mcneil" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_intro_pda" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_intro_pda_for_roq" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_intro_plyr_heart" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_intro_plyr_heart_p" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_intro_plyr_helmet" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_intro_rocks" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_intro_scientist" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_mcneil_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_mcneil_fem" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_rocks_p" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_scientist" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_scientist_cloud" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_spooked" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_technician" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_transform_npc" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_trapped_npc" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_vulgarintro_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "erebus_wall_explode" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_aas_obstacle" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_aas_portal" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_activator" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_animate" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_beam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_bobbing" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_cameratarget" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_cameraview" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_clipmodel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_damagable" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_damage" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Door (#$osim:BindingFn "func_door" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_earthquake" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_elevator" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_emitter" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_explosion" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_forcefield" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_fracture" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_fx" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_group" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_itemremove" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_mountedobject" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_mover" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_mover_amodel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_pendulum" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_phantom_objects" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_plat" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_portal" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_radiochatter" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_remove" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_riser" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_rotating" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_securitycamera" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_shaking" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_shockwave" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_smoke" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_splat" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_splinemover" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_static" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "func_teleporter" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "guardian_poundground_explosion" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "harvest_shockwave" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hell_cin_guardian" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hell_cin_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hell_guardiandeath_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hell_guardianintro_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hell_intro_cinematic_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hell_lstep" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hell_maledict_intro_cinematic" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hell_player_maledict_intro" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hell_rstep" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hell_soulcube" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hellhole_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hellhole_cin_cyberdemon" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hellhole_cin_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hellhole_coffinbricks" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hellhole_cyberbricks" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hellhole_cyberdeathrocks" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hellhole_imp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hellhole_maggot" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hellhole_soulcube" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hellhole_walkmarine" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hunter_invul_melee_inv" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hunter_invul_melee_normal" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hunter_invulnerability_electroblast_attack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "hunter_invulnerability_pound_attack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "info_location" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "info_locationseparator" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "info_player_deathmatch" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "info_player_start" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "info_player_teleport" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "info_portalsky" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "info_vacuum" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "info_vacuumseparator" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "intro_scientist" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "invul_electricwall" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_aircannister" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_armor_security" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_armor_security_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_armor_shard" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_armor_shard_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_artifact_tablet" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_backpack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_default" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_deploycd" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_envirosuit" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_envirotank" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_generatorcd" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_generic" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_grabbercd" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_key_blue" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_key_yellow" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_keycard_aco" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_keycard_generic" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$MedicalDevice (#$osim:BindingFn "item_medkit_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$MedicalDevice (#$osim:BindingFn "item_medkit_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$MedicalDevice (#$osim:BindingFn "item_medkit_small_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_objective" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_objectivecomplete" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_pda" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_powercell" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_team_default" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "item_videocd" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "light" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_death_cinematic" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_death_cinematic_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_death_cinematic_split" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_death_player_heart" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_death_player_heart_flyin" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_death_player_rocket" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_death_player_run" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_death_player_turnrun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_death_skull" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_death_skull_smoke" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_flamewall" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_flamewall_base" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_flamewall_sound" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_heart_cinematic_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_heart_closeup_cinematic_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_heart_flyin_cinematic_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_intro_cinematic" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_intro_cinematic_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_rocket_cinematic_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "maledict_smoke" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_char_maint_asian_pda" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_cin_fatty" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_cin_imp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_cinematic_betruger" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_cinematic_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_cinematic_campbell" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_cinematic_doctor" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_cinematic_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_cinematic_sarge" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_cinematic_security" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_cinematic_swann" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_cinematic_victim" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_civilian" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_civilian_bathroom" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_civilian_hallway" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_civilian_kitchen" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_dufflebag" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_hallway_marine" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_hallway_zombie" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_hangar" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_hangar_campbell" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_hangar_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_hangar_swann" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_imp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_labcoat_black" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_labcoat_monitor" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_labcoat_young" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_maint_ceiling" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_maint_hallway" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_marine_helmet_p_directions_ver" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_marine_helmet_p_walking" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_meeting_betruger" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_meeting_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_reception_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_receptionist" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_receptionist_start" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_sec_checkin" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_sec_window" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_security_goggles_pda" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_security_machinegun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_ship" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_smallpda" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_soldier_bald_pda" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_soldier_black" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_soldier_young_pda" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_suit_asian_chair" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_suit_young" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_suit_young_chair" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_walking_swann" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "marscity_zombie_morgue" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_archleftclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_archrightclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_cacodemon" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_cherubleapattack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_cherubleftclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_cherubrightclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_commando_left" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_commando_push" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_commando_right" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_commandotentacle" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_cyberdemon_kick" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_forgotten" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_forgotten_charge" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_hellknight_bite" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_hellknightleftclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_hellknightrightclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_helltime" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_hunter_berserk_attack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_hunter_berserk_attack_left" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_hunter_berserk_attack_right" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_hunter_berserk_chargeattack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_impleapattack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_impleftclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_imprightclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_lostsoul" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_lostsoul_charge" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_maggotleapattack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_magleftclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_magrightclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_mancubus_stomp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_pinky_back" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_pinky_left" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_pinky_right" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_revenant" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_revenant_left" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_revenant_left_down" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_revenant_right" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_revenant_right_down" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_revleftclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_revrightclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_sabaoth" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_tritebite" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_triteleapattack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_vagleftclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_vagrightclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_vulgarleapattack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_vulgarleftclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_vulgarrightclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_wraithcenterattack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_wraithleftclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_wraithrightclaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_zombie_chainsaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_zombie_fat_left" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_zombie_fat_right" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_zombie_fat_right_wrench" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_zombie_maint_left" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_zombie_maint_pull" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_zombie_maint_push" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_zombie_maint_right" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_zombie_zfem_left" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "melee_zombie_zfem_right" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monorail_crash_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monorail_crash_debris" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monorail_crashsight_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monorail_raisecommando_betruger" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monorail_raisecommando_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monorail_raisecommando_changer" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monorail_raisecommando_marine" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monorail_raisecommando_zct" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monorail_rider" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_boss_cyberdemon" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_boss_dxp_maledict" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_boss_guardian" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_boss_guardian_seeker" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_boss_guardian_spawner" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_boss_maledict_cinematic" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_boss_sabaoth" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_boss_vagary" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_default" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_demon_archvile" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_demon_cherub" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_demon_hellknight" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_demon_imp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_demon_imp_crawl_armdoor" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_demon_imp_crawler" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_demon_imp_dxp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_demon_maggot" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_demon_mancubus" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_demon_pinky" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_demon_revenant" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_demon_tick" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_demon_trite" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_demon_trite_jump" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_demon_wraith" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_demon_wraith_dxp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_dummy_target" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_flying_cacodemon" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_flying_forgotten" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_flying_lostsoul" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_hunter_berzerk" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_hunter_helltime" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_hunter_invul" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_turret" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_turret_ancient" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_turret_light" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_base" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_bernie" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_boney" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_commando" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_commando_cgun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_fat" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_fat_wrench" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_fat_xray" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_hazmat" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_hellgrowth" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_jumpsuit" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_labcoat_limb" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_labcoat_neckstump" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_labcoat_pipe" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_labcoat_skinny" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_maint" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_maint_bald" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_maint_fast" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_maint_fast_xray" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_maint_flashlight" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_maint_no_jaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_maint_nojaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_maint_skinny" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_maint_wrench" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_maint_xray" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_morgue" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_sawyer" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_suit_bloodymouth" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_suit_neckstump" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_suit_skinny" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_tshirt_bald" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_tshirt_blown" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zombie_zfem" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zsec_machinegun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zsec_machinegun_xray" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zsec_pistol" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zsec_pistol_slowfire" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zsec_shield" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zsec_shotgun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "monster_zsec_shotgun_xray" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_ammo_belt_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_ammo_bfg_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_ammo_bullets_large" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_ammo_bullets_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_ammo_cells_large" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_ammo_cells_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_ammo_clip_large" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_ammo_clip_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_ammo_grenade_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_ammo_rockets_large" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_ammo_rockets_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_ammo_shells_large" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_ammo_shells_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_ancient_buzz_blade" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_ancient_staff" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_barrel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_barrel_lid" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_barrelv" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_barrelvb" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_base" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_base_barrel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_base_brick" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_base_fixed" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_berserkerbox" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_blaptop" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_bot_tech_bag" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_bottle" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_burger" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_burgerboxclose" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_burgerboxopen" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_burningbarrel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_burningtank" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_cannister" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_cartonbox" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_chair" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_cokecan" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_compcart" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_computer" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_cone" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_deadsentry_body" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_deadsentry_head" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_deadsentry_leg" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_desklamp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_diamondbox" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_diamondbox_sm" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_dxp_bench" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_dxp_lamp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_explodingbarrel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_explodingtank" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_filecabinet" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_fireext" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_foamcup" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_gizmo" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_guardian_brick" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_hangingmonitor" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_infusion" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_aircannister" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_armor_security" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_armor_shard" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_backpack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_bfg" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_bfg_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_chaingun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_chaingun_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_chainsaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_chainsaw_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_default" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_envirotank" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_flashlight" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_grenades" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_grenades_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_head_pork" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_helmet" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_lantern" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_lantern_world" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_left_waist_pork" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_lup_leg_pork" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_machinegun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_machinegun_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollection #$MedicalDevice (#$osim:BindingFn "moveable_item_medkit" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_medkit_small" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_pda" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_pelvis_pork" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_pistol" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_pistol_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_plasmagun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_plasmagun_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_rocketlauncher" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_rocketlauncher_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_rup_arm_pork" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_rup_leg_pork" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_shield" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_shotgun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_shotgun_double" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_shotgun_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_skelgib_bone" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_skelgib_rib" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_skelgib_skull" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_skull_pork" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_item_torso_pork" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_jackhammer" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_keyboard" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_kitchenchair" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_ktable" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_laptop" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_marine_helmet" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_metalbox" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_microscope" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_monitor" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_monitorflip" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_mop" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_mopbucket" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_notakeg" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_paperwad" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_pc" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_pickaxe" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_plasticbin" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_plasticbinmini" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_plasticjar" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_player_helmet" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_powerup_adrenaline" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_rubble_" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_shovel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_spigotcan" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_tablecart" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$WasteBasket (#$osim:BindingFn "moveable_trashcan" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "moveable_wrench" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "npc_base" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "npc_harvest_test" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "npcgroup_cinematic_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "npcgroup_cinematic_scientist" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_anim" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_attack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_conversation" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_conversation_listen" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_corner" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_cycleanim" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_default" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_headanim" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_hide" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_jump" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_lookat" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_sentry_ignore_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_sentry_lead_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_sentry_light_off" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_sentry_light_on" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_sentry_shutdown" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_sentry_unlock_door" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_talk" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_talk_primary" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_talk_secondary" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_talk_triggered" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_turn" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_wait" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_waitforheadanim" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "path_waitfortrigger" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "pda_alphalabs_fragchamber_scientist" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "pda_alphalabs_labcoat_bald" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "pda_erebus_ron_gibbons_pda" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "pda_marscity_char_maint_asian_pda" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "pda_marscity_labcoat_black" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "pda_marscity_maint_hallway" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "pda_marscity_security_goggles_pda" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "pda_marscity_soldier_bald_pda" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "pda_marscity_soldier_black" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "pda_marscity_soldier_young_pda" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "pda_underground_maint_young_daniel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "pda_underground_security_helmet_mark" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_ai_dummy" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_cinematic_hunterdeath" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_cinematic_inv_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_cinematic_mcneil" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_cinematic_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_cinematic_player_death" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_hellknight" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_hunterintro" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_hunteroutro" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_marine" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_mcneil_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_mcneil_camera" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_mcneil_chair" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_mcneil_chair_cine" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_mcneil_fem" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_mcneil_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_mcneil_typing" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "phobos_tram" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "player_base" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "player_base_dxp_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "player_base_dxp_sp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "player_osimmarine" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "player_osimmarine_ctf" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "player_osimmarine_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "player_greenarmor_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "player_id_base" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "player_jumpsuit_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "player_labcoat_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "player_security_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "player_suit_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "player_tshirt_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "powerup_adrenaline" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "powerup_berserk" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "powerup_invisibility" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "powerup_invulnerability" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "powerup_megahealth" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "precacheextras" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_bfg" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_bfg_cinematic" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_bfg_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_bullet_char_soldier_machinegun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_bullet_machinegun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_bullet_machinegun_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_bullet_pistol" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_bullet_pistol_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_bullet_shotgun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_bullet_shotgun_double" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_bullet_shotgun_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_bullet_turret" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_bullet_zsec_machinegun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_bullet_zsec_pistol" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_bullet_zsec_shield" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_bullet_zsec_shotgun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_cacodemon_fireball" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_chaingunbullet" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_chaingunbullet_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_cyber_rocket" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_fireball_berzerker" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_fireball_hellknight" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_fireball_invul" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_fireball_invul_guided" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_grenade" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_grenade_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_guardian_smash" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_helltime_killer" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_helltimefireball" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_impfireball" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_maledict_asteroid" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_maledict_asteroid_huge" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_maledict_fireball" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_mancubus_rocket" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_plasmablast" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_plasmablast_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_plasmatracer" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_powerball_guided" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_rev_rocket" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_rev_rocket_cinematic" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_rocket" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_rocket_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_sabaoth_bfg" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_sentry_bullet" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_soulblast" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_vulgar_fireball" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "projectile_zombie_commando_cgun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "prop_adrenaline" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "prop_dufflebag" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "prop_foamcup" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "prop_lftflashlight" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "prop_lftflashlight_right" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "prop_machinegun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "prop_metal_lounge_chair" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "prop_pistol" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "prop_soft_desk_chair" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "prop_wrench" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "recycling_imp_cin" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "recycling_mancintro_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "recycling_mancintro_manc" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "recycling_mancintro_pipes" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "recycling_mancintro_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "recycling_revintro_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "recycling_revintro_impact" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "recycling_revintro_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "recycling_revintro_rev" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "recycling_skybridge" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "ronn_cinematic_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "seeker_light" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "shockwave_electroblast" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "shockwave_pound_attack" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "site_floor" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "site_hellknight" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "site_sci" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "sound_ddm_generator" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "sound_ddm_wind" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "sound_fragchamber_berserk" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "sound_fragchamber_klaxon" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "sound_fragchamber_lights" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "sound_fragchamber_secretsteam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "sound_powerup_berserk" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "speaker" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "static_hunter" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_ai_followalternatepath" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_callobjectfunction" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_enablestamina" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_enableweapons" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_endlevel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_entity_fadein" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_entity_fadeout" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_entity_setcolor" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_fadesoundclass" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_giveemail" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_givesecurity" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_leveltrigger" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_light_fadein" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_light_fadeout" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_lock" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_npc_talk" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_npc_talk_primary" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_npc_talk_secondary" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_npc_talk_triggered" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_null" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_primaryobjective" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_removeweapons" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_setglobalparmtime" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_setinfluence" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_setkeyval" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_setmodel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_setshaderparm" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_setshadertime" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_show" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "target_tip" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "team_ctf_blueflag" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "team_ctf_blueflag_nugget" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "team_ctf_redflag" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "team_ctf_redflag_nugget" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "teleport_shockwave" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "text" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "trigger_count" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "trigger_ctf_blueflag" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "trigger_ctf_flag_default" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "trigger_ctf_nodrop" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "trigger_ctf_redflag" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "trigger_entityname" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "trigger_facing" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "trigger_fade" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "trigger_flashlight" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "trigger_hurt" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "trigger_multiple" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "trigger_once" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "trigger_once_entityname" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "trigger_relay" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "trigger_timer" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "trigger_touch" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_cin_pistol" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_cin_player" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_crazy_sci" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_crazy_sci_cin" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_crazy_zombie" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_fatty" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_hallway_skulls" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_impcrawl_door" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_impintro_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_impintro_imp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_impstairs" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_invasion_cam" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_invasion_chestskull" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_invasion_labcoat" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_invasion_labzombie" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_invasion_maintzombie" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_labcoat_young_todd" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_maint_asian_eric" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_maint_bald_ross" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_maint_old_charles" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_maint_young_daniel" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_platform" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_security_helmet_mark" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_tunnel_imp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_window_security" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_zombie_maint_bald" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "underground_zsecshotgun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_bfg" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_bfg_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_bloodstone_active" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_bloodstone_passive" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_chaingun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_chaingun_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_chainsaw" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_chainsaw_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_fists" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_flashlight" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_grabber" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_handgrenade" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_handgrenade_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_machinegun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_machinegun_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_pda" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_pistol" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_pistol_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_plasmagun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_plasmagun_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_rocketlauncher" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_rocketlauncher_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_shotgun" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_shotgun_double" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_shotgun_double_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_shotgun_mp" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "weapon_soulcube" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "worldspawn" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "wraith_spawneffect" "classname")) #$osim:VocabularyMt)
(cyc-assert '(#$osim:gameCollectionImplied #$Thing (#$osim:BindingFn "zombie_default" "classname")) #$osim:VocabularyMt)


