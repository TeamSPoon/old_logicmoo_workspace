(find-or-create-constant "osim:SituationMt")
(cyc-assert '(#$isa #$osim:SituationMt #$DataMicrotheory) #$UniversalVocabularyMt)
(find-or-create-constant "BoundsOfDirectionFn")
;load file '10.kif'
;load file '10.kif.txt'
;load file '10.mob'
;; Sourcing Mob File C:\osim3\src\daxmoo\worlds\10.mob
;; mob #1000
(find-or-create-constant "NpcCol1000")
(cyc-assert '(#$isa #$NpcCol1000 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1000 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$webSearchableStrings #$NpcCol1000 "Lieutenant") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1000 "Commander") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1000 "Geordi") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1000 "LaForge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$nameString #$NpcCol1000 "Geordi LaForge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$osim:descriptionStrings #$NpcCol1000 "Lieutenant Commander Geordi LaForge is standing here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1000 "Geordi is the Chief Engineer of the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1000 "He's <br>blind, so he wears a special VISOR that lets him see <br>things") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1000 "ACT_STAY_ZONE") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1000 "MEMORY") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1000 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1000 "HELPER") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1000 "ACT_FRIEND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1000 #$HelpingAnAgent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1000 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1000 "NOCHARM") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1000 #$InfluencingAnAgent #$recipientOfInfo) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1000 "NOBASH") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1000 #$IncurringPhysicalDamage #$damages) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1000 "NOBLIND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1000 "NPC_DETECT_INVIS") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1000 "NPC_NOTRACK") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1000(#$MediumAmountFn #$Goodness-Moral)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1000 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1000 "+mudToHitArmorClass0: 3") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1000 #$HighAmountFn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1000 "mudMaxHitPoints: 12d12+3200") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1000 "#$PunchingSomething mudBareHandDamage: 9d9+42") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$netWorth #$NpcCol1000(#$USDollarFn 75000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1000 #$IntentionalMentalEvent #$Effectiveness #$mediumAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1000 #$UprightPosture)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$NpcCol1000 #$MaleAnimal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1001
(find-or-create-constant "NpcCol1001")
(cyc-assert '(#$isa #$NpcCol1001 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1001 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$webSearchableStrings #$NpcCol1001 "Lieutenant") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1001 "Commander") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1001 "Data") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1001 "Android") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$nameString #$NpcCol1001 "Data") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$osim:descriptionStrings #$NpcCol1001 "Lieutenant Commander Data is here, trying to be more human") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1001 "Data is the only android on the Enterprise, and the only <br>android in all of Starfleet") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1001 "He possesses super-human <br>strength, and is extremely tough") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "ACT_NICE_THIEF") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "AWARE") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "NOBACKSTAB") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "ACT_STAY_ZONE") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "MEMORY") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1001 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "HELPER") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "ACT_FRIEND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1001 #$HelpingAnAgent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1001 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "NOCHARM") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1001 #$InfluencingAnAgent #$recipientOfInfo) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "NOSUMMON") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1001 #$CoercingAnAgentToMove #$objectMoving) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "NOSLEEP") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1001 #$Sleeping #$bodilyDoer) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "NOBASH") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1001 #$IncurringPhysicalDamage #$damages) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "NOBLIND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "NPC_DETECT_INVIS") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "NPC_NOTRACK") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1001(#$MediumAmountFn #$Goodness-Moral)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1001 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "+mudToHitArmorClass0: 1") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1001 #$VeryHighAmountFn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "mudMaxHitPoints: 18d18+4000") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1001 "#$PunchingSomething mudBareHandDamage: 10d10+75") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$netWorth #$NpcCol1001(#$USDollarFn 125000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1001 #$IntentionalMentalEvent #$Effectiveness #$veryHighAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1001 #$UprightPosture)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$NpcCol1001 #$MaleAnimal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1002
(find-or-create-constant "NpcCol1002")
(cyc-assert '(#$isa #$NpcCol1002 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1002 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$webSearchableStrings #$NpcCol1002 "Lieutenant") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1002 "Worf") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1002 "Klingon") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$nameString #$NpcCol1002 "Lieutenant Worf") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$osim:descriptionStrings #$NpcCol1002 "Lieutenant Worf is here, looking pretty mean") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1002 "Worf is the first Klingon to have joined Starfleet") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1002 "He's <br>Chief of Security of the Enterprise, and he's plenty <br>strong") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1002 "ACT_STAY_ZONE") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1002 "MEMORY") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1002 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1002 "HELPER") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1002 "ACT_FRIEND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1002 #$HelpingAnAgent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1002 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1002 "NOCHARM") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1002 #$InfluencingAnAgent #$recipientOfInfo) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1002 "NOBASH") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1002 #$IncurringPhysicalDamage #$damages) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1002 "NOBLIND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1002 "NPC_DETECT_INVIS") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1002 "NPC_NOTRACK") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1002(#$MediumAmountFn #$Goodness-Moral)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1002 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1002 "+mudToHitArmorClass0: 2") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1002 #$HighToVeryHighAmountFn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1002 "mudMaxHitPoints: 12d12+3400") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1002 "#$PunchingSomething mudBareHandDamage: 9d9+60") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$netWorth #$NpcCol1002(#$USDollarFn 10000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1002 #$IntentionalMentalEvent #$Effectiveness #$mediumToVeryHighAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1002 #$UprightPosture)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$NpcCol1002 #$MaleAnimal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1003
(find-or-create-constant "NpcCol1003")
(cyc-assert '(#$isa #$NpcCol1003 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1003 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$webSearchableStrings #$NpcCol1003 "Doctor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1003 "Beverly") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1003 "Crusher") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$nameString #$NpcCol1003 "Doctor Crusher") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$osim:descriptionStrings #$NpcCol1003 "Lieutenant Beverly Crusher is here, looking for someone to heal") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1003 "Doctor Crusher is the Enterprise's Chief Medical Officer") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1003 "Wesley <br>is her son") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1003 "Her husband was killed years ago in an accident <br>on another starship which was also commanded by Captain Picard") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1003 "ACT_STAY_ZONE") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1003 "MEMORY") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1003 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1003 "HELPER") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1003 "ACT_FRIEND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1003 #$HelpingAnAgent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1003 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1003 "NOCHARM") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1003 #$InfluencingAnAgent #$recipientOfInfo) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1003 "NOBASH") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1003 #$IncurringPhysicalDamage #$damages) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1003 "NOBLIND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1003 "NPC_DETECT_INVIS") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1003 "NPC_NOTRACK") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1003(#$MediumAmountFn #$Goodness-Moral)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1003 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1003 "+mudToHitArmorClass0: 3") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1003 #$HighAmountFn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1003 "mudMaxHitPoints: 12d12+3200") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1003 "#$PunchingSomething mudBareHandDamage: 9d9+42") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$netWorth #$NpcCol1003(#$USDollarFn 75000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1003 #$IntentionalMentalEvent #$Effectiveness #$mediumAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1003 #$UprightPosture)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$NpcCol1003 #$FemaleAnimal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1004
(find-or-create-constant "NpcCol1004")
(cyc-assert '(#$isa #$NpcCol1004 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1004 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$webSearchableStrings #$NpcCol1004 "Counselor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1004 "Deanna") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1004 "Troi") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$nameString #$NpcCol1004 "Counselor Troi") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$osim:descriptionStrings #$NpcCol1004 "Counselor Deanna Troi is here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1004 "Counselor Troi is the ship's main counselor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1004 "She's half <br>betazoid, which means that she can read people's minds") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1004 "ACT_STAY_ZONE") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1004 "MEMORY") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1004 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1004 "HELPER") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1004 "ACT_FRIEND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1004 #$HelpingAnAgent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1004 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1004 "NOCHARM") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1004 #$InfluencingAnAgent #$recipientOfInfo) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1004 "NOBASH") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1004 #$IncurringPhysicalDamage #$damages) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1004 "NOBLIND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1004 "NPC_DETECT_INVIS") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1004 "NPC_NOTRACK") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1004(#$MediumAmountFn #$Goodness-Moral)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1004 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1004 "+mudToHitArmorClass0: 3") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1004 #$HighAmountFn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1004 "mudMaxHitPoints: 12d12+3200") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1004 "#$PunchingSomething mudBareHandDamage: 9d9+42") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$netWorth #$NpcCol1004(#$USDollarFn 75000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1004 #$IntentionalMentalEvent #$Effectiveness #$mediumAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1004 #$UprightPosture)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$NpcCol1004 #$FemaleAnimal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1005
(find-or-create-constant "NpcCol1005")
(cyc-assert '(#$isa #$NpcCol1005 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1005 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$webSearchableStrings #$NpcCol1005 "Commander") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1005 "William") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1005 "Riker") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$nameString #$NpcCol1005 "Commander Riker") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$osim:descriptionStrings #$NpcCol1005 "Commander William Riker is here, staring at you") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1005 "Commander Riker is the Enterprise's first officer") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1005 "He's <br>in charge of keeping the crew in line") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1005 "ACT_STAY_ZONE") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1005 "MEMORY") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1005 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1005 "HELPER") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1005 "ACT_FRIEND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1005 #$HelpingAnAgent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1005 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1005 "NOCHARM") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1005 #$InfluencingAnAgent #$recipientOfInfo) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1005 "NOBASH") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1005 #$IncurringPhysicalDamage #$damages) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1005 "NOBLIND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1005 "NPC_DETECT_INVIS") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1005 "NPC_NOTRACK") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1005(#$MediumAmountFn #$Goodness-Moral)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1005 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1005 "+mudToHitArmorClass0: 2") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1005 #$HighToVeryHighAmountFn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1005 "mudMaxHitPoints: 12d12+3200") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1005 "#$PunchingSomething mudBareHandDamage: 9d9+52") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$netWorth #$NpcCol1005(#$USDollarFn 75000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1005 #$IntentionalMentalEvent #$Effectiveness #$mediumToVeryHighAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1005 #$UprightPosture)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$NpcCol1005 #$MaleAnimal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1006
(find-or-create-constant "NpcCol1006")
(cyc-assert '(#$isa #$NpcCol1006 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1006 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$webSearchableStrings #$NpcCol1006 "Captain") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1006 "Jean") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1006 "Luc") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1006 "Jean-Luc") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1006 "Picard") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$nameString #$NpcCol1006 "Captain Picard") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$osim:descriptionStrings #$NpcCol1006 "Captain Jean-Luc Picard is standing here, watching you") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1006 "Captain Picard is a very important man") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1006 "He's in charge of <br>Starfleet's flagship, the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1006 "He's very smart, and <br>very wise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1006 "Don't mess with him!") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "ACT_NICE_THIEF") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "AWARE") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "NOBACKSTAB") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "ACT_STAY_ZONE") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "MEMORY") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1006 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "HELPER") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "ACT_FRIEND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1006 #$HelpingAnAgent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1006 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "NOCHARM") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1006 #$InfluencingAnAgent #$recipientOfInfo) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "NOSUMMON") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1006 #$CoercingAnAgentToMove #$objectMoving) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "NOSLEEP") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1006 #$Sleeping #$bodilyDoer) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "NOBASH") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1006 #$IncurringPhysicalDamage #$damages) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "NOBLIND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "NPC_DETECT_INVIS") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "NPC_SANCTUARY") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "NPC_NOTRACK") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1006(#$MediumAmountFn #$Goodness-Moral)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1006 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "+mudToHitArmorClass0: 0") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1006 #$VeryHighAmountFn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "mudMaxHitPoints: 20d20+5000") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1006 "#$PunchingSomething mudBareHandDamage: 12d12+75") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$netWorth #$NpcCol1006(#$USDollarFn 750000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1006 #$IntentionalMentalEvent #$Effectiveness #$veryHighAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1006 #$UprightPosture)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$NpcCol1006 #$MaleAnimal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1007
(find-or-create-constant "NpcCol1007")
(cyc-assert '(#$isa #$NpcCol1007 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1007 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$webSearchableStrings #$NpcCol1007 "Guinan") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$nameString #$NpcCol1007 "Guinan") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$osim:descriptionStrings #$NpcCol1007 "Guinan is here, tending the bar") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1007 "Guinan is a strange being") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1007 "She's lived for thousands of <br>years and experienced many things, but now she's decided <br>to work on the Enterprise as a bartender") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1007 "ACT_SENTINEL") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$LeavingAPlace #$NpcCol1007 #$bodilyDoer #$Never) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1007 "ACT_STAY_ZONE") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1007 "MEMORY") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1007 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1007 "HELPER") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1007 "ACT_FRIEND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1007 #$HelpingAnAgent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1007 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1007 "NOCHARM") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1007 #$InfluencingAnAgent #$recipientOfInfo) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1007 "NOBASH") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1007 #$IncurringPhysicalDamage #$damages) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1007 "NOBLIND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1007 "NPC_DETECT_INVIS") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1007 "NPC_NOTRACK") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1007(#$MediumAmountFn #$Goodness-Moral)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1007 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1007 "+mudToHitArmorClass0: 4") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1007 #$MediumToVeryHighAmountFn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1007 "mudMaxHitPoints: 12d12+2600") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1007 "#$PunchingSomething mudBareHandDamage: 9d9+36") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$netWorth #$NpcCol1007(#$USDollarFn 50000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1007 #$IntentionalMentalEvent #$Effectiveness #$mediumAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1007 #$UprightPosture)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$NpcCol1007 #$FemaleAnimal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1008
(find-or-create-constant "NpcCol1008")
(cyc-assert '(#$isa #$NpcCol1008 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1008 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$webSearchableStrings #$NpcCol1008 "Chief") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1008 "O'Brien") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1008 "Transporter") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$nameString #$NpcCol1008 "Chief O'Brien") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$osim:descriptionStrings #$NpcCol1008 "Chief O'Brien is here, waiting to teleport you somwhere") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1008 "Chief O'Brien is the transporter chief on the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1008 "It's <br>his job to make sure everyone arrives(and leaves) in one <br>piece, instead of trillions of atoms") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1008 "ACT_SENTINEL") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$LeavingAPlace #$NpcCol1008 #$bodilyDoer #$Never) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1008 "ACT_STAY_ZONE") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1008 "MEMORY") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1008 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1008 "HELPER") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1008 "ACT_FRIEND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1008 #$HelpingAnAgent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1008 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1008 "NOCHARM") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1008 #$InfluencingAnAgent #$recipientOfInfo) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1008 "NOBASH") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1008 #$IncurringPhysicalDamage #$damages) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1008 "NOBLIND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1008 "NPC_DETECT_INVIS") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1008 "NPC_NOTRACK") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1008(#$MediumAmountFn #$Goodness-Moral)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1008 #$SingleDoerAction #$Effectiveness #$veryHighAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1008 "+mudToHitArmorClass0: 4") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1008 #$MediumToVeryHighAmountFn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1008 "mudMaxHitPoints: 12d12+2600") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1008 "#$PunchingSomething mudBareHandDamage: 9d9+36") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$netWorth #$NpcCol1008(#$USDollarFn 50000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1008 #$IntentionalMentalEvent #$Effectiveness #$mediumAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1008 #$UprightPosture)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$NpcCol1008 #$MaleAnimal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1009
(find-or-create-constant "NpcCol1009")
(cyc-assert '(#$isa #$NpcCol1009 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1009 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$webSearchableStrings #$NpcCol1009 "Wesley") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1009 "Crusher") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$nameString #$NpcCol1009 "Wesley") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$osim:descriptionStrings #$NpcCol1009 "Wesley Crusher is here, eagerly trying to earn your praise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1009 "Wesley Crusher is not even an official officer, but he serves <br>as an acting Ensign on the bridge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1009 "He got this position only <br>because Captain Picard feels guilty about killing his father") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1009 "ACT_STAY_ZONE") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1009 "ACT_WIMPY") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1009 "wimpy mobile will try to flee when it gets low on hit points. A mobile which is both aggressive and wimpy will not attack a player that is awake.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1009 "MEMORY") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1009 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1009 "HELPER") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1009 "ACT_FRIEND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1009 #$HelpingAnAgent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1009 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1009 "NOCHARM") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1009 #$InfluencingAnAgent #$recipientOfInfo) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1009 "NOBASH") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1009 #$IncurringPhysicalDamage #$damages) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1009 "NOBLIND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1009 "NPC_DETECT_INVIS") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1009 "NPC_NOTRACK") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1009(#$MediumAmountFn #$Goodness-Moral)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1009 #$SingleDoerAction #$Effectiveness #$mediumToVeryHighAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1009 "+mudToHitArmorClass0: 6") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1009 #$LowAmountFn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1009 "mudMaxHitPoints: 12d12+1400") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1009 "#$PunchingSomething mudBareHandDamage: 9d9+24") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$netWorth #$NpcCol1009(#$USDollarFn 18000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1009 #$IntentionalMentalEvent #$Effectiveness #$veryLowToLowAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1009 #$UprightPosture)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$NpcCol1009 #$MaleAnimal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1010
(find-or-create-constant "NpcCol1010")
(cyc-assert '(#$isa #$NpcCol1010 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1010 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$webSearchableStrings #$NpcCol1010 "Livingston") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1010 "fish") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$nameString #$NpcCol1010 "Livingston") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$osim:descriptionStrings #$NpcCol1010 "Livingston the fish is here, swimming about in his tank") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1010 "Livingston is Captain Picard's pet fish") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1010 "He's some sort of <br>exotic breed, and he's expensive to feed and keep alive") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1010 "ACT_SENTINEL") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$LeavingAPlace #$NpcCol1010 #$bodilyDoer #$Never) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1010 "ACT_STAY_ZONE") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1010 "MEMORY") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1010 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1010 "HELPER") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1010 "ACT_FRIEND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1010 #$HelpingAnAgent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1010 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1010 "NOCHARM") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1010 #$InfluencingAnAgent #$recipientOfInfo) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1010 "NPC_DETECT_INVIS") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1010 "NPC_NOTRACK") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1010(#$MediumAmountFn #$Goodness-Moral)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1010 #$SingleDoerAction #$Effectiveness #$mediumAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1010 "+mudToHitArmorClass0: 6") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1010 #$NoAmountFn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1010 "mudMaxHitPoints: 12d12+800") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1010 "#$PunchingSomething mudBareHandDamage: 9d9+14") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$netWorth #$NpcCol1010(#$USDollarFn 5000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1010 #$IntentionalMentalEvent #$Effectiveness #$veryLowToLowAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1010 #$UprightPosture)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$NpcCol1010 #$MaleAnimal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1011
(find-or-create-constant "NpcCol1011")
(cyc-assert '(#$isa #$NpcCol1011 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1011 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$webSearchableStrings #$NpcCol1011 "spot") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1011 "the") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1011 "cat") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$nameString #$NpcCol1011 "Spot") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$osim:descriptionStrings #$NpcCol1011 "Spot, Data's pet cat, is sitting here looking at you") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1011 "Spot is Data's orange coloured cat") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1011 "Data is always trying <br>to become more human, so he thinks that having a pet might <br>help him achieve his goal") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1011 "ACT_SENTINEL") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$LeavingAPlace #$NpcCol1011 #$bodilyDoer #$Never) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1011 "ACT_STAY_ZONE") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1011 "MEMORY") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1011 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1011 "HELPER") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1011 "ACT_FRIEND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1011 #$HelpingAnAgent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1011 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1011 "NOCHARM") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1011 #$InfluencingAnAgent #$recipientOfInfo) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1011 "NPC_DETECT_INVIS") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1011 "NPC_NOTRACK") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1011(#$MediumAmountFn #$Goodness-Moral)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1011 #$SingleDoerAction #$Effectiveness #$mediumAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1011 "+mudToHitArmorClass0: 6") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1011 #$NoAmountFn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1011 "mudMaxHitPoints: 12d12+800") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1011 "#$PunchingSomething mudBareHandDamage: 9d9+14") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$netWorth #$NpcCol1011(#$USDollarFn 5000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1011 #$IntentionalMentalEvent #$Effectiveness #$veryLowToLowAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1011 #$UprightPosture)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$NpcCol1011 #$MaleAnimal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1012
(find-or-create-constant "NpcCol1012")
(cyc-assert '(#$isa #$NpcCol1012 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1012 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$webSearchableStrings #$NpcCol1012 "ensign") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$nameString #$NpcCol1012 "the ensign") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$osim:descriptionStrings #$NpcCol1012 "A nervous looking ensign is standing here, watching you") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1012 "These ensigns make up the backbone of the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1012 "They <br>clean things, do jobs the higher ups won't even consider <br>doing, and get yelled at all the time") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1012 "ACT_STAY_ZONE") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1012 "MEMORY") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1012 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1012 "HELPER") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1012 "ACT_FRIEND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1012 #$HelpingAnAgent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1012 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1012 "NOCHARM") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1012 #$InfluencingAnAgent #$recipientOfInfo) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1012 "NOBASH") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1012 #$IncurringPhysicalDamage #$damages) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1012 "NOBLIND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1012 "NPC_DETECT_INVIS") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1012 "NPC_NOTRACK") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1012(#$MediumAmountFn #$Goodness-Moral)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1012 #$SingleDoerAction #$Effectiveness #$mediumAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1012 "+mudToHitArmorClass0: 6") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1012 #$NoAmountFn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1012 "mudMaxHitPoints: 8d8+1600") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1012 "#$PunchingSomething mudBareHandDamage: 8d8+26") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$netWorth #$NpcCol1012(#$USDollarFn 12000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1012 #$IntentionalMentalEvent #$Effectiveness #$veryLowToLowAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1012 #$UprightPosture)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$NpcCol1012 #$MaleAnimal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob #1013
(find-or-create-constant "NpcCol1013")
(cyc-assert '(#$isa #$NpcCol1013 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1013 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$webSearchableStrings #$NpcCol1013 "alexander") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$NpcCol1013 "rozhenko") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$nameString #$NpcCol1013 "alexander rozhenko") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$osim:descriptionStrings #$NpcCol1013 "Alexander Rozhenko is here, practicing laughing hour") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1013 "Alexander Rozhenko is Worf's son") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1013 "His mother was half human <br>and half Klingon, so Alexander is 3/4 Klingon") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$personalIndentifyingCharacteristic #$NpcCol1013 "He's quite <br>small, but since he's a Klingon he's very strong") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1013 "ACT_STAY_ZONE") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1013 "MEMORY") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$RevengeAction #$NpcCol1013 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1013 "HELPER") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1013 "ACT_FRIEND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorCapable-PerformedBy #$NpcCol1013 #$HelpingAnAgent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$frequencyOfActionType #$ProtectingSomething #$NpcCol1013 #$bodilyDoer #$Often) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1013 "NOCHARM") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1013 #$InfluencingAnAgent #$recipientOfInfo) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1013 "NOBASH") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$typeBehaviorIncapable #$NpcCol1013 #$IncurringPhysicalDamage #$damages) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1013 "NOBLIND") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1013 "NPC_DETECT_INVIS") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1013 "NPC_NOTRACK") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$moralCharacter #$NpcCol1013(#$NoAmountFn #$Goodness-Moral)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1013 #$SingleDoerAction #$Effectiveness #$mediumAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1013 "+mudToHitArmorClass0: 6") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$toughnessOfObject #$NpcCol1013 #$NoAmountFn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1013 "mudMaxHitPoints: 8d8+1600") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$NpcCol1013 "#$PunchingSomething mudBareHandDamage: 8d8+26") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$netWorth #$NpcCol1013(#$USDollarFn 12000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$skillLevel #$NpcCol1013 #$IntentionalMentalEvent #$Effectiveness #$veryLowToLowAmountOf) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possible(#$relationAllInstance #$postureOfAnimal #$NpcCol1013 #$UprightPosture)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$NpcCol1013 #$MaleAnimal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;; mob
;; mob
;load file '10.mob.kif'
;load file '10.mob.txt'
;load file '10.obj'
(find-or-create-constant "ArtifactCol1000")
(cyc-assert '(#$isa #$ArtifactCol1000 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1000 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1000 "standard") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1000 "issue") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1000 "starfleet") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1000 "phaser") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1000 "a standard issue phaser") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1000 "A standard issue Starfleet phaser has been left here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1000 #$Weapon) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1000 #$Weapon) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1000 #$Weapon) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$ArtifactCol1000 "damageNumberDice 5") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$ArtifactCol1000 "damageSizeDice 5") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$ArtifactCol1000 "WeaponBlasting") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$stateOfDevice #$ArtifactCol1000 #$DeviceOn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1000 #$LightingDevice) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1000 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1000 #$Device-SingleUser) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1000 #$SomethingToWear) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1000(#$Kilogram 3)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1000(#$Dollar-UnitedStates 20000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1000(#$DollarsPerDay 500)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1000 "These phasers are the standard weapon of Starfleet officers. It <br>offers decent damage for its fairly small size.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1000 "phaser") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1001")
(cyc-assert '(#$isa #$ArtifactCol1001 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1001 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1001 "phaser") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1001 "rifle") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1001 "a phaser rifle") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1001 "A large phaser rifle is lying here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1001 #$Weapon) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1001 #$Weapon) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1001 #$Weapon) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$ArtifactCol1001 "damageNumberDice 7") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$ArtifactCol1001 "damageSizeDice 6") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$comment #$ArtifactCol1001 "WeaponBlasting") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$stateOfDevice #$ArtifactCol1001 #$DeviceOn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1001 #$LightingDevice) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1001 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1001 #$Device-SingleUser) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1001 #$SomethingToWear) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1001(#$Kilogram 8)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1001(#$Dollar-UnitedStates 40000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1001(#$DollarsPerDay 1000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1001 "This phaser rifle looks pretty powerful. These weapons are used <br>mainly on assault type missions, where power is important.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1001 "phaser") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1001 "rifle") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002")
(cyc-assert '(#$isa #$ArtifactCol1002 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1002 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1002 "burgandy") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1002 "starfleet") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1002 "command") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1002 "uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1002 "a burgandy Starfleet command uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1002 "A neatly folded burgandy Starfleet command uniform is lying here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1002 #$ProtectiveAttire) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1002 "armorLevel: 10") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1002 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn-TypeType #$ArtifactCol1002 #$Trunk-BodyCore) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1002 #$SomethingToWear) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1002(#$Kilogram 5)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1002(#$Dollar-UnitedStates 12000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1002(#$DollarsPerDay 500)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1002 "These uniforms are worn by command officers on Federation <br>starships. It's kind of tight, but it looks pretty good.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1002 "burgandy") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1002 "command") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1002 "uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003")
(cyc-assert '(#$isa #$ArtifactCol1003 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1003 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1003 "gold") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1003 "starfleet") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1003 "engineering") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1003 "uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1003 "a gold Starfleet engineering uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1003 "A neatly folded gold Starfleet engineering uniform is lying here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1003 #$ProtectiveAttire) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1003 "armorLevel: 10") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1003 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn-TypeType #$ArtifactCol1003 #$Trunk-BodyCore) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1003 #$SomethingToWear) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1003(#$Kilogram 5)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1003(#$Dollar-UnitedStates 12000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1003(#$DollarsPerDay 500)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1003 "These uniforms are worn by engineering officers on Federation <br>starships. It's kind of tight, but it looks pretty good.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1003 "gold") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1003 "engineering") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1003 "uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004")
(cyc-assert '(#$isa #$ArtifactCol1004 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1004 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1004 "blue") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1004 "starfleet") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1004 "medical") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1004 "uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1004 "a blue Starfleet medical uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1004 "A neatly folded blue Starfleet medical uniform is lying here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1004 #$ProtectiveAttire) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1004 "armorLevel: 10") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1004 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn-TypeType #$ArtifactCol1004 #$Trunk-BodyCore) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1004 #$SomethingToWear) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1004(#$Kilogram 5)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1004(#$Dollar-UnitedStates 12000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1004(#$DollarsPerDay 500)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1004 "These uniforms are worn by medical officers on Federation <br>starships. It's kind of tight, but it looks pretty good.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1004 "blue") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1004 "medical") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1004 "uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1005 "starfleet") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1005 "black") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1005 "boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1005 "a pair of Starfleet black boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1005 "A pair of Starfleet black boots are sitting here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1005 #$ProtectiveAttire) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1005 "armorLevel: 5") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1005 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn-TypeType #$ArtifactCol1005 #$Foot-AnimalBodyPart) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1005 #$SomethingToWear) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1005(#$Kilogram 3)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1005(#$Dollar-UnitedStates 8000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1005(#$DollarsPerDay 250)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1005 "These boots must be worn by all Starfleet officers while on duty. <br>They're quite light, and offer good protection for the feet.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1005 "starfleet") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1005 "black") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1005 "boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1006 "starfleet") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1006 "comm") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1006 "com") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1006 "communication") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1006 "badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1006 "a Starfleet communication badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1006 "A Starfleet communication badge is lying here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1006 #$ProtectiveAttire) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1006 "armorLevel: 1") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1006 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1006 #$Necklace) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1006(#$Kilogram 1)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1006(#$Dollar-UnitedStates 20000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1006(#$DollarsPerDay 500)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1006 "These communication badges must be worn by all officers while <br>on a starship. It looks like a silver arrow head on top of a golden <br>coloured oval: <br>____/\____ <br>/ / \ \ <br>| / \ | <br>\_/ _/\_ \_/ <br>// \\ <br>") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1006 "starfleet") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1006 "comm") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1006 "com") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1006 "communication") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1006 "badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1007")
(cyc-assert '(#$isa #$ArtifactCol1007 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1007 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1007 "worf's") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1007 "worf") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1007 "sash") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1007 "Worf's sash") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1007 "Worf's silver chain sash has been left here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1007 #$ProtectiveAttire) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1007 "armorLevel: 8") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1007 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn-TypeType #$ArtifactCol1007 #$Torso) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1007 #$SomethingToWear) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1007(#$Kilogram 6)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1007(#$Dollar-UnitedStates 15000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1007(#$DollarsPerDay 300)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1007 "Worf's sash is some sort of Klingon clothing. Worf always wears <br>it, which makes you wonder how you managed to get a hold of it...") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1007 "worf's") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1007 "worf") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1007 "sash") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1008")
(cyc-assert '(#$isa #$ArtifactCol1008 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1008 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1008 "geordi") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1008 "geordi's") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1008 "visor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1008 "Geordi's VISOR") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1008 "Geordi's VISOR is lying here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1008 #$ProtectiveAttire) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1008 "armorLevel: 2") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1008 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1008(#$Kilogram 6)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1008(#$Dollar-UnitedStates 35000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1008(#$DollarsPerDay 750)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1008 "Geordi's VISOR was made specially for him, because he's blind. <br>This piece of equipment allows him to see things, but differently <br>than normal eyes. I wonder how Geordi is managing, now that you've <br>stolen his only way of seeing?") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1008 "geordi") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1008 "geordi's") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1008 "visor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009")
(cyc-assert '(#$isa #$ArtifactCol1009 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1009 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1009 "medical") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1009 "tricorder") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1009 "a medical Tricorder") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1009 "A medical Tricorder is lying here, ready to be used") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1009 #$RodShapedObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1009 #$ControlDevice) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1009 #$HandTool) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1009 #$RodShapedObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1009 #$ControlDevice) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1009 "mudLevelOf: 10") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1009 "chargeCapacity: 5") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1009 "chargeRemaining: 5") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1009 "28") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1009 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1009 #$HandTool) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1009 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1009(#$Kilogram 6)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1009(#$Dollar-UnitedStates 15000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1009(#$DollarsPerDay 500)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1009 "This medical Tricorder is used to heal small wounds and cuts. While <br>it isn't made for major injuries, it can help you limp home. To use, <br>hold it and then use it.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1009 "medical") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1009 "tricorder") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1010")
(cyc-assert '(#$isa #$ArtifactCol1010 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1010 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1010 "dilithium") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1010 "crystal") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1010 "a dilithium crystal") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1010 "A shard of dilithium crystal is lying here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1010 "maybe a #$LightingDevice") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$duration #$ArtifactCol1010 -1) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$stateOfDevice #$ArtifactCol1010 #$DeviceOn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1010 #$LightingDevice) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1010 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1010 #$HandTool) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1010 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1010(#$Kilogram 2)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1010(#$Dollar-UnitedStates 8000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1010(#$DollarsPerDay 250)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1010 "Dilithium crystals are used to power warp cores of starships. This <br>particular crystal is glowing brightly, and gives off a blue-ish <br>tinge.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1010 "dilithium") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1010 "crystal") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1011")
(cyc-assert '(#$isa #$ArtifactCol1011 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1011 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1011 "picard") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1011 "picard's") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1011 "flute") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1011 "Picard's flute") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1011 "Captain Picard's wooden flute is sitting here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1011 #$Artifact-Generic) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$stateOfDevice #$ArtifactCol1011 #$DeviceOn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1011 #$InformationStore) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1011 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1011 #$HandTool) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1011 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1011(#$Kilogram 3)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1011(#$Dollar-UnitedStates 8000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1011(#$DollarsPerDay 250)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1011 "Captain Picard recieved this flute when he lost his memory and <br>was stuck on some strange world. Now, he plays it to relieve <br>stress.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1011 "picard") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1011 "picard's") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1011 "flute") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1012")
(cyc-assert '(#$isa #$ArtifactCol1012 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1012 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1012 "riker") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1012 "riker's") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1012 "trombone") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1012 "Riker's trombone") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1012 "Commander Riker's trombone has been placed here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1012 #$Artifact-Generic) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$stateOfDevice #$ArtifactCol1012 #$DeviceOn) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1012 #$InformationStore) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1012 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1012 #$HandTool) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1012 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1012(#$Kilogram 5)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1012(#$Dollar-UnitedStates 10000)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1012(#$DollarsPerDay 250)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1012 "Commander Riker considers himself to be a talented jazz musician. <br>He practices on this trombone all the time.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1012 "riker") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1012 "riker's") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1012 "trombone") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1020")
(cyc-assert '(#$isa #$ArtifactCol1020 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1020 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1020 "tea") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1020 "cup") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1020 "a small cup") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1020 "A small cup of tea is sitting here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1020 #$Flask-LabGlassware) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1020 #$Bottle) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1020 #$FluidReservoir) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1020 #$Container) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$volumeOfObject #$ArtifactCol1020(#$Liter 4)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$volumeContained #$ArtifactCol1020(#$Liter 4)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1020 #$Portal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$portalState #$ArtifactCol1020 #$ClosedPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$Tea-Beverage #$LiquidTangibleThing) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1020 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1020 #$HandTool) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1020 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1020(#$Kilogram 3)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1020(#$Dollar-UnitedStates 15)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1020(#$DollarsPerDay 10)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1021")
(cyc-assert '(#$isa #$ArtifactCol1021 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1021 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1021 "wine") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1021 "bottle") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1021 "synthehol") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1021 "a synthehol") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1021 "A bottle of synthehol is standing here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1021 #$Flask-LabGlassware) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1021 #$Bottle) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1021 #$FluidReservoir) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1021 #$Container) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$volumeOfObject #$ArtifactCol1021(#$Liter 8)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$volumeContained #$ArtifactCol1021(#$Liter 8)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1021 #$Portal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1021 #$LimitedAccess) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$Wine #$LiquidTangibleThing) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1021 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1021 #$HandTool) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1021 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1021(#$Kilogram 6)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1021(#$Dollar-UnitedStates 30)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1021(#$DollarsPerDay 10)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1022")
(cyc-assert '(#$isa #$ArtifactCol1022 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1022 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1022 "ale") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1022 "ferengi") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1022 "bottle") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1022 "a Ferengi bottle") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1022 "A bottle of Ferengi ale is sitting here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1022 #$Flask-LabGlassware) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1022 #$Bottle) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1022 #$FluidReservoir) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1022 #$Container) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$volumeOfObject #$ArtifactCol1022(#$Liter 8)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$volumeContained #$ArtifactCol1022(#$Liter 8)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1022 #$Portal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1022 #$LimitedAccess) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$AleBeer #$LiquidTangibleThing) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1022 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1022 #$HandTool) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1022 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1022(#$Kilogram 6)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1022(#$Dollar-UnitedStates 30)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1022(#$DollarsPerDay 10)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1023")
(cyc-assert '(#$isa #$ArtifactCol1023 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1023 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1023 "whisky") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1023 "whiskey") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1023 "romulan") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1023 "bottle") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1023 "a Romulan bottle") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1023 "A bottle of Romulan whiskey is sitting here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1023 #$Flask-LabGlassware) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1023 #$Bottle) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1023 #$FluidReservoir) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1023 #$Container) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$volumeOfObject #$ArtifactCol1023(#$Liter 8)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$volumeContained #$ArtifactCol1023(#$Liter 8)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1023 #$Portal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1023 #$LimitedAccess) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$Whisky #$LiquidTangibleThing) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1023 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1023 #$HandTool) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1023 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1023(#$Kilogram 6)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1023(#$Dollar-UnitedStates 45)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1023(#$DollarsPerDay 10)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1024")
(cyc-assert '(#$isa #$ArtifactCol1024 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1024 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1024 "lemonade") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1024 "prune") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1024 "juice") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1024 "glass") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1024 "a small glass") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1024 "A small glass of prune juice is sitting here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1024 #$Flask-LabGlassware) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1024 #$Bottle) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1024 #$FluidReservoir) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1024 #$Container) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$volumeOfObject #$ArtifactCol1024(#$Liter 8)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$volumeContained #$ArtifactCol1024(#$Liter 8)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1024 #$Portal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1024 #$LimitedAccess) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$Lemonade #$LiquidTangibleThing) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1024 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1024 #$HandTool) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1024 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1024(#$Kilogram 3)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1024(#$Dollar-UnitedStates 10)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1024(#$DollarsPerDay 10)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1025")
(cyc-assert '(#$isa #$ArtifactCol1025 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1025 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1025 "beer") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1025 "vulcan") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$webSearchableStrings #$ArtifactCol1025 "bottle") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$termStrings #$ArtifactCol1025 "a Vulcan bottle") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$comment #$ArtifactCol1025 "A bottle of Vulcan beer is standing here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1025 #$Flask-LabGlassware) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1025 #$Bottle) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1025 #$FluidReservoir) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1025 #$Container) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$volumeOfObject #$ArtifactCol1025(#$Liter 8)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$volumeContained #$ArtifactCol1025(#$Liter 8)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1025 #$Portal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1025 #$LimitedAccess) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$Beer #$LiquidTangibleThing) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1025 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1025 #$HandTool) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$genls #$ArtifactCol1025 #$PortableObject) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$massOfObject #$ArtifactCol1025(#$Kilogram 3)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1025(#$Dollar-UnitedStates 10)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$relationAllInstance #$cost #$ArtifactCol1025(#$DollarsPerDay 10)) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;load file '10.obj.kif'
;load file '10.shp'
;load file '10.wld'
;; Sourcing C:\osim3\src\daxmoo\worlds\10.wld
(find-or-create-constant "Area1000")
(cyc-assert '(#$isa #$Area1000 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1000 "Main Engineering") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1000 "Main") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1000 "Engineering") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1000 "You find yourself in the middle of main engineering") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1000 "The room is longer <br>than it is wide, and it has fairly low ceilings") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1000 "Computer terminals cover <br>all the walls, and a large table built into the floor sits in the middle of <br>the room") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1000 "At the far end of the room you see the warp core, a large pulsating <br>vertical tube") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1000 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1000 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1002")
(cyc-assert '(#$isa #$Area1002 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1000 #$North-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1000 #$North-Generally) #$Area1000 #$Area1002) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1000 #$North-Generally) "A corridor is North.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1000 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1000 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1000 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1000 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1000 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1001")
(cyc-assert '(#$isa #$Area1001 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1001 "Geordi's Quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1001 "Geordi's") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1001 "Quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1001 "You're in the middle of Geordi's quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1001 "The room is sparsely decorated, <br>due to the fact that Geordi is blind") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1001 "A small personal computer sits on a <br>desk against the western wall, in between two windows that look out into <br>space") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1001 "A neatly made bed has been placed against the northern wall") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1001 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1001 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1002")
(cyc-assert '(#$isa #$Area1002 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1001 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1001 #$East-Generally) #$Area1001 #$Area1002) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1001 #$East-Generally) "A corridor is East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1001 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1001 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1001 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1001 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1001 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1002")
(cyc-assert '(#$isa #$Area1002 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1002 "A Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1002 "Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1002 "You find yourself in the middle of a well lit corridor on the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1002 "<br>It isn't very wide, and the light beige walls have been rounded, making the <br>corridor an oval shape") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1002 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1002 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1005")
(cyc-assert '(#$isa #$Area1005 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1002 #$North-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1002 #$North-Generally) #$Area1002 #$Area1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1002 #$North-Generally) "The corridor continues North.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1003")
(cyc-assert '(#$isa #$Area1003 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1002 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1002 #$East-Generally) #$Area1002 #$Area1003) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1002 #$East-Generally) "Data's Quarters are East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1000")
(cyc-assert '(#$isa #$Area1000 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1002 #$South-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1002 #$South-Generally) #$Area1002 #$Area1000) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1002 #$South-Generally) "Main Engineering is South.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1001")
(cyc-assert '(#$isa #$Area1001 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1002 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1002 #$West-Generally) #$Area1002 #$Area1001) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1002 #$West-Generally) "Geordi's Quarters are West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1002 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1002 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1003")
(cyc-assert '(#$isa #$Area1003 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1003 "Data's Quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1003 "Data's") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1003 "Quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1003 "You're in the middle of Data's quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1003 "Some easils and paintings have <br>been left scattered around the southern part of the room, while a huge <br>computer screen showing a cross section of the Enterprise covers the entire <br>northern wall") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1003 "In front of the screen is a large desk, which is covered in <br>computer controls") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1003 "You can't see a bed in this room, but you figure it's <br>because Data doesn't sleep") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1003 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1003 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1002")
(cyc-assert '(#$isa #$Area1002 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1003 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1003 #$West-Generally) #$Area1003 #$Area1002) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1003 #$West-Generally) "A corridor is West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1003 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1003 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1003 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1003 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1003 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1004")
(cyc-assert '(#$isa #$Area1004 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1004 "The Brig") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1004 "Brig") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1004 "You're in the dimly lit Brig") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1004 "This is where all the criminals and <br>prisoners are kept while on board the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1004 "Three fairly large cells <br>can been seen in the southern part of the room, and they're all empty") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1004 "A <br>computer control panel is situated in the northwestern corner of the room, <br>which is where the force fields for the cells are controlled") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1004 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1004 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1005")
(cyc-assert '(#$isa #$Area1005 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1004 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1004 #$East-Generally) #$Area1004 #$Area1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1004 #$East-Generally) "A corridor is East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1004 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1004 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1004 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1004 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1004 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1005")
(cyc-assert '(#$isa #$Area1005 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1005 "A Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1005 "Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1005 "You find yourself in the middle of a well lit corridor on the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1005 "<br>It isn't very wide, and the light beige walls have been rounded, making the <br>corridor an oval shape") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1005 "<br>You notice a tiny computer panel embedded into the wall") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1005 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1005 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1008")
(cyc-assert '(#$isa #$Area1008 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1005 #$North-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1005 #$North-Generally) #$Area1005 #$Area1008) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1005 #$North-Generally) "The corridor continues North.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1006")
(cyc-assert '(#$isa #$Area1006 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1005 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1005 #$East-Generally) #$Area1005 #$Area1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1005 #$East-Generally) "The Transporter Room is East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1002")
(cyc-assert '(#$isa #$Area1002 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1005 #$South-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1005 #$South-Generally) #$Area1005 #$Area1002) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1005 #$South-Generally) "The corridor continues South.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1004")
(cyc-assert '(#$isa #$Area1004 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1005 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1005 #$West-Generally) #$Area1005 #$Area1004) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1005 #$West-Generally) "The Brig is West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1005-Object666")
(cyc-assert '(#$isa #$Area1005-Object666 #$SpatialThing-Localized) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1005-Object666 "The panel says: <br> <br>*************************************************** <br>*    * <br>* NCC-1701-D - 'ENTERPRISE' * <br>*    * <br>* *****  * <br>* **********************  * <br>* *********************** _________ * <br>* ***** ***(___ ____( * <br>*  ***** \ \* * <br>*  ********** * <br>*    * <br>* You are currently on deck 1 * <br>*    * <br>***************************************************") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$in-ContCompletely #$Area1005-Object666 #$Area1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1005-Object666 "control") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1005-Object666 "panel") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1005-Object666 "computer") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1005-Object666 "screen") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1005-Object666 "sign") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1005 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1005 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1006")
(cyc-assert '(#$isa #$Area1006 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1006 "Transporter Room") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1006 "Transporter") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1006 "Room") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1006 "You're in the Enterprise transporter room") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1006 "A computer terminal is sitting <br>near the southern wall, where the transporter chief can control the <br>transporters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1006 "Eight round transport pads have been arranged in a circle, <br>on a raised platform against the northern wall") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1006 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1006 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1042")
(cyc-assert '(#$isa #$Area1042 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1006 #$North-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1006 #$North-Generally) #$Area1006 #$Area1042) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1006 #$North-Generally) "A transporter beam is North.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1005")
(cyc-assert '(#$isa #$Area1005 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1006 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1006 #$West-Generally) #$Area1006 #$Area1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1006 #$West-Generally) "A corridor is West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1006 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1006 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1006 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1006 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1007")
(cyc-assert '(#$isa #$Area1007 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1007 "School") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1007 "School") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1007 "You step through the doors and find yourself in a large school room") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1007 "<br>Various tables and chairs are set up all around the room, and many <br>paintings and drawings have been attached to the walls") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1007 "Several computer <br>consoles with a children's interface on them can be seen on the tables") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1007 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1007 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1008")
(cyc-assert '(#$isa #$Area1008 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1007 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1007 #$East-Generally) #$Area1007 #$Area1008) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1007 #$East-Generally) "A corridor is East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1007 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1007 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1007 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1007 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1007 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1008")
(cyc-assert '(#$isa #$Area1008 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1008 "A Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1008 "Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1008 "You find yourself in the middle of a well lit corridor on the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1008 "<br>It isn't very wide, and the light beige walls have been rounded, making the <br>corridor an oval shape") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1008 "<br>You see the holodeck's control panel beside the holodeck door, and <br>it has some information on it") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1008 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1008 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1010")
(cyc-assert '(#$isa #$Area1010 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1008 #$North-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1008 #$North-Generally) #$Area1008 #$Area1010) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1008 #$North-Generally) "The turbolift is North.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1009")
(cyc-assert '(#$isa #$Area1009 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1008 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1008 #$East-Generally) #$Area1008 #$Area1009) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1008 #$East-Generally) "Holodeck 2 is East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1005")
(cyc-assert '(#$isa #$Area1005 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1008 #$South-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1008 #$South-Generally) #$Area1008 #$Area1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1008 #$South-Generally) "The corridor continues South.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1007")
(cyc-assert '(#$isa #$Area1007 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1008 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1008 #$West-Generally) #$Area1008 #$Area1007) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1008 #$West-Generally) "The School is West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1008-Object667")
(cyc-assert '(#$isa #$Area1008-Object667 #$SpatialThing-Localized) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1008-Object667 "It looks like this: <br> <br>*************************************************** <br>*    * <br>* NCC-1701-D - 'ENTERPRISE' * <br>*  HOLODECK 2  * <br>*    * <br>* STATUS : Inactive  * <br>* CURRENT PROGRAM : N/A  * <br>* SAFETIES : N/A  * <br>*    * <br>* NOTE: Starfleet is not responsible for * <br>* any injuries incurred while on this * <br>* holodeck!  * <br>*    * <br>* WARNING: While the safeties are disabled, you * <br>* CAN be injured, or even killed. * <br>*    * <br>***************************************************") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$in-ContCompletely #$Area1008-Object667 #$Area1008) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1008-Object667 "holodeck") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1008-Object667 "computer") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1008-Object667 "control") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1008-Object667 "panel") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1008-Object667 "sign") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1008 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1008 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1009")
(cyc-assert '(#$isa #$Area1009 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1009 "Holodeck 2") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1009 "Holodeck") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1009 "You're now on Holodeck 2") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1009 "The room is just a large cube, with jet black <br>walls and a yellow grid painted on the floors, the walls, and the ceiling") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1009 "<br>This is where different programs can be loaded and experienced, which seem <br>totally real") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1009 "Right now, this holodeck is not functioning") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1009 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1009 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1008")
(cyc-assert '(#$isa #$Area1008 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1009 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1009 #$West-Generally) #$Area1009 #$Area1008) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1009 #$West-Generally) "A corridor is West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1009 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1009 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1009 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1009 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1009 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1010")
(cyc-assert '(#$isa #$Area1010 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1010 "Turbolift") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1010 "Turbolift") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1010 "You're in the turbolift") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1010 "The turbolift walls have been rounded off, <br>making it in the shape of a tube") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1010 "Several vertical rows of lights make this <br>place very well lit") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1010 "From here, you can access the other decks on the <br>Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1010 "<br>") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1010 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1010 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1008")
(cyc-assert '(#$isa #$Area1008 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1010 #$South-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1010 #$South-Generally) #$Area1010 #$Area1008) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1010 #$South-Generally) "A corridor leads South.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1011")
(cyc-assert '(#$isa #$Area1011 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1010 #$Up-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1010 #$Up-Generally) #$Area1010 #$Area1011) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1010 #$Up-Generally) "The turbolift goes Up.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1010 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1010 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1010 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1010 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1011")
(cyc-assert '(#$isa #$Area1011 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1011 "Turbolift") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1011 "Turbolift") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1011 "You're in the turbolift") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1011 "The turbolift walls have been rounded off, <br>making it in the shape of a tube") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1011 "Several vertical rows of lights make this <br>place very well lit") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1011 "From here, you can accessthe other decks on the <br>Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1011 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1011 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1013")
(cyc-assert '(#$isa #$Area1013 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1011 #$North-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1011 #$North-Generally) #$Area1011 #$Area1013) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1011 #$North-Generally) "A corridor leads North.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1032")
(cyc-assert '(#$isa #$Area1032 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1011 #$Up-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1011 #$Up-Generally) #$Area1011 #$Area1032) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1011 #$Up-Generally) "The turbolift goes Up.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1010")
(cyc-assert '(#$isa #$Area1010 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1011 #$Down-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1011 #$Down-Generally) #$Area1011 #$Area1010) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1011 #$Down-Generally) "The turbolift goes Down.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1011 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1011 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1011 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1012")
(cyc-assert '(#$isa #$Area1012 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1012 "Cargo Bay 1") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1012 "Cargo") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1012 "Bay") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1012 "You're in the main cargo bay of the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1012 "It's quite a large room, <br>with a very high ceiling and a lot of floor space") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1012 "You can see several <br>hundred plastic crates and barrels with the Starfleet insignia on them <br>stacked right up to the ceiling") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1012 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1012 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1013")
(cyc-assert '(#$isa #$Area1013 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1012 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1012 #$East-Generally) #$Area1012 #$Area1013) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1012 #$East-Generally) "A corridor is East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1012 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1012 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1012 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1012 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1012 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1013")
(cyc-assert '(#$isa #$Area1013 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1013 "A Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1013 "Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1013 "You find yourself in the middle of a well lit corridor on the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1013 "<br>It isn't very wide, and the light beige walls have been rounded, making the <br>corridor an oval shape") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1013 "<br>You notice a tiny computer panel embedded into the wall") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1013 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1013 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1016")
(cyc-assert '(#$isa #$Area1016 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1013 #$North-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1013 #$North-Generally) #$Area1013 #$Area1016) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1013 #$North-Generally) "The corridor continues North.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1014")
(cyc-assert '(#$isa #$Area1014 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1013 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1013 #$East-Generally) #$Area1013 #$Area1014) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1013 #$East-Generally) "Riker's Quarters are East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1011")
(cyc-assert '(#$isa #$Area1011 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1013 #$South-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1013 #$South-Generally) #$Area1013 #$Area1011) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1013 #$South-Generally) "The Turbolift is South.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1012")
(cyc-assert '(#$isa #$Area1012 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1013 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1013 #$West-Generally) #$Area1013 #$Area1012) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1013 #$West-Generally) "The Cargo Bay is West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1013-Object668")
(cyc-assert '(#$isa #$Area1013-Object668 #$SpatialThing-Localized) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1013-Object668 "The panel says: <br> <br>*************************************************** <br>*    * <br>* NCC-1701-D - 'ENTERPRISE' * <br>*    * <br>* *****  * <br>* **********************  * <br>* *********************** _________ * <br>* ***** ***(___ ____( * <br>*  ***** \ \* * <br>*  ********** * <br>*    * <br>* You are currently on deck 2 * <br>*    * <br>***************************************************") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$in-ContCompletely #$Area1013-Object668 #$Area1013) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1013-Object668 "control") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1013-Object668 "panel") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1013-Object668 "computer") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1013-Object668 "screen") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1013-Object668 "sign") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1013 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1013 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1014")
(cyc-assert '(#$isa #$Area1014 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1014 "Riker's Quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1014 "Riker's") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1014 "Quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1014 "You've arrived in Riker's quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1014 "The room is very neat and tidy, <br>with a couch and several chairs aranged around a coffee table by the <br>eastern wall") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1014 "A small partition at the northern part of the room seperates <br>his sleeping area with the rest of the room") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1014 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1014 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1013")
(cyc-assert '(#$isa #$Area1013 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1014 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1014 #$West-Generally) #$Area1014 #$Area1013) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1014 #$West-Generally) "A corridor is West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1014 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1014 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1014 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1014 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1014 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1015")
(cyc-assert '(#$isa #$Area1015 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1015 "Sick Bay") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1015 "Sick") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1015 "Bay") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1015 "You're in the middle of the Enterprise's Sick Bay") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1015 "About a dozen beds are <br>arranged along the walls of the room, while several carts covered with <br>medical supplies are scattered around the room") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1015 "A large glass window in the <br>northern part of the room separates the doctor's office with the rest of the <br>room") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1015 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1015 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1016")
(cyc-assert '(#$isa #$Area1016 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1015 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1015 #$East-Generally) #$Area1015 #$Area1016) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1015 #$East-Generally) "A corridor is East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1015 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1015 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1015 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1015 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1015 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1016")
(cyc-assert '(#$isa #$Area1016 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1016 "A Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1016 "Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1016 "You find yourself in the middle of a well lit corridor on the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1016 "<br>It isn't very wide, and the light beige walls have been rounded, making the <br>corridor an oval shape") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1016 "<br>You see the holodeck's control panel beside the holodeck door, and <br>it has some information on it") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1016 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1016 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1019")
(cyc-assert '(#$isa #$Area1019 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1016 #$North-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1016 #$North-Generally) #$Area1016 #$Area1019) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1016 #$North-Generally) "The corridor continues North.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1017")
(cyc-assert '(#$isa #$Area1017 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1016 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1016 #$East-Generally) #$Area1016 #$Area1017) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1016 #$East-Generally) "Holodeck 4 is East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1013")
(cyc-assert '(#$isa #$Area1013 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1016 #$South-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1016 #$South-Generally) #$Area1016 #$Area1013) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1016 #$South-Generally) "The corridor continues South.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1015")
(cyc-assert '(#$isa #$Area1015 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1016 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1016 #$West-Generally) #$Area1016 #$Area1015) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1016 #$West-Generally) "Sick Bay is West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1016-Object669")
(cyc-assert '(#$isa #$Area1016-Object669 #$SpatialThing-Localized) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1016-Object669 "It looks like this: <br> <br>*************************************************** <br>*    * <br>* NCC-1701-D - 'ENTERPRISE' * <br>*  HOLODECK 4  * <br>*    * <br>* STATUS : Active  * <br>* CURRENT PROGRAM : Sherlock Holmes(19th * <br>*  century London) * <br>* SAFETIES : Disabled  * <br>*    * <br>* NOTE: Starfleet is not responsible for * <br>* any injuries incurred while on this * <br>* holodeck!  * <br>*    * <br>* WARNING: While the safeties are disabled, you * <br>* CAN be injured, or even killed. * <br>*    * <br>* ---ENTER WHEN READY--- * <br>*    * <br>***************************************************") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$in-ContCompletely #$Area1016-Object669 #$Area1016) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1016-Object669 "holodeck") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1016-Object669 "computer") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1016-Object669 "control") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1016-Object669 "panel") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1016-Object669 "sign") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1016 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1016 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1017")
(cyc-assert '(#$isa #$Area1017 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1017 "Holodeck 4 Entrance - A Narrow Alley") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1017 "Holodeck") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1017 "Entrance") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1017 "Narrow") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1017 "Alley") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1017 "You emerge into a dark narrow alley") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1017 "Tall dark brick buildings block your <br>way north and south") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1017 "You can see that the windows on the buildings are fairly <br>high, and some have been boarded up") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1017 "The smell from the rotting food and <br>garbage mixing with the foul water on the ground is unbearable") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1017 "You can hear <br>the sounds of a bustling marketpace to the east") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1017 "The archway leading out of <br>the holodeck is west") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1017 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1017 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1016")
(cyc-assert '(#$isa #$Area1016 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1017 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1017 #$West-Generally) #$Area1017 #$Area1016) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1017 #$West-Generally) "A corridor is West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1017 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1017 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1017 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1017 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1017 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1018")
(cyc-assert '(#$isa #$Area1018 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1018 "Crusher's Quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1018 "Crusher's") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1018 "Quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1018 "You're in Doctor Crusher's quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1018 "Several different paintings are <br>attached to the walls, and you also notice a few sculptures") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1018 "A neatly made <br>bed is located by the northern wall, in between two large windows looking <br>out into space") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1018 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1018 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1019")
(cyc-assert '(#$isa #$Area1019 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1018 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1018 #$East-Generally) #$Area1018 #$Area1019) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1018 #$East-Generally) "A corridor is East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1018 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1018 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1018 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1018 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1018 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1019")
(cyc-assert '(#$isa #$Area1019 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1019 "A Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1019 "Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1019 "You find yourself in the middle of a well lit corridor on the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1019 "<br>It isn't very wide, and the light beige walls have been rounded, making the <br>corridor an oval shape") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1019 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1019 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1021")
(cyc-assert '(#$isa #$Area1021 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1019 #$North-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1019 #$North-Generally) #$Area1019 #$Area1021) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1019 #$North-Generally) "Ten Forward is North.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1020")
(cyc-assert '(#$isa #$Area1020 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1019 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1019 #$East-Generally) #$Area1019 #$Area1020) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1019 #$East-Generally) "Security is East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1016")
(cyc-assert '(#$isa #$Area1016 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1019 #$South-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1019 #$South-Generally) #$Area1019 #$Area1016) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1019 #$South-Generally) "The corridor continues South.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1018")
(cyc-assert '(#$isa #$Area1018 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1019 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1019 #$West-Generally) #$Area1019 #$Area1018) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1019 #$West-Generally) "Crusher's Quarters are West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1019 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1019 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1020")
(cyc-assert '(#$isa #$Area1020 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1020 "Enterprise Security") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1020 "Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1020 "Security") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1020 "You're standing in the dimly lit Enterprise Security") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1020 "Weapons lockers <br>cover all of the walls, except along the northern wall, where a large glass <br>window protects dozens of different phasors, blaster rifles, and other high <br>tech weapons") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1020 "Three long tables surrounded by chairs stretch across the room") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1020 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1020 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1019")
(cyc-assert '(#$isa #$Area1019 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1020 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1020 #$West-Generally) #$Area1020 #$Area1019) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1020 #$West-Generally) "A corridor is West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1020 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1020 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1020 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1020 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1020 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1021")
(cyc-assert '(#$isa #$Area1021 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1021 "Ten Forward") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1021 "Ten") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1021 "Forward") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1021 "You're now in Ten Forward, the entertainment room of the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1021 "<br>The entire northern wall is covered with windows looking out into space, <br>while two large wooden doors with the Starfleet insignia stamped on them <br>face south") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1021 "Many round metal tables are scattered around the room, <br>surrounded by metal chairs") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1021 "A long bar spans almost the entire length of <br>the southern part of the room, and about two dozen bar stools are sitting <br>in front of it") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1021 "It's very noisy in here, due to all the talking and <br>laughing") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1021 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1021 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1019")
(cyc-assert '(#$isa #$Area1019 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1021 #$South-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1021 #$South-Generally) #$Area1021 #$Area1019) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1021 #$South-Generally) "A corridor is South.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1021 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1021 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1021 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1021 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1021 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1022")
(cyc-assert '(#$isa #$Area1022 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1022 "Shuttle Bay") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1022 "Shuttle") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1022 "Bay") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1022 "You're in the main shuttle bay of the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1022 "It's quite a large <br>room, with a very high ceiling and a lot of floor space") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1022 "You can see three <br>different shuttle crafts sitting here, waiting to be flown") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1022 "<br>A large grey door leads into space") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1022 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1022 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1024")
(cyc-assert '(#$isa #$Area1024 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1022 #$North-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1022 #$North-Generally) #$Area1022 #$Area1024) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1022 #$North-Generally) "A corridor is North.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1039")
(cyc-assert '(#$isa #$Area1039 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1022 #$South-Generally) #$Doorway) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1022 #$South-Generally) #$Area1022 #$Area1039) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings(#$BoundsOfDirectionFn #$Area1022 #$South-Generally) "door") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings(#$BoundsOfDirectionFn #$Area1022 #$South-Generally) "grey") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings(#$BoundsOfDirectionFn #$Area1022 #$South-Generally) "doors") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1022 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1022 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1022 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1022 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1023")
(cyc-assert '(#$isa #$Area1023 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1023 "Troi's Quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1023 "Troi's") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1023 "Quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1023 "You're in Counselor Deanna Troi's quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1023 "Several different paintings <br>have been hung from the walls, and a small couch and a recliner are <br>positioned around a coffee table") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1023 "A neatly made bed is partially hidden <br>behind a curtain at the northern part of the room") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1023 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1023 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1024")
(cyc-assert '(#$isa #$Area1024 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1023 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1023 #$East-Generally) #$Area1023 #$Area1024) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1023 #$East-Generally) "A corridor is East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1023 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1023 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1023 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1023 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1023 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1024")
(cyc-assert '(#$isa #$Area1024 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1024 "A Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1024 "Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1024 "You find yourself in the middle of a well lit corridor on the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1024 "<br>It isn't very wide, and the light beige walls have been rounded, making the <br>corridor an oval shape") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1024 "<br>You notice a tiny computer panel embedded into the wall") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1024 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1024 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1027")
(cyc-assert '(#$isa #$Area1027 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1024 #$North-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1024 #$North-Generally) #$Area1024 #$Area1027) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1024 #$North-Generally) "The corridor continues North.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1025")
(cyc-assert '(#$isa #$Area1025 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1024 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1024 #$East-Generally) #$Area1024 #$Area1025) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1024 #$East-Generally) "Worf's Quarters are East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1022")
(cyc-assert '(#$isa #$Area1022 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1024 #$South-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1024 #$South-Generally) #$Area1024 #$Area1022) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1024 #$South-Generally) "The shuttle bay is South.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1023")
(cyc-assert '(#$isa #$Area1023 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1024 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1024 #$West-Generally) #$Area1024 #$Area1023) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1024 #$West-Generally) "Troi's Quarters are West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1024-Object670")
(cyc-assert '(#$isa #$Area1024-Object670 #$SpatialThing-Localized) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1024-Object670 "The panel says: <br> <br>*************************************************** <br>*    * <br>* NCC-1701-D - 'ENTERPRISE' * <br>*    * <br>* *****  * <br>* **********************  * <br>* *********************** _________ * <br>* ***** ***(___ ____( * <br>*  ***** \ \* * <br>*  ********** * <br>*    * <br>* You are currently on deck 3 * <br>*    * <br>***************************************************") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$in-ContCompletely #$Area1024-Object670 #$Area1024) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1024-Object670 "control") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1024-Object670 "panel") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1024-Object670 "computer") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1024-Object670 "screen") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1024-Object670 "sign") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1024 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1024 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1025")
(cyc-assert '(#$isa #$Area1025 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1025 "Worf's Quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1025 "Worf's") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1025 "Quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1025 "You're in Worf's quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1025 "A small table is sitting in the southeastern <br>corner, and on it is a small potted plant") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1025 "An impressive selection of <br>Klingon weapons have been mounted on the northern wall, and a partition <br>splits this room with Worf's bedroom to the east") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1025 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1025 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1024")
(cyc-assert '(#$isa #$Area1024 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1025 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1025 #$West-Generally) #$Area1025 #$Area1024) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1025 #$West-Generally) "A corridor is West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1025 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1025 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1025 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1025 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1025 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1026")
(cyc-assert '(#$isa #$Area1026 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1026 "Enterprise Gym") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1026 "Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1026 "Gym") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1026 "You emerge into the Enterprise gym") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1026 "The room is quite large, with a soft <br>grey floor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1026 "A set of lockers against the southern wall contain all of the <br>necessary equipment needed for using the gym") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1026 "A thick stack of mats have been <br>piled high in one corner, which can be used for different activities") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1026 "Captain <br>Picard likes to come here to practice his fencing") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1026 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1026 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1027")
(cyc-assert '(#$isa #$Area1027 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1026 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1026 #$East-Generally) #$Area1026 #$Area1027) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1026 #$East-Generally) "A corridor is East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1026 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1026 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1026 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1026 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1026 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1027")
(cyc-assert '(#$isa #$Area1027 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1027 "A Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1027 "Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1027 "You find yourself in the middle of a well lit corridor on the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1027 "<br>It isn't very wide, and the light beige walls have been rounded, making the <br>corridor an oval shape") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1027 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1027 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1030")
(cyc-assert '(#$isa #$Area1030 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1027 #$North-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1027 #$North-Generally) #$Area1027 #$Area1030) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1027 #$North-Generally) "The corridor continues North.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1028")
(cyc-assert '(#$isa #$Area1028 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1027 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1027 #$East-Generally) #$Area1027 #$Area1028) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1027 #$East-Generally) "Picard's Quarters are East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1024")
(cyc-assert '(#$isa #$Area1024 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1027 #$South-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1027 #$South-Generally) #$Area1027 #$Area1024) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1027 #$South-Generally) "The corridor continues South.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1026")
(cyc-assert '(#$isa #$Area1026 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1027 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1027 #$West-Generally) #$Area1027 #$Area1026) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1027 #$West-Generally) "The Enterprise Gym is West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1027 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1027 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1028")
(cyc-assert '(#$isa #$Area1028 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1028 "Picard's Quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1028 "Picard's") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1028 "Quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1028 "You find yourself standing by the door of Captain Picard's quarters") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1028 "He <br>isn't very fond of visitors, but you decide to stay and have a look around") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1028 "<br>You can see several different ancient artifacts on tables and small pedestals, <br>and a large wooden wardrobe is facing south") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1028 "A comfortable looking recliner <br>with a matching footrest sits beside the door, along with a bright reading <br>lamp and end table") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1028 "Two large windows offer a great view of space") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1028 "A small <br>partition at the northern part of the room contains Picard's sleeping area") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1028 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1028 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1027")
(cyc-assert '(#$isa #$Area1027 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1028 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1028 #$West-Generally) #$Area1028 #$Area1027) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1028 #$West-Generally) "A corridor is West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1028 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1028 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1028 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1028 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1028 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1029")
(cyc-assert '(#$isa #$Area1029 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1029 "Science Lab") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1029 "Science") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1029 "Lab") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1029 "You're in the Enterprise science lab") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1029 "A strange looking machine sits in <br>the middle of the room, up on a slightly raised platform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1029 "It looks as though <br>something(or someone) could be placed inside, hooked up to the multitude of <br>wires and cables, and have scientific tests performed on it(or them)") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1029 "A <br>complex looking computer console is facing this machine") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1029 "Around the rest of <br>the room are counterops with with the odd computer terminal") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1029 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1029 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1030")
(cyc-assert '(#$isa #$Area1030 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1029 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1029 #$East-Generally) #$Area1029 #$Area1030) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1029 #$East-Generally) "A corridor is East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1029 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1029 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1029 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1029 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1029 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1030")
(cyc-assert '(#$isa #$Area1030 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1030 "A Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1030 "Corridor") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1030 "You find yourself in the middle of a well lit corridor on the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1030 "<br>It isn't very wide, and the light beige walls have been rounded, making the <br>corridor an oval shape") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1030 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1030 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1032")
(cyc-assert '(#$isa #$Area1032 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1030 #$North-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1030 #$North-Generally) #$Area1030 #$Area1032) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1030 #$North-Generally) "The Turbolift is North.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1031")
(cyc-assert '(#$isa #$Area1031 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1030 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1030 #$East-Generally) #$Area1030 #$Area1031) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1030 #$East-Generally) "Empty Quarters are East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1027")
(cyc-assert '(#$isa #$Area1027 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1030 #$South-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1030 #$South-Generally) #$Area1030 #$Area1027) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1030 #$South-Generally) "The corridor continues South.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1029")
(cyc-assert '(#$isa #$Area1029 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1030 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1030 #$West-Generally) #$Area1030 #$Area1029) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1030 #$West-Generally) "Empty Quarters are West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1030 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1030 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1031")
(cyc-assert '(#$isa #$Area1031 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1031 "Cargo Bay 2") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1031 "Cargo") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1031 "Bay") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1031 "You're in the cargo bay 2 of the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1031 "It's quite a large room, with <br>a very high ceiling and a lot of floor space") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1031 "You can see several hundred <br>plastic crates and barrels with the Starfleet insignia on them stacked right <br>up to the ceiling") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1031 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1031 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1030")
(cyc-assert '(#$isa #$Area1030 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1031 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1031 #$West-Generally) #$Area1031 #$Area1030) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1031 #$West-Generally) "A corridor is West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1031 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1031 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1031 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1031 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1031 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1032")
(cyc-assert '(#$isa #$Area1032 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1032 "Turbolift") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1032 "Turbolift") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1032 "You're in the turbolift") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1032 "The turbolift walls have been rounded off, <br>making it in the shape of a tube") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1032 "Several vertical rows of lights make this <br>place very well lit") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1032 "From here, you can access the other decks on the <br>Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1032 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1032 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1030")
(cyc-assert '(#$isa #$Area1030 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1032 #$South-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1032 #$South-Generally) #$Area1032 #$Area1030) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1032 #$South-Generally) "A corridor leads South.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1033")
(cyc-assert '(#$isa #$Area1033 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1032 #$Up-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1032 #$Up-Generally) #$Area1032 #$Area1033) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1032 #$Up-Generally) "The turbolift goes Up.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1011")
(cyc-assert '(#$isa #$Area1011 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1032 #$Down-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1032 #$Down-Generally) #$Area1032 #$Area1011) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1032 #$Down-Generally) "The turbolift goes Down.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1032 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1032 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1032 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1033")
(cyc-assert '(#$isa #$Area1033 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1033 "Turbolift") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1033 "Turbolift") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1033 "You're in the turbolift") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1033 "The turbolift walls have been rounded off, <br>making it in the shape of a tube") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1033 "Several vertical rows of lights make this <br>place very well lit") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1033 "From here, you can access the other decks on the <br>Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1033 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1033 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1034")
(cyc-assert '(#$isa #$Area1034 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1033 #$Up-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1033 #$Up-Generally) #$Area1033 #$Area1034) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1033 #$Up-Generally) "The turbolift goes Up.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1032")
(cyc-assert '(#$isa #$Area1032 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1033 #$Down-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1033 #$Down-Generally) #$Area1033 #$Area1032) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1033 #$Down-Generally) "The turbolift goes Down.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1033 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1033 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1033 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1033 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1034")
(cyc-assert '(#$isa #$Area1034 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1034 "Turbolift") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1034 "Turbolift") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1034 "You're in the turbolift") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1034 "The turbolift walls have been rounded off, <br>making it in the shape of a tube") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1034 "Several vertical rows of lights make this <br>place very well lit") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1034 "From here, you can access the other decks on the <br>Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1034 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1034 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1036")
(cyc-assert '(#$isa #$Area1036 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1034 #$Up-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1034 #$Up-Generally) #$Area1034 #$Area1036) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1034 #$Up-Generally) "The Main Bridge is Up.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1033")
(cyc-assert '(#$isa #$Area1033 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1034 #$Down-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1034 #$Down-Generally) #$Area1034 #$Area1033) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1034 #$Down-Generally) "The turbolift goes Down.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1034 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1034 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1034 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1034 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1035")
(cyc-assert '(#$isa #$Area1035 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1035 "Picard's Ready Room") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1035 "Picard's") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1035 "Ready") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1035 "Room") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1035 "You're standing in Captain Picard's ready room") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1035 "A long couch has been <br>placed beside the door, while a large U shaped desk is located by the <br>northern wall") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1035 "A small computer screen is sitting on the desk, as well as <br>several other papers and documents") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1035 "A single high window beside the desk <br>looks into space, and a fish tank is located in the northwestern corner of <br>the room") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1035 "This is where the Captain makes all of his important decisions") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1035 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1035 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1038")
(cyc-assert '(#$isa #$Area1038 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1035 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1035 #$East-Generally) #$Area1035 #$Area1038) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1035 #$East-Generally) "The Main Bridge - Lower Half is East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1035 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1035 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1035 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1035 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1035 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1036")
(cyc-assert '(#$isa #$Area1036 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1036 "Main Bridge - Upper Half") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1036 "Main") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1036 "Bridge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1036 "Upper") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1036 "Half") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1036 "You find yourself on the upper half of the main bridge of the USS <br>Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1036 "Directly in front of you is a thick railing that contains many <br>different computer panels used for the tactical systems of the ship") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1036 "The <br>entire southern wall is covered with computer consoles, where the ship's <br>main systems are controlled") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1036 "Two small curved ramps on either side of the <br>room lead north to the lower part of the bridge, and a large circular <br>skylight shows the space outside the ship") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1036 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1036 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1038")
(cyc-assert '(#$isa #$Area1038 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1036 #$North-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1036 #$North-Generally) #$Area1036 #$Area1038) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1036 #$North-Generally) "The Main Bridge - Lower Half is North.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1037")
(cyc-assert '(#$isa #$Area1037 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1036 #$East-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1036 #$East-Generally) #$Area1036 #$Area1037) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1036 #$East-Generally) "The Conference Room is East.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1034")
(cyc-assert '(#$isa #$Area1034 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1036 #$Down-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1036 #$Down-Generally) #$Area1036 #$Area1034) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1036 #$Down-Generally) "The Turbolift is Down.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1036 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1036 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1036 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1037")
(cyc-assert '(#$isa #$Area1037 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1037 "Conference Room") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1037 "Conference") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1037 "Room") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1037 "You're in the conference room of the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1037 "A large glass rectangular <br>table sits in the middle of the room, surrounded by about a dozen comfortable <br>looking office chairs") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1037 "The entire eastern wall is covered with windows, <br>looking out into space") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1037 "This is where the senior officers of the Enterprise <br>meet and discuss important issues") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1037 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1037 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1036")
(cyc-assert '(#$isa #$Area1036 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1037 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1037 #$West-Generally) #$Area1037 #$Area1036) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1037 #$West-Generally) "The Main Bridge - Upper Half is West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1037 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1037 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1037 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1037 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1037 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1038")
(cyc-assert '(#$isa #$Area1038 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1038 "Main Bridge - Lower Half") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1038 "Main") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1038 "Bridge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1038 "Lower") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1038 "Half") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1038 "You find yourself on the lower half of the main bridge of the USS <br>Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1038 "An enormous view screen covers almost the entire northern wall, <br>and is currently displaying a view of the stars rushing by") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1038 "Three large <br>chairs in the northern part of the room, in front of the railing, face the <br>screen") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1038 "This is where the Captain, Commander Riker, and Counselor Troi sit") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1038 "<br>Two computer consoles with built in chairs rest about ten feet in front of <br>the chairs, also facing the view screen") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1038 "This is where the ship's pilot and <br>information officer sit") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1038 #$Indoors-IsolatedFromOutside) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1038 #$SpaceInAHOC) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1036")
(cyc-assert '(#$isa #$Area1036 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1038 #$South-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1038 #$South-Generally) #$Area1038 #$Area1036) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1038 #$South-Generally) "The Main Bridge - Upper Half is South.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1035")
(cyc-assert '(#$isa #$Area1035 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1038 #$West-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1038 #$West-Generally) #$Area1038 #$Area1035) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1038 #$West-Generally) "The Captain's Ready Room is West.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1038 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1038 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1038 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1038 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1039")
(cyc-assert '(#$isa #$Area1039 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1039 "Outer Space by the Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1039 "Outer") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1039 "Space") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1039 "Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1039 "You're floating in outer space right beside the USS Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1039 "You can <br>see stars in every direction, which provide the only light here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1039 "You feel <br>very cold") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1039 "<br>A large grey door leads into the Enterprise's Shuttle Bay") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1039 #$FreeSpaceContent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1022")
(cyc-assert '(#$isa #$Area1022 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1039 #$North-Generally) #$Doorway) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1039 #$North-Generally) #$Area1039 #$Area1022) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1039 #$North-Generally) "The Shuttle Bay is North.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings(#$BoundsOfDirectionFn #$Area1039 #$North-Generally) "door") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings(#$BoundsOfDirectionFn #$Area1039 #$North-Generally) "doors") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings(#$BoundsOfDirectionFn #$Area1039 #$North-Generally) "grey") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1040")
(cyc-assert '(#$isa #$Area1040 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1039 #$Up-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1039 #$Up-Generally) #$Area1039 #$Area1040) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1039 #$Up-Generally) "Outer Space is Up.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1039 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1039 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1039 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1039 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1040")
(cyc-assert '(#$isa #$Area1040 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1040 "Outer Space") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1040 "Outer") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1040 "Space") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1040 "You're floating in outer space right above the USS Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1040 "You can <br>see stars in every direction, which provide the only light here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1040 "You feel <br>very cold") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1040 #$FreeSpaceContent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1041")
(cyc-assert '(#$isa #$Area1041 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1040 #$Up-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1040 #$Up-Generally) #$Area1040 #$Area1041) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1040 #$Up-Generally) "Outer Space is Up.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1039")
(cyc-assert '(#$isa #$Area1039 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1040 #$Down-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1040 #$Down-Generally) #$Area1040 #$Area1039) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1040 #$Down-Generally) "Outer Space is Down.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1040 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1040 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1040 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1040 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1041")
(cyc-assert '(#$isa #$Area1041 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1041 "Outer Space") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1041 "Outer") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1041 "Space") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1041 "You're floating in outer space right above the USS Enterprise") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1041 "You can <br>see stars in every direction, which provide the only light here") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1041 "You feel <br>very cold") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1041 #$FreeSpaceContent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area-1")
(cyc-assert '(#$isa #$Area-1 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1041 #$Up-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1041 #$Up-Generally) #$Area1041 #$Area1041) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1041 #$Up-Generally) "* The Galaxy is Up.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings(#$BoundsOfDirectionFn #$Area1041 #$Up-Generally) "*") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1040")
(cyc-assert '(#$isa #$Area1040 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1041 #$Down-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1041 #$Down-Generally) #$Area1041 #$Area1040) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1041 #$Down-Generally) "Outer Space is Down.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1041 #$North-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1041 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1041 #$South-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1041 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1042")
(cyc-assert '(#$isa #$Area1042 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$nameString #$Area1042 "Transporter Beam") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1042 "Transporter") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$webSearchableStrings #$Area1042 "Beam") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1042 "You find yourself in a transporter beam") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1042 "All you can see is blue <br>flashing light") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1042 "It feels as though your body is racing around at high <br>speeds") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$osim:descriptionStrings #$Area1042 "As you try to look down at your body, you realize that there's <br>nothing there!") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$Area1042 #$FreeSpaceContent) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area4075")
(cyc-assert '(#$isa #$Area4075 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1042 #$North-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1042 #$North-Generally) #$Area1042 #$Area4075) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1006")
(cyc-assert '(#$isa #$Area1006 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1042 #$South-Generally) #$OpenPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$pathBetween(#$BoundsOfDirectionFn #$Area1042 #$South-Generally) #$Area1042 #$Area1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$nameString(#$BoundsOfDirectionFn #$Area1042 #$South-Generally) "The Transporter Room is South.") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1042 #$East-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1042 #$West-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1042 #$Up-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1042 #$Down-Generally) #$Wall-GenericBarrier) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;load file '10.wld.kif'
;load file '10.zon'
;; Sourcing C:\osim3\src\daxmoo\worlds\10.zon
(find-or-create-constant "NpcCol1013")
(cyc-assert '(#$isa #$NpcCol1013 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1013 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1013-Alexander671")
(find-or-create-constant "NpcCol1013")
(cyc-assert '(#$isa #$NpcCol1013-Alexander671 #$NpcCol1013) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1013-Alexander671 "Alexander") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1025")
(cyc-assert '(#$isa #$Area1025 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1013-Alexander671 #$Area1025) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1001")
(cyc-assert '(#$isa #$NpcCol1001 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1001 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1001-Data672")
(find-or-create-constant "NpcCol1001")
(cyc-assert '(#$isa #$NpcCol1001-Data672 #$NpcCol1001) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1001-Data672 "Data") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1029")
(cyc-assert '(#$isa #$Area1029 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1001-Data672 #$Area1029) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots673")
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005-Boots673 #$ArtifactCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1005-Boots673 "Boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1005-Boots673(#$The(#$BodyPartCollectionFn #$NpcCol1001-Data672 #$Foot-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge674")
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006-Comm-Badge674 #$ArtifactCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1006-Comm-Badge674 "Comm Badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge674(#$The(#$BodyPartCollectionFn #$NpcCol1001-Data672 #$Neck-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003")
(cyc-assert '(#$isa #$ArtifactCol1003 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1003 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003-Gold-Uniform675")
(find-or-create-constant "ArtifactCol1003")
(cyc-assert '(#$isa #$ArtifactCol1003-Gold-Uniform675 #$ArtifactCol1003) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1003-Gold-Uniform675 "Gold Uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1003-Gold-Uniform675(#$The(#$BodyPartCollectionFn #$NpcCol1001-Data672 #$Torso))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1000")
(cyc-assert '(#$isa #$ArtifactCol1000 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1000 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1000-1000-10-Phaser676")
(find-or-create-constant "ArtifactCol1000")
(cyc-assert '(#$isa #$ArtifactCol1000-1000-10-Phaser676 #$ArtifactCol1000) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1000-1000-10-Phaser676 "1000 10 Phaser") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possesses #$NpcCol1001-Data672 #$ArtifactCol1000-1000-10-Phaser676) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1003")
(cyc-assert '(#$isa #$NpcCol1003 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1003 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1003-Dr-Crusher677")
(find-or-create-constant "NpcCol1003")
(cyc-assert '(#$isa #$NpcCol1003-Dr-Crusher677 #$NpcCol1003) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1003-Dr-Crusher677 "Dr. Crusher") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1015")
(cyc-assert '(#$isa #$Area1015 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1003-Dr-Crusher677 #$Area1015) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots678")
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005-Boots678 #$ArtifactCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1005-Boots678 "Boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1005-Boots678(#$The(#$BodyPartCollectionFn #$NpcCol1003-Dr-Crusher677 #$Foot-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge679")
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006-Comm-Badge679 #$ArtifactCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1006-Comm-Badge679 "Comm Badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge679(#$The(#$BodyPartCollectionFn #$NpcCol1003-Dr-Crusher677 #$Neck-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004")
(cyc-assert '(#$isa #$ArtifactCol1004 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1004 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004-Blue-Uniform680")
(find-or-create-constant "ArtifactCol1004")
(cyc-assert '(#$isa #$ArtifactCol1004-Blue-Uniform680 #$ArtifactCol1004) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1004-Blue-Uniform680 "Blue Uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1004-Blue-Uniform680(#$The(#$BodyPartCollectionFn #$NpcCol1003-Dr-Crusher677 #$Torso))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009")
(cyc-assert '(#$isa #$ArtifactCol1009 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1009 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009-1009-10-Medical-Tricorder681")
(find-or-create-constant "ArtifactCol1009")
(cyc-assert '(#$isa #$ArtifactCol1009-1009-10-Medical-Tricorder681 #$ArtifactCol1009) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1009-1009-10-Medical-Tricorder681 "1009 10 Medical Tricorder") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possesses #$NpcCol1003-Dr-Crusher677 #$ArtifactCol1009-1009-10-Medical-Tricorder681) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009")
(cyc-assert '(#$isa #$ArtifactCol1009 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1009 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009-1009-10-Medical-Tricorder682")
(find-or-create-constant "ArtifactCol1009")
(cyc-assert '(#$isa #$ArtifactCol1009-1009-10-Medical-Tricorder682 #$ArtifactCol1009) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1009-1009-10-Medical-Tricorder682 "1009 10 Medical Tricorder") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possesses #$NpcCol1003-Dr-Crusher677 #$ArtifactCol1009-1009-10-Medical-Tricorder682) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009")
(cyc-assert '(#$isa #$ArtifactCol1009 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1009 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009-1009-10-Medical-Tricorder683")
(find-or-create-constant "ArtifactCol1009")
(cyc-assert '(#$isa #$ArtifactCol1009-1009-10-Medical-Tricorder683 #$ArtifactCol1009) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1009-1009-10-Medical-Tricorder683 "1009 10 Medical Tricorder") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possesses #$NpcCol1003-Dr-Crusher677 #$ArtifactCol1009-1009-10-Medical-Tricorder683) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1000")
(cyc-assert '(#$isa #$NpcCol1000 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1000 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1000-Geordi684")
(find-or-create-constant "NpcCol1000")
(cyc-assert '(#$isa #$NpcCol1000-Geordi684 #$NpcCol1000) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1000-Geordi684 "Geordi") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1000")
(cyc-assert '(#$isa #$Area1000 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1000-Geordi684 #$Area1000) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots685")
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005-Boots685 #$ArtifactCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1005-Boots685 "Boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1005-Boots685(#$The(#$BodyPartCollectionFn #$NpcCol1000-Geordi684 #$Foot-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge686")
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006-Comm-Badge686 #$ArtifactCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1006-Comm-Badge686 "Comm Badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge686(#$The(#$BodyPartCollectionFn #$NpcCol1000-Geordi684 #$Neck-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003")
(cyc-assert '(#$isa #$ArtifactCol1003 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1003 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003-Gold-Uniform687")
(find-or-create-constant "ArtifactCol1003")
(cyc-assert '(#$isa #$ArtifactCol1003-Gold-Uniform687 #$ArtifactCol1003) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1003-Gold-Uniform687 "Gold Uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1003-Gold-Uniform687(#$The(#$BodyPartCollectionFn #$NpcCol1000-Geordi684 #$Torso))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1008")
(cyc-assert '(#$isa #$ArtifactCol1008 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1008 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1008-VISOR688")
(find-or-create-constant "ArtifactCol1008")
(cyc-assert '(#$isa #$ArtifactCol1008-VISOR688 #$ArtifactCol1008) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1008-VISOR688 "VISOR") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1008-VISOR688(#$The(#$BodyPartCollectionFn #$NpcCol1000-Geordi684 Above))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1007")
(cyc-assert '(#$isa #$NpcCol1007 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1007 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1007-Guinan689")
(find-or-create-constant "NpcCol1007")
(cyc-assert '(#$isa #$NpcCol1007-Guinan689 #$NpcCol1007) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1007-Guinan689 "Guinan") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1021")
(cyc-assert '(#$isa #$Area1021 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1007-Guinan689 #$Area1021) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1020")
(cyc-assert '(#$isa #$ArtifactCol1020 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1020 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1020-100-Tea690")
(find-or-create-constant "ArtifactCol1020")
(cyc-assert '(#$isa #$ArtifactCol1020-100-Tea690 #$ArtifactCol1020) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1020-100-Tea690 "100 Tea") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possesses #$NpcCol1007-Guinan689 #$ArtifactCol1020-100-Tea690) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1021")
(cyc-assert '(#$isa #$ArtifactCol1021 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1021 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1021-100-Synthehol691")
(find-or-create-constant "ArtifactCol1021")
(cyc-assert '(#$isa #$ArtifactCol1021-100-Synthehol691 #$ArtifactCol1021) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1021-100-Synthehol691 "100 Synthehol") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possesses #$NpcCol1007-Guinan689 #$ArtifactCol1021-100-Synthehol691) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1022")
(cyc-assert '(#$isa #$ArtifactCol1022 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1022 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1022-100-Ferengi-Ale692")
(find-or-create-constant "ArtifactCol1022")
(cyc-assert '(#$isa #$ArtifactCol1022-100-Ferengi-Ale692 #$ArtifactCol1022) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1022-100-Ferengi-Ale692 "100 Ferengi Ale") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possesses #$NpcCol1007-Guinan689 #$ArtifactCol1022-100-Ferengi-Ale692) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1023")
(cyc-assert '(#$isa #$ArtifactCol1023 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1023 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1023-100-Romulan-Whisky693")
(find-or-create-constant "ArtifactCol1023")
(cyc-assert '(#$isa #$ArtifactCol1023-100-Romulan-Whisky693 #$ArtifactCol1023) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1023-100-Romulan-Whisky693 "100 Romulan Whisky") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possesses #$NpcCol1007-Guinan689 #$ArtifactCol1023-100-Romulan-Whisky693) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1024")
(cyc-assert '(#$isa #$ArtifactCol1024 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1024 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1024-100-Lemonade-Prune-Juice694")
(find-or-create-constant "ArtifactCol1024")
(cyc-assert '(#$isa #$ArtifactCol1024-100-Lemonade-Prune-Juice694 #$ArtifactCol1024) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1024-100-Lemonade-Prune-Juice694 "100 Lemonade 'Prune Juice'") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possesses #$NpcCol1007-Guinan689 #$ArtifactCol1024-100-Lemonade-Prune-Juice694) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1025")
(cyc-assert '(#$isa #$ArtifactCol1025 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1025 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1025-100---Vulcan-Beer695")
(find-or-create-constant "ArtifactCol1025")
(cyc-assert '(#$isa #$ArtifactCol1025-100---Vulcan-Beer695 #$ArtifactCol1025) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1025-100---Vulcan-Beer695 "100 Vulcan Beer") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possesses #$NpcCol1007-Guinan689 #$ArtifactCol1025-100---Vulcan-Beer695) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1008")
(cyc-assert '(#$isa #$NpcCol1008 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1008 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1008-OBrien696")
(find-or-create-constant "NpcCol1008")
(cyc-assert '(#$isa #$NpcCol1008-OBrien696 #$NpcCol1008) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1008-OBrien696 "O'Brien") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1006")
(cyc-assert '(#$isa #$Area1006 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1008-OBrien696 #$Area1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots697")
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005-Boots697 #$ArtifactCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1005-Boots697 "Boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1005-Boots697(#$The(#$BodyPartCollectionFn #$NpcCol1008-OBrien696 #$Foot-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge698")
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006-Comm-Badge698 #$ArtifactCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1006-Comm-Badge698 "Comm Badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge698(#$The(#$BodyPartCollectionFn #$NpcCol1008-OBrien696 #$Neck-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003")
(cyc-assert '(#$isa #$ArtifactCol1003 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1003 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003-Gold-Uniform699")
(find-or-create-constant "ArtifactCol1003")
(cyc-assert '(#$isa #$ArtifactCol1003-Gold-Uniform699 #$ArtifactCol1003) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1003-Gold-Uniform699 "Gold Uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1003-Gold-Uniform699(#$The(#$BodyPartCollectionFn #$NpcCol1008-OBrien696 #$Torso))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1000")
(cyc-assert '(#$isa #$ArtifactCol1000 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1000 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1000-1000-10-Phaser700")
(find-or-create-constant "ArtifactCol1000")
(cyc-assert '(#$isa #$ArtifactCol1000-1000-10-Phaser700 #$ArtifactCol1000) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1000-1000-10-Phaser700 "1000 10 Phaser") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possesses #$NpcCol1008-OBrien696 #$ArtifactCol1000-1000-10-Phaser700) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1006")
(cyc-assert '(#$isa #$NpcCol1006 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1006 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1006-Picard701")
(find-or-create-constant "NpcCol1006")
(cyc-assert '(#$isa #$NpcCol1006-Picard701 #$NpcCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1006-Picard701 "Picard") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1035")
(cyc-assert '(#$isa #$Area1035 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1006-Picard701 #$Area1035) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots702")
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005-Boots702 #$ArtifactCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1005-Boots702 "Boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1005-Boots702(#$The(#$BodyPartCollectionFn #$NpcCol1006-Picard701 #$Foot-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge703")
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006-Comm-Badge703 #$ArtifactCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1006-Comm-Badge703 "Comm Badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge703(#$The(#$BodyPartCollectionFn #$NpcCol1006-Picard701 #$Neck-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002")
(cyc-assert '(#$isa #$ArtifactCol1002 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1002 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002-Red-Uniform704")
(find-or-create-constant "ArtifactCol1002")
(cyc-assert '(#$isa #$ArtifactCol1002-Red-Uniform704 #$ArtifactCol1002) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1002-Red-Uniform704 "Red Uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1002-Red-Uniform704(#$The(#$BodyPartCollectionFn #$NpcCol1006-Picard701 #$Torso))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1001")
(cyc-assert '(#$isa #$ArtifactCol1001 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1001 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1001-5---Phaser-Rifle705")
(find-or-create-constant "ArtifactCol1001")
(cyc-assert '(#$isa #$ArtifactCol1001-5---Phaser-Rifle705 #$ArtifactCol1001) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1001-5---Phaser-Rifle705 "5 Phaser Rifle") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possesses #$NpcCol1006-Picard701 #$ArtifactCol1001-5---Phaser-Rifle705) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1011")
(cyc-assert '(#$isa #$ArtifactCol1011 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1011 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1011-5-Picards-Flute706")
(find-or-create-constant "ArtifactCol1011")
(cyc-assert '(#$isa #$ArtifactCol1011-5-Picards-Flute706 #$ArtifactCol1011) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1011-5-Picards-Flute706 "5 Picard's Flute") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possesses #$NpcCol1006-Picard701 #$ArtifactCol1011-5-Picards-Flute706) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1005")
(cyc-assert '(#$isa #$NpcCol1005 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1005 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1005-Riker707")
(find-or-create-constant "NpcCol1005")
(cyc-assert '(#$isa #$NpcCol1005-Riker707 #$NpcCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1005-Riker707 "Riker") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1036")
(cyc-assert '(#$isa #$Area1036 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1005-Riker707 #$Area1036) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots708")
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005-Boots708 #$ArtifactCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1005-Boots708 "Boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1005-Boots708(#$The(#$BodyPartCollectionFn #$NpcCol1005-Riker707 #$Foot-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge709")
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006-Comm-Badge709 #$ArtifactCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1006-Comm-Badge709 "Comm Badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge709(#$The(#$BodyPartCollectionFn #$NpcCol1005-Riker707 #$Neck-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002")
(cyc-assert '(#$isa #$ArtifactCol1002 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1002 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002-Red-Uniform710")
(find-or-create-constant "ArtifactCol1002")
(cyc-assert '(#$isa #$ArtifactCol1002-Red-Uniform710 #$ArtifactCol1002) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1002-Red-Uniform710 "Red Uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1002-Red-Uniform710(#$The(#$BodyPartCollectionFn #$NpcCol1005-Riker707 #$Torso))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1012")
(cyc-assert '(#$isa #$ArtifactCol1012 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1012 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1012-1-1012-1---Trombone711")
(find-or-create-constant "ArtifactCol1012")
(cyc-assert '(#$isa #$ArtifactCol1012-1-1012-1---Trombone711 #$ArtifactCol1012) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1012-1-1012-1---Trombone711 "1 1012 1 Trombone") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possesses #$NpcCol1005-Riker707 #$ArtifactCol1012-1-1012-1---Trombone711) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1004")
(cyc-assert '(#$isa #$NpcCol1004 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1004 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1004-Troi712")
(find-or-create-constant "NpcCol1004")
(cyc-assert '(#$isa #$NpcCol1004-Troi712 #$NpcCol1004) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1004-Troi712 "Troi") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1007")
(cyc-assert '(#$isa #$Area1007 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1004-Troi712 #$Area1007) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots713")
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005-Boots713 #$ArtifactCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1005-Boots713 "Boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1005-Boots713(#$The(#$BodyPartCollectionFn #$NpcCol1004-Troi712 #$Foot-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge714")
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006-Comm-Badge714 #$ArtifactCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1006-Comm-Badge714 "Comm Badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge714(#$The(#$BodyPartCollectionFn #$NpcCol1004-Troi712 #$Neck-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004")
(cyc-assert '(#$isa #$ArtifactCol1004 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1004 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004-Blue-Uniform715")
(find-or-create-constant "ArtifactCol1004")
(cyc-assert '(#$isa #$ArtifactCol1004-Blue-Uniform715 #$ArtifactCol1004) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1004-Blue-Uniform715 "Blue Uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1004-Blue-Uniform715(#$The(#$BodyPartCollectionFn #$NpcCol1004-Troi712 #$Torso))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1009")
(cyc-assert '(#$isa #$NpcCol1009 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1009 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1009-Wesley716")
(find-or-create-constant "NpcCol1009")
(cyc-assert '(#$isa #$NpcCol1009-Wesley716 #$NpcCol1009) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1009-Wesley716 "Wesley") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1016")
(cyc-assert '(#$isa #$Area1016 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1009-Wesley716 #$Area1016) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots717")
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005-Boots717 #$ArtifactCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1005-Boots717 "Boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1005-Boots717(#$The(#$BodyPartCollectionFn #$NpcCol1009-Wesley716 #$Foot-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge718")
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006-Comm-Badge718 #$ArtifactCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1006-Comm-Badge718 "Comm Badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge718(#$The(#$BodyPartCollectionFn #$NpcCol1009-Wesley716 #$Neck-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002")
(cyc-assert '(#$isa #$ArtifactCol1002 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1002 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002-Red-Uniform719")
(find-or-create-constant "ArtifactCol1002")
(cyc-assert '(#$isa #$ArtifactCol1002-Red-Uniform719 #$ArtifactCol1002) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1002-Red-Uniform719 "Red Uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1002-Red-Uniform719(#$The(#$BodyPartCollectionFn #$NpcCol1009-Wesley716 #$Torso))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1002")
(cyc-assert '(#$isa #$NpcCol1002 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1002 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1002-Worf720")
(find-or-create-constant "NpcCol1002")
(cyc-assert '(#$isa #$NpcCol1002-Worf720 #$NpcCol1002) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1002-Worf720 "Worf") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1025")
(cyc-assert '(#$isa #$Area1025 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1002-Worf720 #$Area1025) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots721")
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005-Boots721 #$ArtifactCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1005-Boots721 "Boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1005-Boots721(#$The(#$BodyPartCollectionFn #$NpcCol1002-Worf720 #$Foot-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge722")
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006-Comm-Badge722 #$ArtifactCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1006-Comm-Badge722 "Comm Badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge722(#$The(#$BodyPartCollectionFn #$NpcCol1002-Worf720 #$Neck-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003")
(cyc-assert '(#$isa #$ArtifactCol1003 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1003 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003-Gold-Uniform723")
(find-or-create-constant "ArtifactCol1003")
(cyc-assert '(#$isa #$ArtifactCol1003-Gold-Uniform723 #$ArtifactCol1003) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1003-Gold-Uniform723 "Gold Uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1003-Gold-Uniform723(#$The(#$BodyPartCollectionFn #$NpcCol1002-Worf720 #$Torso))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1000")
(cyc-assert '(#$isa #$ArtifactCol1000 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1000 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1000-1000-10-Phaser724")
(find-or-create-constant "ArtifactCol1000")
(cyc-assert '(#$isa #$ArtifactCol1000-1000-10-Phaser724 #$ArtifactCol1000) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1000-1000-10-Phaser724 "1000 10 Phaser") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$possesses #$NpcCol1002-Worf720 #$ArtifactCol1000-1000-10-Phaser724) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1007")
(cyc-assert '(#$isa #$ArtifactCol1007 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1007 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1007-Sash725")
(find-or-create-constant "ArtifactCol1007")
(cyc-assert '(#$isa #$ArtifactCol1007-Sash725 #$ArtifactCol1007) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1007-Sash725 "Sash") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1007-Sash725(#$The(#$BodyPartCollectionFn #$NpcCol1002-Worf720 #$Chest-BodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1010")
(cyc-assert '(#$isa #$NpcCol1010 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1010 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1010-Livingston726")
(find-or-create-constant "NpcCol1010")
(cyc-assert '(#$isa #$NpcCol1010-Livingston726 #$NpcCol1010) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1010-Livingston726 "Livingston") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1035")
(cyc-assert '(#$isa #$Area1035 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1010-Livingston726 #$Area1035) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1011")
(cyc-assert '(#$isa #$NpcCol1011 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1011 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1011-Spot727")
(find-or-create-constant "NpcCol1011")
(cyc-assert '(#$isa #$NpcCol1011-Spot727 #$NpcCol1011) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1011-Spot727 "Spot") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1003")
(cyc-assert '(#$isa #$Area1003 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1011-Spot727 #$Area1003) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1012")
(cyc-assert '(#$isa #$NpcCol1012 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1012 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1012-Ensign728")
(find-or-create-constant "NpcCol1012")
(cyc-assert '(#$isa #$NpcCol1012-Ensign728 #$NpcCol1012) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1012-Ensign728 "Ensign") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1000")
(cyc-assert '(#$isa #$Area1000 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1012-Ensign728 #$Area1000) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots729")
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005-Boots729 #$ArtifactCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1005-Boots729 "Boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1005-Boots729(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign728 #$Foot-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge730")
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006-Comm-Badge730 #$ArtifactCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1006-Comm-Badge730 "Comm Badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge730(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign728 #$Neck-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003")
(cyc-assert '(#$isa #$ArtifactCol1003 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1003 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003-Gold-Uniform731")
(find-or-create-constant "ArtifactCol1003")
(cyc-assert '(#$isa #$ArtifactCol1003-Gold-Uniform731 #$ArtifactCol1003) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1003-Gold-Uniform731 "Gold Uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1003-Gold-Uniform731(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign728 #$Torso))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1012")
(cyc-assert '(#$isa #$NpcCol1012 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1012 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1012-Ensign732")
(find-or-create-constant "NpcCol1012")
(cyc-assert '(#$isa #$NpcCol1012-Ensign732 #$NpcCol1012) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1012-Ensign732 "Ensign") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1004")
(cyc-assert '(#$isa #$Area1004 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1012-Ensign732 #$Area1004) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots733")
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005-Boots733 #$ArtifactCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1005-Boots733 "Boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1005-Boots733(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign732 #$Foot-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge734")
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006-Comm-Badge734 #$ArtifactCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1006-Comm-Badge734 "Comm Badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge734(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign732 #$Neck-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003")
(cyc-assert '(#$isa #$ArtifactCol1003 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1003 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1003-Gold-Uniform735")
(find-or-create-constant "ArtifactCol1003")
(cyc-assert '(#$isa #$ArtifactCol1003-Gold-Uniform735 #$ArtifactCol1003) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1003-Gold-Uniform735 "Gold Uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1003-Gold-Uniform735(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign732 #$Torso))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1012")
(cyc-assert '(#$isa #$NpcCol1012 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1012 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1012-Ensign736")
(find-or-create-constant "NpcCol1012")
(cyc-assert '(#$isa #$NpcCol1012-Ensign736 #$NpcCol1012) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1012-Ensign736 "Ensign") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1011")
(cyc-assert '(#$isa #$Area1011 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1012-Ensign736 #$Area1011) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots737")
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005-Boots737 #$ArtifactCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1005-Boots737 "Boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1005-Boots737(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign736 #$Foot-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge738")
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006-Comm-Badge738 #$ArtifactCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1006-Comm-Badge738 "Comm Badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge738(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign736 #$Neck-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002")
(cyc-assert '(#$isa #$ArtifactCol1002 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1002 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002-Red-Uniform739")
(find-or-create-constant "ArtifactCol1002")
(cyc-assert '(#$isa #$ArtifactCol1002-Red-Uniform739 #$ArtifactCol1002) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1002-Red-Uniform739 "Red Uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1002-Red-Uniform739(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign736 #$Torso))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1012")
(cyc-assert '(#$isa #$NpcCol1012 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1012 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1012-Ensign740")
(find-or-create-constant "NpcCol1012")
(cyc-assert '(#$isa #$NpcCol1012-Ensign740 #$NpcCol1012) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1012-Ensign740 "Ensign") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1020")
(cyc-assert '(#$isa #$Area1020 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1012-Ensign740 #$Area1020) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots741")
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005-Boots741 #$ArtifactCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1005-Boots741 "Boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1005-Boots741(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign740 #$Foot-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge742")
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006-Comm-Badge742 #$ArtifactCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1006-Comm-Badge742 "Comm Badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge742(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign740 #$Neck-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002")
(cyc-assert '(#$isa #$ArtifactCol1002 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1002 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1002-Red-Uniform743")
(find-or-create-constant "ArtifactCol1002")
(cyc-assert '(#$isa #$ArtifactCol1002-Red-Uniform743 #$ArtifactCol1002) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1002-Red-Uniform743 "Red Uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1002-Red-Uniform743(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign740 #$Torso))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1012")
(cyc-assert '(#$isa #$NpcCol1012 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1012 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1012-Ensign744")
(find-or-create-constant "NpcCol1012")
(cyc-assert '(#$isa #$NpcCol1012-Ensign744 #$NpcCol1012) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1012-Ensign744 "Ensign") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1024")
(cyc-assert '(#$isa #$Area1024 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1012-Ensign744 #$Area1024) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots745")
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005-Boots745 #$ArtifactCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1005-Boots745 "Boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1005-Boots745(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign744 #$Foot-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge746")
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006-Comm-Badge746 #$ArtifactCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1006-Comm-Badge746 "Comm Badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge746(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign744 #$Neck-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004")
(cyc-assert '(#$isa #$ArtifactCol1004 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1004 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004-Blue-Uniform747")
(find-or-create-constant "ArtifactCol1004")
(cyc-assert '(#$isa #$ArtifactCol1004-Blue-Uniform747 #$ArtifactCol1004) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1004-Blue-Uniform747 "Blue Uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1004-Blue-Uniform747(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign744 #$Torso))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1012")
(cyc-assert '(#$isa #$NpcCol1012 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1012 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1012-Ensign748")
(find-or-create-constant "NpcCol1012")
(cyc-assert '(#$isa #$NpcCol1012-Ensign748 #$NpcCol1012) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1012-Ensign748 "Ensign") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1022")
(cyc-assert '(#$isa #$Area1022 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1012-Ensign748 #$Area1022) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots749")
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005-Boots749 #$ArtifactCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1005-Boots749 "Boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1005-Boots749(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign748 #$Foot-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge750")
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006-Comm-Badge750 #$ArtifactCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1006-Comm-Badge750 "Comm Badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge750(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign748 #$Neck-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004")
(cyc-assert '(#$isa #$ArtifactCol1004 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1004 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004-Blue-Uniform751")
(find-or-create-constant "ArtifactCol1004")
(cyc-assert '(#$isa #$ArtifactCol1004-Blue-Uniform751 #$ArtifactCol1004) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1004-Blue-Uniform751 "Blue Uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1004-Blue-Uniform751(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign748 #$Torso))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "NpcCol1012")
(cyc-assert '(#$isa #$NpcCol1012 #$BPVAgentType) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$genls #$NpcCol1012 #$Agent-Generic) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(find-or-create-constant "NpcCol1012-Ensign752")
(find-or-create-constant "NpcCol1012")
(cyc-assert '(#$isa #$NpcCol1012-Ensign752 #$NpcCol1012) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$NpcCol1012-Ensign752 "Ensign") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1036")
(cyc-assert '(#$isa #$Area1036 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$NpcCol1012-Ensign752 #$Area1036) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1005 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1005-Boots753")
(find-or-create-constant "ArtifactCol1005")
(cyc-assert '(#$isa #$ArtifactCol1005-Boots753 #$ArtifactCol1005) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1005-Boots753 "Boots") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1005-Boots753(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign752 #$Foot-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1006 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1006-Comm-Badge754")
(find-or-create-constant "ArtifactCol1006")
(cyc-assert '(#$isa #$ArtifactCol1006-Comm-Badge754 #$ArtifactCol1006) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1006-Comm-Badge754 "Comm Badge") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1006-Comm-Badge754(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign752 #$Neck-AnimalBodyPart))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004")
(cyc-assert '(#$isa #$ArtifactCol1004 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1004 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1004-Blue-Uniform755")
(find-or-create-constant "ArtifactCol1004")
(cyc-assert '(#$isa #$ArtifactCol1004-Blue-Uniform755 #$ArtifactCol1004) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1004-Blue-Uniform755 "Blue Uniform") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$wornOn #$ArtifactCol1004-Blue-Uniform755(#$The(#$BodyPartCollectionFn #$NpcCol1012-Ensign752 #$Torso))) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1010")
(cyc-assert '(#$isa #$ArtifactCol1010 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1010 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1010-O-0-1010-3-1000-Dilithium-Crystal756")
(find-or-create-constant "ArtifactCol1010")
(cyc-assert '(#$isa #$ArtifactCol1010-O-0-1010-3-1000-Dilithium-Crystal756 #$ArtifactCol1010) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1010-O-0-1010-3-1000-Dilithium-Crystal756 "O 0 1010 3 1000 Dilithium Crystal") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1000")
(cyc-assert '(#$isa #$Area1000 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$ArtifactCol1010-O-0-1010-3-1000-Dilithium-Crystal756 #$Area1000) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1010")
(cyc-assert '(#$isa #$ArtifactCol1010 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1010 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1010-O-0-1010-3-1000-Dilithium-Crystal757")
(find-or-create-constant "ArtifactCol1010")
(cyc-assert '(#$isa #$ArtifactCol1010-O-0-1010-3-1000-Dilithium-Crystal757 #$ArtifactCol1010) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1010-O-0-1010-3-1000-Dilithium-Crystal757 "O 0 1010 3 1000 Dilithium Crystal") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1000")
(cyc-assert '(#$isa #$Area1000 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$ArtifactCol1010-O-0-1010-3-1000-Dilithium-Crystal757 #$Area1000) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1010")
(cyc-assert '(#$isa #$ArtifactCol1010 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1010 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1010-O-0-1010-3-1000-Dilithium-Crystal758")
(find-or-create-constant "ArtifactCol1010")
(cyc-assert '(#$isa #$ArtifactCol1010-O-0-1010-3-1000-Dilithium-Crystal758 #$ArtifactCol1010) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1010-O-0-1010-3-1000-Dilithium-Crystal758 "O 0 1010 3 1000 Dilithium Crystal") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1000")
(cyc-assert '(#$isa #$Area1000 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$ArtifactCol1010-O-0-1010-3-1000-Dilithium-Crystal758 #$Area1000) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009")
(cyc-assert '(#$isa #$ArtifactCol1009 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1009 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009-O-0-1009-3-1015-Tricorder759")
(find-or-create-constant "ArtifactCol1009")
(cyc-assert '(#$isa #$ArtifactCol1009-O-0-1009-3-1015-Tricorder759 #$ArtifactCol1009) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1009-O-0-1009-3-1015-Tricorder759 "O 0 1009 3 1015 Tricorder") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1015")
(cyc-assert '(#$isa #$Area1015 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$ArtifactCol1009-O-0-1009-3-1015-Tricorder759 #$Area1015) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009")
(cyc-assert '(#$isa #$ArtifactCol1009 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1009 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009-O-0-1009-3-1015-Tricorder760")
(find-or-create-constant "ArtifactCol1009")
(cyc-assert '(#$isa #$ArtifactCol1009-O-0-1009-3-1015-Tricorder760 #$ArtifactCol1009) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1009-O-0-1009-3-1015-Tricorder760 "O 0 1009 3 1015 Tricorder") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1015")
(cyc-assert '(#$isa #$Area1015 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$ArtifactCol1009-O-0-1009-3-1015-Tricorder760 #$Area1015) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009")
(cyc-assert '(#$isa #$ArtifactCol1009 #$ArtifactTypeByGenericCategory) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$isa #$ArtifactCol1009 #$BPVItemType) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "ArtifactCol1009-O-0-1009-3-1015-Tricorder761")
(find-or-create-constant "ArtifactCol1009")
(cyc-assert '(#$isa #$ArtifactCol1009-O-0-1009-3-1015-Tricorder761 #$ArtifactCol1009) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(cyc-assert '(#$properNameStrings #$ArtifactCol1009-O-0-1009-3-1015-Tricorder761 "O 0 1009 3 1015 Tricorder") #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1015")
(cyc-assert '(#$isa #$Area1015 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$in-ContCompletely #$ArtifactCol1009-O-0-1009-3-1015-Tricorder761 #$Area1015) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1022")
(cyc-assert '(#$isa #$Area1022 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1022 #$South-Generally) #$ClosedPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
(find-or-create-constant "Area1039")
(cyc-assert '(#$isa #$Area1039 #$BPVLocation) #$UniversalVocabularyMt '(:DIRECTION :FORWARD))
(cyc-assert '(#$isa(#$BoundsOfDirectionFn #$Area1039 #$North-Generally) #$ClosedPortal) #$osim:SituationMt '(:DIRECTION :FORWARD :STRENGTH :MONOTONIC) )
;load file '10.zon.kif'
;load file 'CoffeeMud_4_7_4[1].zip'
;load file 'map.txt'
;load file 'MICRO-IRAQ-ART-CONVT.zip'
;load file 'readme.txt'
;load file 'worlds.rar'
;load file 'zone.lst'
