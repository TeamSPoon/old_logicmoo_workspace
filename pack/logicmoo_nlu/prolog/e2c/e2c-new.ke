
In Mt: BaseKB.
Constant: plainCycConstant.
In Mt: BaseKB.
f: (and (isa plainCycConstant UnaryPredicate) (arg1Isa plainCycConstant Thing)).


f: (genls GenlPredsPreservingFunction  PredicateDenotingFunction).
f: (isa ThePrototypicalFunctionWithAutoGeneratedCorrespondingPredicate  PredicateDenotingFunction).
f: (resultGenlArg MathBugTypeFn 3).

In Mt: BaseKB.
Constant: mainClass.
In Mt: BaseKB.
f: (and (isa mainClass BinaryPredicate) (arg1Isa mainClass Thing)(arg2Isa mainClass Collection)).


In Mt: BaseKB.
Constant: mainPrefix.
In Mt: BaseKB.
f: (and (isa mainPrefix Predicate) (arity mainPrefix 3) (arg1Isa mainPrefix Thing)(arg2Isa mainPrefix CharacterString)).


In Mt: BaseKB.
Constant: mainType.
In Mt: BaseKB.
f: (and (isa mainType UnaryPredicate) (arg1Isa mainType Thing)).

f: (mainType MicrotheoryType).
f: (mainType Microtheory).
f: (mainType Action).
f: (mainType Event).

f: (not (mainClass ??Any Thing)).

Constant: typeLabel.
In Mt: BaseKB.
f: (and (isa typeLabel Predicate)(arity typeLabel 5)).
f: (comment typeLabel "Maps CycL Collections to the PrologMUD naming conventions.").

f: (and 
(typeLabel 4000 Action "act" "tAct" "iAct_")
(typeLabel 3900 Goal  "goal" "tGoal" "iGoal_" )
(typeLabel 3800 Capability  "cap"  "tCap" "cap")
(typeLabel 3700 IBTContentType "tIbo" "tIbo" "ibo")
(typeLabel 3600 Event  "tEvent" "tEvent" "iEvent_")  
(typeLabel 3500 Situation  "state" "tState" "iState_")
(typeLabel 3400 FormulaTemplate  "ui_" "uiTopic_" "iUI_")
(typeLabel 3300 Topic  "ui_" "uiTopic_" "iUI_")
(typeLabel 3200 PhysicalPartOfObject "tPartType" "tPartType" "iPartType_")
(typeLabel 3100 SpecifiedPartTypeCollection "ttPartType" "ttPartType" "tPartType")
(typeLabel 3000 OrganismClassificationType  "tTypeOf" "ttTypeOf" "tClassificationOf_")

(typeLabel 2800 SpaceRegion "tPlace"  "tPlaceLike" "iLoc_")

(typeLabel 2700  TwoDimensionalThing     "tPlacePartOf"  "tPlacePartOf" "iLocPart_")
;; (typeLabel AbstractVisualStructure "tPlacePartOf"  ttPlacePartOf" "iLocPart_")
(typeLabel 2600 OpenGISGeometry         "tPlacePartOf"  "tPlacePartOf" "iLocPart_")

;; time can be in these forms:  TimePoint,Interval/Segment,  
(typeLabel 2500 TimeInterval  "timeOf" "timeOf"  "iTimeOf_")
(typeLabel 2400 TimeParameter  "timeOf" "timeOf" "iTimeOf_")
(typeLabel 2300 ScalarInterval  "v" "vt" "")
(typeLabel 2200 Quantity  "quant" "vt" "v")
(typeLabel 2100 LinguisticObject "x" "xt" "x")
;; (typeLabel TemplateParsingSyntacticConstraint "x" "xt" "x")
(typeLabel 2000 LinguisticObjectType "xt" "xt" "xt")
(typeLabel 1900 PersonTypeByActivity  "mob" "mob" "mob")
(typeLabel 1800 PredicateType  "rt" "ttRel" "rt")
(typeLabel 1700 FunctionType  "iFunc_" "ttRel" "rt")
(typeLabel 1600 RelationshipType  "iRel_" "ttRel" "rt")
(typeLabel 1500 SubLExpressionType  "ft" "ft" "ft")
(typeLabel 1400 Group  "tGrouped" "tGrouped" "iGroup_")
(typeLabel 1300 Artifact  "tObject" "tObject" "iObj_")  
(typeLabel 1200 Place  "tPlace"  "ttPlaceLike" "iLoc_")
(typeLabel 1100 Microtheory  "mt" "mt" "mt")
(typeLabel 1000 PropositionalConceptualWork "cw" "cw" "iCW_")
(typeLabel 900 ConceptualWork "cw" "cw" "iCW_")
(typeLabel 800 Agent-Generic  "mob" "mob" "")
(typeLabel 700 InformationBearingObject "ibo" "ibo" "iIBO_")
(typeLabel 600 AnalogyEntityWithStructuralEvaluation "cw" "cw" "iCW_")

(typeLabel 500 TheList "u" "ut" "u")
;; (typeLabel Tuple  "u" "ut" "u")
(typeLabel 400 ProgramObject "s_cw" "s_cw" "s_iCW_")
(typeLabel 300 Field-LogicalOrPhysical "s_db" "s_db" "s_iDB_")
(typeLabel 200 Schema-LogicalOrPhysical "s_db" "s_db" "s_iDB_")
(typeLabel 150 ConventionalClassificationType  "tTypeOf" "ttTypeOf" "tClassificationOf_")
(typeLabel 100 CycSubjectClump "ui_" "uiTopic_" "iUI_")
(typeLabel 21 Predicate  "iPred_" "rt" "")
(typeLabel 20 Function-Denotational  "iFunc_" "rt" "")
(typeLabel 19 Relation  "iRel_" "rt" "")
).

Direction: :forward.
f: (implies (typeLabel ??PRIORITY ?MC ??A ??B ??C) (ist BaseKB (mainType ?MC))).

Direction: :forward.
;;TOSLOW f: (implies (and (typeLabel ?PRIORITY ?T ??ISA ?GENLS ??RESULTISA) (resultGenl ?C ?T) (quotedIsa ?C CycLConstant)  ) (and (mainClass ?C ?T)(mainPrefix ?C ?GENLS (TimesFn ?PRIORITY 4)))).
Direction: :forward.
;;TOSLOW f: (implies (and (typeLabel ?PRIORITY ?T ??ISA ??GENLS ?RESULTISA) (different ?RESULTISA "") (quotedIsa ?C CycLConstant ) (resultIsa ?C ?T) ) (and (mainClass ?C ?T)(mainPrefix ?C ?RESULTISA (TimesFn ?PRIORITY 3)))).
Direction: :forward.
;;TOSLOW f: (implies (and (typeLabel ?PRIORITY ?T ??ISA ?GENLS ??RESULTISA) (genls ?C ?T)  (quotedIsa ?C CycLConstant)) (and (mainClass ?C ?T)(mainPrefix ?C ?GENLS (TimesFn ?PRIORITY  2)))).
Direction: :forward.
;;TOSLOW f: (implies (and (typeLabel ?PRIORITY ?T ?ISA ??GENLS ??RESULTISA) (quotedIsa ?C CycLConstant) (isa ?C ?T) ) (and (mainClass ?C ?T) (mainPrefix ?C ?ISA (TimesFn ?PRIORITY  1)))).

;;Direction: :forward.
;;f: (implies (and (quotedIsa ?C CycLConstant) (isa ?C MicrotheoryType) ) (mainClass ?C MicrotheoryType)).
;;Direction: :forward.
f: (implies (isa ?Col GrammaticallyEncodedDomainRestrictionType) (ist BaseKB (mainType ?Col))).
;; Direction: :forward.
;; f: (implies (and (typeGenls ??TypeType ?Col) (assertedSentence (disjointWith ?Col ??Other ))) (ist BaseKB (mainType ?Col)))

;; (cdo ((*x* 0 (+ *x* 1))) ((= *x* (constant-count))) (cyc-assert `(typeLabel plainCycConstant ,(find-constant-by-internal-id *x*)) '#$BaseKB))


Constant: RetainedThing.
In Mt: BaseKB.
f: (isa RetainedThing Collection).
collectionConventionMt: BaseKB.

Direction: :forward.
f: (implies (quotedIsa ?ARG1 IndeterminateTerm) (isa ?ARG1 RetainedThing)).


Constant: BlastedThing.
In Mt: BaseKB.
f: (isa BlastedThing Collection).
collectionConventionMt: BaseKB.

Direction: :forward.
f: (implies 
     (and (isa ?MT FictionalContext) (ist-Asserted ?MT (isa ?Arg1 ??Col)))
     (isa ?Arg1 FictionalThing)).

;;unused for now f: (disjointWith RetainedThing BlastedThing).

Direction: :forward.
;; f: (implies (isa ?X RetainedThing) (not (isa ?X BlastedThing))).

f: (and (genls HomoSapiens BlastedThing) (genls City BlastedThing) (genls SolidTangibleThing BlastedThing) (genls  Organization BlastedThing) 
        (genls MusicPerformanceAgent BlastedThing) (genls Country BlastedThing)  (genls Event BlastedThing) (genls Action BlastedThing)).

f: (and (genls FictionalThing RetainedThing)
  (genls HeavenlyBodyScaleObject RetainedThing) (isa PlanetEarth RetainedThing) (isa TheSun RetainedThing) 
  (isa TheBigBang RetainedThing)(isa MarthaStewart RetainedThing) (isa CycAdministrator RetainedThing)).





