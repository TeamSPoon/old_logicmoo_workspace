grammar sys_domain_lamps_sem lampProp : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
locProp : [[0]] . 'Proposition{}.s' -> 'Room{}.s' ;
turnedOffLamp : [] . 'Confirm{}.s' -> "turnOff" ;
turnedOnLamp : [] . 'Confirm{}.s' -> "turnOn" ;
whatLampQuestion : [] . 'SingleAsk{}.s' -> "X^lamp(X)" ;
whatLocQuestion : [] . 'SingleAsk{}.s' -> "X^loc(X)" ;
whatToTurnOffProp : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
whatToTurnOnProp : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
answerLampOff : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
answerLampOn : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
answerLocation : [[0]] . 'Proposition{}.s' -> 'Room{}.s' ;
askStatusLamp : [] . 'SingleAsk{}.s' -> "status" ;
dimmerDown : [] . 'SingleAction{}.s' -> "dimmer_down" ;
dimmerUp : [] . 'SingleAction{}.s' -> "dimmer_up" ;
questionLocation : [[0]] . 'Proposition{}.s' -> 'Room{}.s' ;
questionWhichLamp : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
turnOff : [] . 'Action{}.s' -> "turnOff" ;
turnOffThis : [] . 'SingleAction{}.s' -> "turnOff_closest" ;
turnOff_alone : [] . 'SingleAction{}.s' -> "turnOff" ;
turnOn : [] . 'Action{}.s' -> "turnOn" ;
turnOnThis : [] . 'SingleAction{}.s' -> "turnOn_closest" ;
turnOn_alone : [] . 'SingleAction{}.s' -> "turnOn" ;
ceilinglamp : [] . 'Lamp{}.s' -> "[ceilinglamp]" ;
desklamp : [] . 'Lamp{}.s' -> "[desklamp]" ;
floorlamp : [] . 'Lamp{}.s' -> "[floorlamp]" ;
tablelamp : [] . 'Lamp{}.s' -> "[tablelamp]" ;
bedroom : [] . 'Room{}.s' -> "[bedroom]" ;
hall : [] . 'Room{}.s' -> "[hall]" ;
kitchen : [] . 'Room{}.s' -> "[kitchen]" ;
livingroom : [] . 'Room{}.s' -> "[livingroom]" ;
accomodate : [] . 'Other_ICM_Followed{}.s' -> "accomodate" ;
loadplan : [] . 'Other_ICM{}.s' -> "loadplan" ;
makeActualListIssue : [[0]] . 'IssueList{}.s' -> "set" "(" "[" 'ListIssue{}.s' "]" ")" ;
makeAskIssue : [[], [0]] . 'AskIssue{}.s' -> "X" "^" 'Ask{}.s' "(" "X" ")" ;
makeAskSet : [[0]] . 'SystemAsk{}.s' -> 'IssueList{}.s' ;
makeBasicAsk : [] . 'SystemAsk{}.s' -> "X" "^" "action" "(" "X" ")" ;
makeConfirmMove : [[0]] . 'DMove{}.s' -> "confirm" "(" 'Confirm{}.s' ")" ;
makeDMList : [[0], [1]] . 'DMoves{}.s' -> 'DMove{}.s' "," 'DMoves{}.s' ;
makeDMPair : [[0], [1]] . 'DMoves{}.s' -> 'DMove{}.s' "," 'DMove{}.s' ;
makeICMAccIssue : [[0], [1]] . 'ICM{}.s' -> 'Acc_ICM_Followed{}.s' ":" 'Issue{}.s' ;
makeICMOther : [[0]] . 'ICM{}.s' -> 'Other_ICM{}.s' ;
makeICMOtherIssue : [[0], [1]] . 'ICM{}.s' -> 'Other_ICM_Followed{}.s' ":" 'ListItem{}.s' ;
makeICMOtherReq : [[], [0], [1]] . 'ICM{}.s' -> 'Other_ICM_Followed{}.s' ":" 'Action{}.s' ;
makeICMPerString : [[0]] . 'ICM{}.s' -> 'Per_ICM_Followed{}.s' ;
makeICMSem : [[0]] . 'ICM{}.s' -> 'Sem_ICM{}.s' ;
makeICMSemMoveAnswer : [[], [0], [1]] . 'ICM{}.s' -> 'Sem_ICM_Followed{}.s' ":" 'Answer{}.s' ;
makeICMSemMoveAsk : [[], [0], [1]] . 'ICM{}.s' -> 'Sem_ICM_Followed{}.s' ":" 'Ask{}.s' ;
makeICMSemMoveReq : [[0], [1]] . 'ICM{}.s' -> 'Sem_ICM_Followed{}.s' ":" 'Request{}.s' ;
makeICMUnd : [[0]] . 'ICM{}.s' -> 'Und_ICM{}.s' ;
makeICMUndProp : [[], [0], [1]] . 'ICM{}.s' -> 'Und_ICM_Followed{}.s' ":" "usr" "*" 'Proposition{}.s' ;
makeInstantiatedAsk : [[], [0]] . 'SystemAsk{}.s' -> "action" "(" 'Action{}.s' ")" ;
makeInstantiatedAskSingle : [[0]] . 'SystemAsk{}.s' -> "action" "(" 'SingleAction{}.s' ")" ;
makeIssueAsk : [[0]] . 'Issue{}.s' -> 'AskIssue{}.s' ;
makeIssueList : [[0]] . 'Issue{}.s' -> 'ListIssue{}.s' ;
makeIssueProp : [[0]] . 'Issue{}.s' -> 'PropIssue{}.s' ;
makeListIssue : [[0], [1]] . 'ListIssue{}.s' -> 'ListItem{}.s' "," 'ListItem{}.s' ;
makeListIssue2 : [[0], [1]] . 'ListIssue{}.s' -> 'ListItem{}.s' "," 'ListIssue{}.s' ;
makeListItemAction : [[], [0]] . 'ListItem{}.s' -> "action" "(" 'Action{}.s' ")" ;
makeListItemAction : [[], [0]] . 'ListItem{}.s' -> 'Action{}.s' ;
makeListItemAsk : [[0]] . 'ListItem{}.s' -> "issue" "(" 'AskIssue{}.s' ")" ;
makeListItemSingleAction : [[0]] . 'ListItem{}.s' -> "action" "(" 'SingleAction{}.s' ")" ;
makeListItemSingleAction : [[0]] . 'ListItem{}.s' -> 'SingleAction{}.s' ;
makePropIssue : [[], [0]] . 'PropIssue{}.s' -> 'Proposition{}.s' ;
makeReport : [[0], [1]] . 'Report{}.s' -> "report" "(" 'SingleAction{}.s' "," 'Status{}.s' ")" ;
makeReportMove : [[0]] . 'DMove{}.s' -> 'Report{}.s' ;
makeSofDMoves : [[0]] . 'S{}.s' -> "[" 'DMoves{}.s' "]" ;
makeSystemAsk : [[0]] . 'DMove{}.s' -> "ask" "(" 'SystemAsk{}.s' ")" ;
reaccomodate : [] . 'Other_ICM_Followed{}.s' -> "reaccomodate" ;
reraise : [] . 'Other_ICM{}.s' -> "reraise" ;
reraise_followed : [] . 'Other_ICM_Followed{}.s' -> "reraise" ;
sem_neg : [] . 'Sem_ICM{}.s' -> "sem" "*" "neg" ;
sem_pos : [] . 'Sem_ICM{}.s' -> "sem" "*" "pos" ;
sem_pos_followed : [] . 'Sem_ICM_Followed{}.s' -> "sem" "*" "pos" ;
status_done : [] . 'Status{}.s' -> "done" ;
status_failed : [] . 'Status{}.s' -> "failed" ;
status_initiated : [] . 'Status{}.s' -> "initiated" ;
status_pending : [] . 'Status{}.s' -> "pending" ;
und_int : [] . 'Und_ICM_Followed{}.s' -> "und" "*" "int" ;
und_neg : [] . 'Und_ICM{}.s' -> "und" "*" "neg" ;
und_pos : [] . 'Und_ICM{}.s' -> "und" "*" "pos" ;
und_pos_followed : [] . 'Und_ICM_Followed{}.s' -> "und" "*" "pos" ;
acc_neg : [] . 'Acc_ICM_Followed{}.s' -> "acc" "*" "neg" ;
acc_neg_alone : [] . 'Acc_ICM{}.s' -> "acc" "*" "neg" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "acc" "*" "pos" ;
bye_command : [] . 'Quit{}.s' -> "quit" ;
greet_command : [] . 'Greet{}.s' -> "greet" ;
help_command : [] . 'SingleAction{}.s' -> "help" ;
makeAnswer : [[], [0]] . 'Answer{}.s' -> "answer" "(" 'Proposition{}.s' ")" ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{}.s' ;
makeAsk : [[0]] . 'DMove{}.s' -> "ask" "(" 'SingleAsk{}.s' ")" ;
makeGreetMove : [[0]] . 'DMove{}.s' -> 'Greet{}.s' ;
makeICMAcc : [[0]] . 'ICM{}.s' -> 'Acc_ICM{}.s' ;
makeICMMove : [[0]] . 'DMove{}.s' -> "icm" ":" 'ICM{}.s' ;
makeICMPer : [[0]] . 'ICM{}.s' -> 'Per_ICM{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{}.s' -> "answer" "(" "not" "(" 'Proposition{}.s' ")" ")" ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{}.s' ;
makeQuitMove : [[0]] . 'DMove{}.s' -> 'Quit{}.s' ;
makeRequest : [[0]] . 'Request{}.s' -> "request" "(" 'SingleAction{}.s' ")" ;
makeRequestMove : [[0]] . 'DMove{}.s' -> 'Request{}.s' ;
makeS : [[0]] . 'S{}.s' -> "[" 'DMove{}.s' "]" ;
no : [] . 'Answer{}.s' -> "no" ;
per_int : [] . 'Per_ICM{}.s' -> "per" "*" "int" ;
per_neg : [] . 'Per_ICM{}.s' -> "per" "*" "neg" ;
per_pos : [] . 'Per_ICM_Followed{}.s' -> "per" "*" "pos" ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> "X" "^" 'Ask{}.s' "(" "X" ")" ;
top_command : [] . 'SingleAction{}.s' -> "top" ;
yes : [] . 'Answer{}.s' -> "yes" ;
end grammar
grammar sys_domain_lamps_svenska lampProp : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
locProp : [[0]] . 'Proposition{}.s' -> 'Room{}.s' ;
turnedOffLamp : [] . 'Confirm{}.s' -> "lampan" "är" "släckt" ;
turnedOnLamp : [] . 'Confirm{}.s' -> "lampan" "är" "tänd" ;
whatLampQuestion : [] . 'SingleAsk{}.s' -> "vilken" "lampa" "menar" "du" ;
whatLocQuestion : [] . 'SingleAsk{}.s' -> "vilket" "rum" "menar" "du" ;
whatToTurnOffProp : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
whatToTurnOnProp : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
answerLampOff : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
answerLampOn : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
answerLocation : [[0]] . 'Proposition{}.s' -> 'Room{}.s' ;
askStatusLamp : [] . 'SingleAsk{}.s' -> "vilka" "lampor" "är" "tända" ;
dimmerDown : [] . 'SingleAction{}.s' -> "dimma" "ner" ;
dimmerUp : [] . 'SingleAction{}.s' -> "dimma" "upp" ;
questionLocation : [[0]] . 'Proposition{}.s' -> 'Room{}.s' ;
questionWhichLamp : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
turnOff : [] . 'Action{}.s' -> "släcka" ;
turnOffThis : [] . 'SingleAction{}.s' -> "släcka" ;
turnOff_alone : [] . 'SingleAction{}.s' -> "släcka" "lampan" ;
turnOn : [] . 'Action{}.s' -> "tända" ;
turnOnThis : [] . 'SingleAction{}.s' -> "tända" ;
turnOn_alone : [] . 'SingleAction{}.s' -> "tända" "lampan" ;
ceilinglamp : [] . 'Lamp{}.s' -> "taklampan" ;
ceilinglamp : [] . 'Lamp{}.s' -> "en" "taklampa" ;
desklamp : [] . 'Lamp{}.s' -> "skrivbordslampan" ;
desklamp : [] . 'Lamp{}.s' -> "en" "skrivbordslampa" ;
floorlamp : [] . 'Lamp{}.s' -> "golvlampan" ;
floorlamp : [] . 'Lamp{}.s' -> "en" "golvlampa" ;
tablelamp : [] . 'Lamp{}.s' -> "bordslampan" ;
tablelamp : [] . 'Lamp{}.s' -> "en" "bordslampa" ;
bedroom : [] . 'Room{}.s' -> "sovrumet" ;
hall : [] . 'Room{}.s' -> "hallen" ;
kitchen : [] . 'Room{}.s' -> "köket" ;
livingroom : [] . 'Room{}.s' -> "vardagsrumet" ;
accomodate : [] . 'Other_ICM_Followed{}.s' -> "jag" "antar" "att" "du" "menar" ;
loadplan : [] . 'Other_ICM{}.s' -> "låt" "oss" "se" "." ;
makeAskIssue : [[], [0]] . 'AskIssue{}.s' -> 'Ask{}.s' ;
makeAskSet : [[0]] . 'SystemAsk{}.s' -> "vill" "du" 'IssueList{}.s' ;
makeBasicAsk : [] . 'SystemAsk{}.s' -> "vad" "kan" "jag" "göra" "för" "dig" ;
makeConfirmMove : [[0]] . 'DMove{}.s' -> 'Confirm{}.s' "." ;
makeDMList : [[0], [1]] . 'DMoves{}.s' -> 'DMove{}.s' 'DMoves{}.s' ;
makeDMPair : [[0], [1]] . 'DMoves{}.s' -> 'DMove{}.s' 'DMove{}.s' ;
makeICMAccIssue : [[0], [1]] . 'ICM{}.s' -> 'Acc_ICM_Followed{}.s' 'Issue{}.s' ;
makeICMOther : [[0]] . 'ICM{}.s' -> 'Other_ICM{}.s' "." ;
makeICMOtherIssue : [[0], [1]] . 'ICM{}.s' -> 'Other_ICM_Followed{}.s' 'ListItem{}.s' "." ;
makeICMOtherReq : [[], [0], [1]] . 'ICM{}.s' -> 'Other_ICM_Followed{}.s' 'Action{}.s' "." ;
makeICMPerString : [[0]] . 'ICM{}.s' -> 'Per_ICM_Followed{}.s' ;
makeICMSem : [[0]] . 'ICM{}.s' -> 'Sem_ICM{}.s' ;
makeICMSemMoveAnswer : [[], [0], [1]] . 'ICM{}.s' -> 'Sem_ICM_Followed{}.s' "med" 'Answer{}.s' "." ;
makeICMSemMoveAsk : [[], [0], [1]] . 'ICM{}.s' -> 'Sem_ICM_Followed{}.s' 'Ask{}.s' "." ;
makeICMSemMoveReq : [[0], [1]] . 'ICM{}.s' -> 'Sem_ICM_Followed{}.s' 'Request{}.s' "." ;
makeICMUnd : [[0]] . 'ICM{}.s' -> 'Und_ICM{}.s' ;
makeICMUndProp : [[], [1], [0]] . 'ICM{}.s' -> 'Proposition{}.s' "," 'Und_ICM_Followed{}.s' ;
makeInstantiatedAsk : [[], [0]] . 'SystemAsk{}.s' -> "vill" "du" 'Action{}.s' ;
makeInstantiatedAskSingle : [[0]] . 'SystemAsk{}.s' -> "vill" "du" 'SingleAction{}.s' ;
makeIssueAsk : [[0]] . 'Issue{}.s' -> 'AskIssue{}.s' ;
makeIssueList : [[0]] . 'Issue{}.s' -> 'ListIssue{}.s' ;
makeIssueProp : [[0]] . 'Issue{}.s' -> 'PropIssue{}.s' ;
makeListIssue : [[0], [1]] . 'ListIssue{}.s' -> 'ListItem{}.s' "eller" 'ListItem{}.s' ;
makeListItemAction : [[], [0]] . 'ListItem{}.s' -> 'Action{}.s' ;
makeListItemAsk : [[0]] . 'ListItem{}.s' -> "fråga" "om" 'AskIssue{}.s' ;
makeListItemSingleAction : [[0]] . 'ListItem{}.s' -> 'SingleAction{}.s' ;
makePropIssue : [[], [0]] . 'PropIssue{}.s' -> 'Proposition{}.s' ;
makeReport : [[1], [0]] . 'Report{}.s' -> 'Status{}.s' 'SingleAction{}.s' "." ;
makeReportMove : [[0]] . 'DMove{}.s' -> 'Report{}.s' ;
makeSofDMoves : [[0]] . 'S{}.s' -> 'DMoves{}.s' ;
makeSystemAsk : [[0]] . 'DMove{}.s' -> 'SystemAsk{}.s' "?" ;
reaccomodate : [] . 'Other_ICM_Followed{}.s' -> "gå" "tillbaks" "till" ;
reraise : [] . 'Other_ICM{}.s' -> "så" "," ;
reraise_followed : [] . 'Other_ICM_Followed{}.s' -> "så" "," ;
sem_neg : [] . 'Sem_ICM{}.s' -> "förlåt" "jag" "förstår" "inte" "vad" "du" "menar." ;
sem_pos : [] . 'Sem_ICM{}.s' -> "okej" ;
sem_pos_followed : [] . 'Sem_ICM_Followed{}.s' -> . ;
status_done : [] . 'Status{}.s' -> "lyckades" "med" "att" ;
status_failed : [] . 'Status{}.s' -> "misslyckades" "med" "att" ;
status_initiated : [] . 'Status{}.s' -> "började" "med" "att" ;
status_pending : [] . 'Status{}.s' -> "avvaktar" "med" "att" ;
und_int : [] . 'Und_ICM_Followed{}.s' -> "är" "det" "korrekt?" ;
und_neg : [] . 'Und_ICM{}.s' -> "jag" "förstår" "inte" "vad" "du" "menar." ;
und_pos : [] . 'Und_ICM{}.s' -> "okej." ;
und_pos_followed : [] . 'Und_ICM_Followed{}.s' -> "." ;
acc_neg : [] . 'Acc_ICM_Followed{}.s' -> "ledsen" "jag" "kan" "inte" "svara" "på" "frågor" "om" ;
acc_neg_alone : [] . 'Acc_ICM{}.s' -> "ledsen" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "okej" ;
bye_command : [] . 'Quit{}.s' -> "hejdå" ;
bye_command : [] . 'Quit{}.s' -> "sluta" ;
bye_command : [] . 'Quit{}.s' -> "avbryt" ;
greet_command : [] . 'Greet{}.s' -> "hej" ;
greet_command : [] . 'Greet{}.s' -> "tjena" ;
greet_command : [] . 'Greet{}.s' -> "hallå" ;
help_command : [] . 'SingleAction{}.s' -> "få" "hjälp" ;
help_command : [] . 'SingleAction{}.s' -> "ha" "hjälp" ;
makeAnswer : [[], [0]] . 'Answer{}.s' -> 'Proposition{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{}.s' "." ;
makeAsk : [[0]] . 'DMove{}.s' -> 'SingleAsk{}.s' "." ;
makeGreetMove : [[0]] . 'DMove{}.s' -> 'Greet{}.s' "!" ;
makeICMAcc : [[0]] . 'ICM{}.s' -> 'Acc_ICM{}.s' ;
makeICMMove : [[0]] . 'DMove{}.s' -> 'ICM{}.s' ;
makeICMPer : [[0]] . 'ICM{}.s' -> 'Per_ICM{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{}.s' -> "inte" 'Proposition{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{}.s' "." ;
makeQuitMove : [[0]] . 'DMove{}.s' -> 'Quit{}.s' "!" ;
makeRequest : [[0]] . 'Request{}.s' -> 'SingleAction{}.s' "." ;
makeRequestMove : [[0]] . 'DMove{}.s' -> 'Request{}.s' ;
makeS : [[0]] . 'S{}.s' -> 'DMove{}.s' ;
no : [] . 'Answer{}.s' -> "nej" ;
no : [] . 'Answer{}.s' -> "nepp" ;
per_int : [] . 'Per_ICM{}.s' -> "ursäkta" ;
per_int : [] . 'Per_ICM{}.s' -> "vad" "sa" "du" ;
per_neg : [] . 'Per_ICM{}.s' -> "ursäkta" ;
per_neg : [] . 'Per_ICM{}.s' -> "förlåt" ;
per_neg : [] . 'Per_ICM{}.s' -> "ursäkta" "jag" "hörde" "inte" "vad" "du" "sa" ;
per_pos : [] . 'Per_ICM_Followed{}.s' -> "jag" "tyckte" "du" "sa" ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{}.s' ;
top_command : [] . 'SingleAction{}.s' -> "glömma" "allt" ;
top_command : [] . 'SingleAction{}.s' -> "börja" "om" ;
yes : [] . 'Answer{}.s' -> "ja" ;
yes : [] . 'Answer{}.s' -> "japp" ;
yes : [] . 'Answer{}.s' -> "jajamen" ;
end grammar
grammar sys_domain_lamps_english lampProp : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
locProp : [[0]] . 'Proposition{}.s' -> 'Room{}.s' ;
turnedOffLamp : [] . 'Confirm{}.s' -> "the" "light" "is" "turned" "off" ;
turnedOnLamp : [] . 'Confirm{}.s' -> "the" "light" "is" "on" ;
whatLampQuestion : [] . 'SingleAsk{}.s' -> "what" "lamp" "do" "you" "mean" ;
whatLocQuestion : [] . 'SingleAsk{}.s' -> "what" "room" "do" "you" "mean" ;
whatToTurnOffProp : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
whatToTurnOnProp : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
answerLampOff : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
answerLampOn : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
answerLocation : [[0]] . 'Proposition{}.s' -> 'Room{}.s' ;
askStatusLamp : [] . 'SingleAsk{}.s' -> "what" "lights" "are" "on" ;
dimmerDown : [] . 'SingleAction{}.s' -> "dim" "down" ;
dimmerUp : [] . 'SingleAction{}.s' -> "dim" "up" ;
questionLocation : [[0]] . 'Proposition{}.s' -> 'Room{}.s' ;
questionWhichLamp : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
turnOff : [] . 'Action{}.s' -> "turn" "off" ;
turnOffThis : [] . 'SingleAction{}.s' -> "turn" "off" ;
turnOff_alone : [] . 'SingleAction{}.s' -> "turn" "off" "the" "light" ;
turnOn : [] . 'Action{}.s' -> "turn" "on" ;
turnOnThis : [] . 'SingleAction{}.s' -> "turn" "on" ;
turnOn_alone : [] . 'SingleAction{}.s' -> "turn" "on" "the" "light" ;
ceilinglamp : [] . 'Lamp{}.s' -> "the" "ceiling" "light" ;
desklamp : [] . 'Lamp{}.s' -> "the" "desk" "light" ;
floorlamp : [] . 'Lamp{}.s' -> "the" "floor" "light" ;
tablelamp : [] . 'Lamp{}.s' -> "the" "table" "light" ;
bedroom : [] . 'Room{}.s' -> "the" "bedroom" ;
hall : [] . 'Room{}.s' -> "the" "hall" ;
kitchen : [] . 'Room{}.s' -> "the" "kitchen" ;
livingroom : [] . 'Room{}.s' -> "the" "living" "room" ;
accomodate : [] . 'Other_ICM_Followed{}.s' -> "i" "assume" "you" "mean" ;
loadplan : [] . 'Other_ICM{}.s' -> "lets" "see" "." ;
makeActualListIssue : [[0]] . 'IssueList{}.s' -> 'ListIssue{}.s' ;
makeAskIssue : [[], [0]] . 'AskIssue{}.s' -> 'Ask{}.s' ;
makeAskSet : [[0]] . 'SystemAsk{}.s' -> "do" "you" "want" "to" 'IssueList{}.s' ;
makeBasicAsk : [] . 'SystemAsk{}.s' -> "what" "can" "i" "do" "for" "you" ;
makeConfirmMove : [[0]] . 'DMove{}.s' -> 'Confirm{}.s' "." ;
makeDMList : [[0], [1]] . 'DMoves{}.s' -> 'DMove{}.s' 'DMoves{}.s' ;
makeDMPair : [[0], [1]] . 'DMoves{}.s' -> 'DMove{}.s' 'DMove{}.s' ;
makeICMAccIssue : [[0], [1]] . 'ICM{}.s' -> 'Acc_ICM_Followed{}.s' "," "i" "cannot" "answer" "questions" "about" 'Issue{}.s' "." ;
makeICMOther : [[0]] . 'ICM{}.s' -> 'Other_ICM{}.s' ;
makeICMOtherIssue : [[0], [1]] . 'ICM{}.s' -> 'Other_ICM_Followed{}.s' 'ListItem{}.s' "." ;
makeICMOtherReq : [[], [0], [1]] . 'ICM{}.s' -> 'Other_ICM_Followed{}.s' 'Action{}.s' "." ;
makeICMPerString : [[0]] . 'ICM{}.s' -> 'Per_ICM_Followed{}.s' ;
makeICMSem : [[0]] . 'ICM{}.s' -> 'Sem_ICM{}.s' ;
makeICMSemMoveAnswer : [[], [0], [1]] . 'ICM{}.s' -> 'Sem_ICM_Followed{}.s' 'Answer{}.s' "." ;
makeICMSemMoveAsk : [[], [0], [1]] . 'ICM{}.s' -> 'Sem_ICM_Followed{}.s' 'Ask{}.s' "." ;
makeICMSemMoveReq : [[0], [1]] . 'ICM{}.s' -> 'Sem_ICM_Followed{}.s' 'Request{}.s' "." ;
makeICMUnd : [[0]] . 'ICM{}.s' -> 'Und_ICM{}.s' ;
makeICMUndProp : [[], [1], [0]] . 'ICM{}.s' -> 'Proposition{}.s' 'Und_ICM_Followed{}.s' ;
makeInstantiatedAsk : [[], [0]] . 'SystemAsk{}.s' -> "do" "you" "want" "to" 'Action{}.s' ;
makeInstantiatedAskSingle : [[0]] . 'SystemAsk{}.s' -> "do" "you" "want" "to" 'SingleAction{}.s' ;
makeIssueAsk : [[0]] . 'Issue{}.s' -> 'AskIssue{}.s' ;
makeIssueList : [[0]] . 'Issue{}.s' -> 'ListIssue{}.s' ;
makeIssueProp : [[0]] . 'Issue{}.s' -> 'PropIssue{}.s' ;
makeListIssue : [[0], [1]] . 'ListIssue{}.s' -> 'ListItem{}.s' "or" 'ListItem{}.s' ;
makeListIssue2 : [[0], [1]] . 'ListIssue{}.s' -> 'ListItem{}.s' "," 'ListIssue{}.s' ;
makeListItemAction : [[], [0]] . 'ListItem{}.s' -> 'Action{}.s' ;
makeListItemAsk : [[0]] . 'ListItem{}.s' -> "ask" "about" 'AskIssue{}.s' ;
makeListItemSingleAction : [[0]] . 'ListItem{}.s' -> 'SingleAction{}.s' ;
makePropIssue : [[], [0]] . 'PropIssue{}.s' -> 'Proposition{}.s' ;
makeReport : [[1], [0]] . 'Report{}.s' -> 'Status{}.s' 'SingleAction{}.s' "." ;
makeReportMove : [[0]] . 'DMove{}.s' -> 'Report{}.s' ;
makeSofDMoves : [[0]] . 'S{}.s' -> 'DMoves{}.s' ;
makeSystemAsk : [[0]] . 'DMove{}.s' -> 'SystemAsk{}.s' "?" ;
reaccomodate : [] . 'Other_ICM_Followed{}.s' -> "returning" "to" ;
reraise : [] . 'Other_ICM{}.s' -> "so" "," ;
reraise_followed : [] . 'Other_ICM_Followed{}.s' -> "so" "," ;
sem_neg : [] . 'Sem_ICM{}.s' -> "i" "am" "sorry" "i" "do" "not" "understand" "." ;
sem_pos : [] . 'Sem_ICM{}.s' -> "okay" ;
sem_pos_followed : [] . 'Sem_ICM_Followed{}.s' -> . ;
status_done : [] . 'Status{}.s' -> "managed" "to" ;
status_failed : [] . 'Status{}.s' -> "failed" "to" ;
status_initiated : [] . 'Status{}.s' -> "started" "to" ;
status_pending : [] . 'Status{}.s' -> "waiting" "to" ;
und_int : [] . 'Und_ICM_Followed{}.s' -> "," "is" "this" "correct" "?" ;
und_neg : [] . 'Und_ICM{}.s' -> "i" "do" "not" "understand" "what" "you" "mean" "." ;
und_pos : [] . 'Und_ICM{}.s' -> "okay" "." ;
und_pos_followed : [] . 'Und_ICM_Followed{}.s' -> "." ;
acc_neg : [] . 'Acc_ICM_Followed{}.s' -> "sorry" ;
acc_neg_alone : [] . 'Acc_ICM{}.s' -> "sorry" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "okay" ;
bye_command : [] . 'Quit{}.s' -> "goodbye" ;
bye_command : [] . 'Quit{}.s' -> "bye" ;
bye_command : [] . 'Quit{}.s' -> "end" ;
greet_command : [] . 'Greet{}.s' -> "hello" ;
greet_command : [] . 'Greet{}.s' -> "hi" ;
greet_command : [] . 'Greet{}.s' -> "yo" ;
help_command : [] . 'SingleAction{}.s' -> "get" "help" ;
help_command : [] . 'SingleAction{}.s' -> "help" ;
makeAnswer : [[], [0]] . 'Answer{}.s' -> 'Proposition{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{}.s' "." ;
makeAsk : [[0]] . 'DMove{}.s' -> 'SingleAsk{}.s' "." ;
makeGreetMove : [[0]] . 'DMove{}.s' -> 'Greet{}.s' "!" ;
makeICMAcc : [[0]] . 'ICM{}.s' -> 'Acc_ICM{}.s' ;
makeICMMove : [[0]] . 'DMove{}.s' -> 'ICM{}.s' ;
makeICMPer : [[0]] . 'ICM{}.s' -> 'Per_ICM{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{}.s' -> "not" 'Proposition{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{}.s' "." ;
makeQuitMove : [[0]] . 'DMove{}.s' -> 'Quit{}.s' "!" ;
makeRequest : [[0]] . 'Request{}.s' -> 'SingleAction{}.s' "." ;
makeRequestMove : [[0]] . 'DMove{}.s' -> 'Request{}.s' ;
makeS : [[0]] . 'S{}.s' -> 'DMove{}.s' ;
no : [] . 'Answer{}.s' -> "no" ;
no : [] . 'Answer{}.s' -> "nope" ;
per_int : [] . 'Per_ICM{}.s' -> "pardon" "?" ;
per_int : [] . 'Per_ICM{}.s' -> "what" "did" "you" "say" "?" ;
per_neg : [] . 'Per_ICM{}.s' -> "pardon" "i" "did" "not" "hear" "what" "you" "said" "." ;
per_neg : [] . 'Per_ICM{}.s' -> "pardon" "?" ;
per_neg : [] . 'Per_ICM{}.s' -> "sorry" "?" ;
per_pos : [] . 'Per_ICM_Followed{}.s' -> "i" "thought" "you" "said" ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{}.s' ;
top_command : [] . 'SingleAction{}.s' -> "top" ;
top_command : [] . 'SingleAction{}.s' -> "forget" "everything" ;
top_command : [] . 'SingleAction{}.s' -> "start" "over" ;
yes : [] . 'Answer{}.s' -> "yes" ;
yes : [] . 'Answer{}.s' -> "yup" ;
yes : [] . 'Answer{}.s' -> "yeppers" ;
end grammar
