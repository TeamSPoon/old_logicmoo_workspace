/** <module> 
% This file contains the definitions for the objects in a household
% To create a new world, simply change the object definitions as
% described below (or in manual)
%
% *******Object definitions*******
%.
% Use the label_type_props(label,typecode,[property1,property2,etc.]]).
% label is whats used to refer to the object in the running world
% typecode is whats used to refer to the object for initialization (see world.pl)
% ===============================================================================================
%    by Mea_culpa
% ===============================================================================================
*/

:- style_check(-singleton).
:- style_check(-discontiguous).
:- style_check(-atom).

% assertOnLoad(X):-game_assert(X).

% ==================================================
% Mud Dictionary
% ==================================================

mudMudDictionary([my,body],['self']).

% ==================================================
% Rooms
% ==================================================

:-op(600,fx,onSpawn).

:-decl_mpred(tRegion(id),tType).

:-onSpawn tRegion(tKitchen).
:-onSpawn tRegion(tHall).
:-onSpawn tRegion(tCellar).
:-onSpawn tRegion(tOfficeRoom).
:-onSpawn tRegion(tLivingRoom).
:-onSpawn tRegion(tDiningRoom).
:-onSpawn tRegion(tBedRoom).
:-onSpawn tRegion(tBathRoom).
:-onSpawn tRegion(tClosetRoom).
:-onSpawn tRegion(tBackYard).


% ==================================================
% Doors
% ==================================================

:-decl_mpred_hybrid(pathBetween(tRegion,tRegion),symmetric).

:-onSpawn pathBetween(tLivingRoom,tOfficeRoom).
:-onSpawn pathBetween(tHall,tDiningRoom).
:-onSpawn pathBetween(tHall,tBedRoom).
:-onSpawn pathBetween(tHall,tLivingRoom).
:-onSpawn pathBetween(tHall,tBathRoom).
:-onSpawn pathBetween(tKitchen, tCellar).
:-onSpawn pathBetween(tDiningRoom, tKitchen).
:-onSpawn pathBetween(tBedRoom, tClosetRoom).
:-onSpawn pathBetween(tKitchen, tBackYard).

:-onSpawn pathBetween(tKitchen, 'Area1000').

:-onSpawn pathBetween('Area1000',"s",tKitchen).
:-onSpawn pathBetween(tKitchen,nospawn("n"),'Area1000').

:-export(doorsConnect/2).
:-decl_mpred_hybrid(doorsConnect(tRegion,tRegion)).

pathBetween(R1,R2):-pathBetween(R1,_,R2).

doorsConnect(Thing,Noun2):- pathBetween(Thing,Noun2); pathBetween(Noun2,Thing).

addPathBetweens:- doall((no_repeats(doorsConnect(R1,R2)),must_det(ensure_some_pathBetween(R1,R2)))).

ensure_some_pathBetween(R1,R2):- pathBetween(R1,_Dir,R2),!.
ensure_some_pathBetween(R1,R2):- random_instance(vtDirection,Dir,atom_length(Dir,1)),not(pathBetween(R1,Dir,_)),reverse_dir(Dir,Rev),not(pathBetween(R2,Rev,_)),!,
   add(pathBetween(R1,Dir,R2)),add(pathBetween(R2,Rev,R1)),!.
ensure_some_pathBetween(R1,R2):- split_name_type(R2,_,Isa), any_to_string(Isa,Str), any_to_dir(Str,Dir),show_call(add(pathBetween(R1,Dir,R2))).

:-onLoad(addPathBetweens).

% ==================================================
% Where Things are Located
% ==================================================

%:-dynamic(localityOfObject/2).
%:-multifile(localityOfObject/2).

mudSubclass(tRegion,tRegion).

:-decl_mpred_hybrid(localityOfObject(tObj,tSpatialthing)).

:-decl_mpred_hybrid(localityOfObject(kappa(Self,mudSubclass(Self,tObj)),kappa(Self2,mudSubclass(Self2,tSpatialthing)))).
:-op(600,fx,onSpawn).

% onSpawn(_).
	

:-onSpawn localityOfObject(tDesk, tOfficeRoom).
:-onSpawn localityOfObject(tApple(mudColor(vRed)), tKitchen).
:-onSpawn localityOfObject(tApple(mudColor(vGreen)), tKitchen).
:-onSpawn localityOfObject(tFlashlight, tDesk).
:-onSpawn localityOfObject(tWashingMachine, tCellar).
:-onSpawn localityOfObject(tNani, tWashingMachine).
:-onSpawn localityOfObject(tBroccoli, tKitchen).
:-onSpawn localityOfObject(tCrackers, tKitchen).
:-onSpawn localityOfObject(tComputer, tDesk).
:-onSpawn localityOfObject(tEnvelope, tDesk).
:-onSpawn localityOfObject(tStamp, tEnvelope).
:-onSpawn localityOfObject(tKey, tEnvelope).
:-onSpawn localityOfObject(tBed, tBedRoom).
:-onSpawn localityOfObject(tStandTable, tBedRoom).
:-onSpawn localityOfObject(tPajamas, tStandTable).
:-onSpawn localityOfObject(tShirt, tClosetRoom).
:-onSpawn localityOfObject(tPillow, tBed).
:-onSpawn localityOfObject(tBlanket, tBed).                                                              
:-onSpawn localityOfObject(tTable, tKitchen).
:-onSpawn localityOfObject(tCoat, tClosetRoom).
:-onSpawn localityOfObject(tPants, tClosetRoom).
:-onSpawn localityOfObject(tLightSwitch, tBedRoom).
:-onSpawn localityOfObject(tBall, tBackYard).
:-onSpawn localityOfObject(tSofa, tLivingRoom).
:-onSpawn localityOfObject(tEasyChair, tLivingRoom).
:-onSpawn localityOfObject(tCoffeeTable, tLivingRoom).
:-onSpawn localityOfObject(tCoffeeCup, tKitchen).
:-onSpawn localityOfObject(tCoffee, tCoffeeCup).
:-onSpawn localityOfObject(tBook(mudColor(vGreen)), tCoffeeTable).
:-onSpawn localityOfObject(tBook(mudColor(vPink)), tCoffeeTable).
:-onSpawn localityOfObject(tBookcase, tLivingRoom).
:-onSpawn localityOfObject(tDresser, tBedRoom).
:-onSpawn localityOfObject(tTopDrawer, tDresser).
:-onSpawn localityOfObject(tMiddleDrawer, tDresser).
:-onSpawn localityOfObject(tBottomDrawer, tDresser). 
:-onSpawn localityOfObject(tHouseplant, tPlanter).
:-onSpawn localityOfObject(tPlanter, tGueridon). 
:-onSpawn localityOfObject(tGueridon, tLivingRoom).
:-onSpawn localityOfObject(tGardenPlant, tBackYard).
:-onSpawn localityOfObject(tCandle,tKitchen).
:-onSpawn localityOfObject(tBathtub,tBathRoom).
:-onSpawn localityOfObject(tShower,tBathRoom).
:-onSpawn localityOfObject(tToilet,tBathRoom).
:-onSpawn localityOfObject(tTreadmill,tHall).
:-onSpawn localityOfObject(tSink,tBathRoom).
:-onSpawn localityOfObject(tKitchenSink,tKitchenCounter).
:-onSpawn localityOfObject(tFridge,tKitchen).
:-onSpawn localityOfObject(tStove,tKitchen).
:-onSpawn localityOfObject(tKitchenCounter,tKitchen).

mudSubclass(tMonster,tAgentGeneric).
mudSubclass(tCandle,tPortableDevice).
mudSubclass(tFlashlight, tPortableDevice).
mudSubclass(tDesk, tOfficeRoomFurnature).
mudSubclass(tApple, tFood).
mudSubclass(tNani, tArt).
mudSubclass(tNani, tWashable).
mudSubclass(tClothing, tWashable).
mudSubclass(tNani, tPortable).
mudSubclass(tBroccoli, tFood).
mudSubclass(tCrackers, tFood).
mudSubclass(tEnvelope, tOfficeItem).
mudSubclass(tStamp, tOfficeItem).
mudSubclass(tKey, tOfficeItem).
mudSubclass(tBall, tThrowable).

mudSubclass(tPajamas, tClothing).
mudSubclass(tShirt, tClothing).
mudSubclass(tCoat, tClothing).
mudSubclass(tPants, tClothing).
mudSubclass(tClothing, tFoldable).
mudSubclass(tClothing, tWearable).

mudSubclass(tCoffeeCup, tLiquidContainer).
mudSubclass(tCoffeeCup, tDrinkable).
mudSubclass(tCoffeeCup, tThrowable).
mudSubclass(tCoffee, tLiquid).
mudSubclass(tBook, tReadable).

mudSubclass(tPillow, tBedding).
mudSubclass(tBlanket, tBedding).                                                              
mudSubclass(tBedding, tFoldable).
mudSubclass(tFoldable, tPortable).
mudSubclass(tThrowable, tPortable).
mudSubclass(tPortableDevice,tPortable).
mudSubclass(physicalDevice,tUseable).
mudSubclass(tWearable, tPortable).
mudSubclass(tPortable,tTakeable).
mudSubclass(tFood,tTakeable).
mudSubclass(tTakeable,tObj).
mudSubclass(tPartof,tNotTakable).

mudSubclass(tLightSwitch, tWallFurnature).
mudSubclass(tComputer, tOfficeFurnature).
mudSubclass(tPartofFurnature,tPartof).

mudSubclass(tBed, tBedRoomFurnature).
mudSubclass(tStandTable, tBedRoomFurnature).
mudSubclass(tDresser, tBedRoomFurnature).

mudIsa(iPlayer1,tAgentGeneric).

mudSubclass(tWashingMachine, tDeviceFurnature).
mudSubclass(tTable, tFurnature).
mudSubclass(tTable, tHassurface).
mudSubclass(tSofa, tLivingRoomFurnature).
mudSubclass(tEasyChair, tLivingRoomFurnature).
mudSubclass(tCoffeeTable, tLivingRoomFurnature).
mudSubclass(tBookcase, tWallFurnature).
mudSubclass(tDrawer, tContainer).
mudSubclass(tDrawer, tOpenable).
mudSubclass(tDrawer, tCloseable).
mudSubclass(tDrawer, tPartofFurnature).
mudSubclass(tTopDrawer, tPartofFurnature).
mudSubclass(tMiddleDrawer, tPartofFurnature).
mudSubclass(tBottomDrawer, tPartofFurnature). 
mudSubclass(tHouseplant, tPartof).
mudSubclass(tPlanter, tContainer). 
mudSubclass(tGueridon, tLivingRoomFurnature).
mudSubclass(tGardenPlant, tOutdoorFurnature).
mudSubclass(tSpatialthing,tLookable).
mudSubclass(tNani,tTeddybear).
mudSubclass(tTeddybear,tTreasure).

mudSubclass(tBathtub,tBathRoomFurnature).
mudSubclass(tShower,tBathRoomFurnature).
mudSubclass(tToilet,tBathRoomFurnature).
mudSubclass(tSink,tBathRoomFurnature).
mudSubclass(tKitchenSink,tKitchenFurnature).
mudSubclass(tFridge,tKitchenFurnature).
mudSubclass(tStove,tKitchenFurnature).
mudSubclass(tKitchenCounter,tKitchenFurnature).

/*
:-dynamic(loc_s/2).


(WAS FOR ANOTHER SYSTEM)

locaton_s(item_template(RealObj,D1,D2,Weight),Place):-
	localityOfObject(RealObj,Place),item_template(RealObj,D1,D2),
	member(weight(Weight),D2),!.
locaton_s(item_template(RealObj,D1,D2,0),Place):-
	localityOfObject(RealObj,Place), item_template(RealObj,D1,D2).	

*/


:-export(setTemplate/1).


% ==================================================
% item_template Descriptions
% ==================================================

% :-dynamic(item_template/3).
:-op(600,fx,setTemplate).


:-setTemplate item_template(tCandle,[mudColor(vBlue),mudSize(vSmall),mudShape(vTriangular),mudMaterial(vWax),mudTexture(vSticky)]).
:-setTemplate item_template(tRedApple,[mudColor(vRed),mudSize(vSmall),mudShape(round),mudIsa(fruit),mudTexture(vSmooth)]).
:-setTemplate item_template(tGreenApple,[mudColor(eachOf(vGreen,vPastel)),mudSize(vSmall),mudShape(round),mudIsa(fruit),mudTexture(vSmooth)]).
:-setTemplate item_template(tTable,[mudColor(eachOf(vBlue,vWhite)),mudSize(vLarge),mudShape(vOval),mudMaterial(vWood),mudTexture(eachOf(vBumpy,vIrregular)),mudWeight(50)]).
:-setTemplate item_template(tPillow,[mudColor(vWhite),mudSize(vMedium),mudShape(vRectangular),mudMaterial(eachOf(vCotton,vFlannel)),mudTexture(eachOf(vFluffy,vSoft))]).
:-setTemplate item_template(tBlanket,[mudColor(eachOf(vGreen,vDark)),mudSize(eachOf(vLarge,bulky)),mudShape(vRectangular),mudMaterial(vRayon),mudTexture(eachOf(vPlush,vSoft))]).                                                              
:-setTemplate item_template(tStandTable,[mudColor(eachOf(vBlack,vShiney)),mudSize(vMedium),mudShape(eachOf(vCubular,vRectangular)),mudMaterial(vWood),mudTexture(vSmooth),mudWeight(25)]).
:-setTemplate item_template(tPajams,[mudColor(eachOf(vBlue,vPastel)),mudSize(eachOf(vMedium,fits)),mudShape(vUnique),mudMaterial(eachOf(vCotton,vRayon)),mudTexture(vSoft)]).
:-setTemplate item_template(tShirt,[mudColor(vBlack),mudSize(eachOf(vMedium,fits)),mudShape(like(mudShape,tTorso)),mudMaterial(vCotton),mudTexture(eachOf(vSoft,vThreadbare))]).
:-setTemplate item_template(tFlashlight,[mudColor(vYellow),mudSize(eachOf(vMedium,vSmall)),mudShape(vCylindrical),mudMaterial(vPlastic),mudTexture(vRibbed)]).
:-setTemplate item_template(tKey,[mudColor(vSilver),mudSize(eachOf(vSmall,vTiny)),mudShape(vUnique),mudMaterial(vMetal),mudTexture(eachOf(vRidged,vBumpy))]).
:-setTemplate item_template(tEnvelope,[mudColor(vWhite),mudSize(vSmall),mudShape(vRectangular),mudMaterial(vPaper),mudTexture(vSmooth)]).
:-setTemplate item_template(tDesk,[mudColor(eachOf(vBrown,vShiney)),mudSize(vLarge),mudShape(eachOf(vCubular,vRectangular)),mudTexture(eachOf(vSmooth,vRidged)),mudWeight(175)]).
:-setTemplate item_template(tWashingMachine,[mudColor(vWhite),mudSize(vLarge),mudShape(eachOf(vCubular,vSquare)),mudMaterial(vMetal),mudTexture(vSmooth),mudWeight(125)]).
:-setTemplate item_template(tBroccoli,[mudColor(vGreen),mudSize(vSmall),mudShape(like(mudShape,tTree)),mudIsa(vegetable),mudTexture(eachOf(vPorous,vBumpy))]).                                                                    
:-setTemplate item_template(tCrackers,[mudColor(vTan),mudIsa(bread),mudShape(eachOf(vCircular,flat)),mudSize(vSmall),mudTexture(eachOf(vDry,vCoarse))]).
:-setTemplate item_template(tComputer,[mudColor(vGrey),mudMaterial(vPlastic),mudShape(eachOf(vCubular,vRectangular)),mudSize(vMedium),mudTexture(vSmooth)]).
:-setTemplate item_template(tStamp,[mudColor(vPolychromatic),mudSize(eachOf(vTiny,thin)),mudShape(vSquare),mudMaterial(vPaper),mudTexture(eachOf(vSmooth,vSticky))]).
:-setTemplate item_