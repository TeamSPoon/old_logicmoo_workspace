grammar usr_domain_lamps_sem answerLampLocTurnOff : [[0], [1]] . 'AnswerList{}.s' -> "answer(lamp(" 'Lamp{}.s' ")," "answer(loc(" 'Room{}.s' ")" ;
answerLampLocTurnOn : [[0], [1]] . 'AnswerList{}.s' -> "answer(lamp(" 'Lamp{}.s' ")," "answer(loc(" 'Room{}.s' ")" ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> "ask" "(" "X" "^" 'Ask{}.s' "(" "X" ")" ")," 'Answer{}.s' ;
makeCompoundedAsk : [[0]] . 'DMove{}.s' -> 'CompoundedAsk{}.s' ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> 'CompoundedRequest{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> "request(" 'Action{}.s' ")," 'Answer{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> "request(" 'Action{}.s' ")," 'AnswerList{}.s' ;
answerLampOff : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
answerLampOn : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
answerLocation : [[0]] . 'Proposition{}.s' -> 'Room{}.s' ;
askStatusLamp : [] . 'SingleAsk{}.s' -> "status" ;
dimmerDown : [] . 'SingleAction{}.s' -> "dimmer_down" ;
dimmerUp : [] . 'SingleAction{}.s' -> "dimmer_up" ;
questionLocation : [[0]] . 'Proposition{}.s' -> 'Room{}.s' ;
questionWhichLamp : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
turnOff : [] . 'Action{}.s' -> "turnOff" ;
turnOffThis : [] . 'SingleAction{}.s' -> "turnOff_closest" ;
turnOff_alone : [] . 'SingleAction{}.s' -> "turnOff" ;
turnOn : [] . 'Action{}.s' -> "turnOn" ;
turnOnThis : [] . 'SingleAction{}.s' -> "turnOn_closest" ;
turnOn_alone : [] . 'SingleAction{}.s' -> "turnOn" ;
acc_neg : [] . 'Acc_ICM_Followed{}.s' -> "acc" "*" "neg" ;
acc_neg_alone : [] . 'Acc_ICM{}.s' -> "acc" "*" "neg" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "acc" "*" "pos" ;
bye_command : [] . 'Quit{}.s' -> "quit" ;
greet_command : [] . 'Greet{}.s' -> "greet" ;
help_command : [] . 'SingleAction{}.s' -> "help" ;
makeAnswer : [[], [0]] . 'Answer{}.s' -> "answer" "(" 'Proposition{}.s' ")" ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{}.s' ;
makeAsk : [[0]] . 'DMove{}.s' -> "ask" "(" 'SingleAsk{}.s' ")" ;
makeGreetMove : [[0]] . 'DMove{}.s' -> 'Greet{}.s' ;
makeICMAcc : [[0]] . 'ICM{}.s' -> 'Acc_ICM{}.s' ;
makeICMMove : [[0]] . 'DMove{}.s' -> "icm" ":" 'ICM{}.s' ;
makeICMPer : [[0]] . 'ICM{}.s' -> 'Per_ICM{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{}.s' -> "answer" "(" "not" "(" 'Proposition{}.s' ")" ")" ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{}.s' ;
makeQuitMove : [[0]] . 'DMove{}.s' -> 'Quit{}.s' ;
makeRequest : [[0]] . 'Request{}.s' -> "request" "(" 'SingleAction{}.s' ")" ;
makeRequestMove : [[0]] . 'DMove{}.s' -> 'Request{}.s' ;
makeS : [[0]] . 'S{}.s' -> "[" 'DMove{}.s' "]" ;
no : [] . 'Answer{}.s' -> "no" ;
per_int : [] . 'Per_ICM{}.s' -> "per" "*" "int" ;
per_neg : [] . 'Per_ICM{}.s' -> "per" "*" "neg" ;
per_pos : [] . 'Per_ICM_Followed{}.s' -> "per" "*" "pos" ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> "X" "^" 'Ask{}.s' "(" "X" ")" ;
top_command : [] . 'SingleAction{}.s' -> "top" ;
yes : [] . 'Answer{}.s' -> "yes" ;
ceilinglamp : [] . 'Lamp{}.s' -> "[ceilinglamp]" ;
desklamp : [] . 'Lamp{}.s' -> "[desklamp]" ;
floorlamp : [] . 'Lamp{}.s' -> "[floorlamp]" ;
tablelamp : [] . 'Lamp{}.s' -> "[tablelamp]" ;
bedroom : [] . 'Room{}.s' -> "[bedroom]" ;
hall : [] . 'Room{}.s' -> "[hall]" ;
kitchen : [] . 'Room{}.s' -> "[kitchen]" ;
livingroom : [] . 'Room{}.s' -> "[livingroom]" ;
end grammar
grammar usr_domain_lamps_svenska answerLampLocTurnOff : [[0], [1]] . 'AnswerList{}.s' -> 'Lamp{}.s' "i" 'Room{}.s' ;
answerLampLocTurnOn : [[0], [1]] . 'AnswerList{}.s' -> 'Lamp{}.s' "i" 'Room{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> 'Ask{}.s' 'Answer{}.s' ;
makeCompoundedAsk : [[0]] . 'DMove{}.s' -> 'CompoundedAsk{}.s' ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> "jag" "vill" 'CompoundedRequest{}.s' "tack" ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> "jag" "skulle" "vilja" 'CompoundedRequest{}.s' "tack" ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> "jag" "vill" 'CompoundedRequest{}.s' ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> "jag" "skulle" "vilja" 'CompoundedRequest{}.s' ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> 'CompoundedRequest{}.s' "tack" ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> 'CompoundedRequest{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{}.s' 'Answer{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{}.s' 'AnswerList{}.s' ;
answerLampOff : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
answerLampOn : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
answerLocation : [[0]] . 'Proposition{}.s' -> 'Room{}.s' ;
askStatusLamp : [] . 'SingleAsk{}.s' -> "vilka" "lampor" "är" "tända" ;
dimmerDown : [] . 'SingleAction{}.s' -> "dimma" "ner" ;
dimmerUp : [] . 'SingleAction{}.s' -> "dimma" "upp" ;
questionLocation : [[0]] . 'Proposition{}.s' -> 'Room{}.s' ;
questionWhichLamp : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
turnOff : [] . 'Action{}.s' -> "släcka" ;
turnOffThis : [] . 'SingleAction{}.s' -> "släcka" ;
turnOff_alone : [] . 'SingleAction{}.s' -> "släcka" "lampan" ;
turnOn : [] . 'Action{}.s' -> "tända" ;
turnOnThis : [] . 'SingleAction{}.s' -> "tända" ;
turnOn_alone : [] . 'SingleAction{}.s' -> "tända" "lampan" ;
acc_neg : [] . 'Acc_ICM_Followed{}.s' -> "vet" "inte" ;
acc_neg_alone : [] . 'Acc_ICM{}.s' -> "vet" "inte" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "okej" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "ok" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "visst" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "japp" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "jaha" ;
bye_command : [] . 'Quit{}.s' -> "hejdå" ;
bye_command : [] . 'Quit{}.s' -> "sluta" ;
bye_command : [] . 'Quit{}.s' -> "avbryt" ;
greet_command : [] . 'Greet{}.s' -> "hej" ;
greet_command : [] . 'Greet{}.s' -> "tjena" ;
greet_command : [] . 'Greet{}.s' -> "hallå" ;
help_command : [] . 'SingleAction{}.s' -> "få" "hjälp" ;
help_command : [] . 'SingleAction{}.s' -> "ha" "hjälp" ;
makeAnswer : [[], [0]] . 'Answer{}.s' -> 'Proposition{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{}.s' ;
makeAsk : [[0]] . 'DMove{}.s' -> 'SingleAsk{}.s' ;
makeGreetMove : [[0]] . 'DMove{}.s' -> 'Greet{}.s' ;
makeICMAcc : [[0]] . 'ICM{}.s' -> 'Acc_ICM{}.s' ;
makeICMMove : [[0]] . 'DMove{}.s' -> 'ICM{}.s' ;
makeICMPer : [[0]] . 'ICM{}.s' -> 'Per_ICM{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{}.s' -> "inte" 'Proposition{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{}.s' ;
makeQuitMove : [[0]] . 'DMove{}.s' -> 'Quit{}.s' ;
makeRequest : [[0]] . 'Request{}.s' -> 'SingleAction{}.s' ;
makeRequestMove : [[0]] . 'DMove{}.s' -> 'Request{}.s' ;
makeRequestMove : [[0]] . 'DMove{}.s' -> "jag" "vill" 'Request{}.s' "tack" ;
makeRequestMove : [[0]] . 'DMove{}.s' -> "jag" "skulle" "vilja" 'Request{}.s' "tack" ;
makeRequestMove : [[0]] . 'DMove{}.s' -> "jag" "vill" 'Request{}.s' ;
makeRequestMove : [[0]] . 'DMove{}.s' -> "jag" "skulle" "vilja" 'Request{}.s' ;
makeRequestMove : [[0]] . 'DMove{}.s' -> 'Request{}.s' "tack" ;
makeS : [[0]] . 'S{}.s' -> 'DMove{}.s' ;
no : [] . 'Answer{}.s' -> "nej" ;
no : [] . 'Answer{}.s' -> "nepp" ;
per_int : [] . 'Per_ICM{}.s' -> "ursäkta" ;
per_int : [] . 'Per_ICM{}.s' -> "vad" "sa" "du" ;
per_neg : [] . 'Per_ICM{}.s' -> "va" ;
per_neg : [] . 'Per_ICM{}.s' -> "ursäkta" ;
per_neg : [] . 'Per_ICM{}.s' -> "förlåt" ;
per_neg : [] . 'Per_ICM{}.s' -> "ursäkta" "jag" "hörde" "inte" "vad" "du" "sa" ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{}.s' ;
top_command : [] . 'SingleAction{}.s' -> "glömma" "allt" ;
top_command : [] . 'SingleAction{}.s' -> "börja" "om" ;
yes : [] . 'Answer{}.s' -> "ja" ;
yes : [] . 'Answer{}.s' -> "japp" ;
yes : [] . 'Answer{}.s' -> "jajamen" ;
ceilinglamp : [] . 'Lamp{}.s' -> "taklampan" ;
ceilinglamp : [] . 'Lamp{}.s' -> "en" "taklampa" ;
desklamp : [] . 'Lamp{}.s' -> "skrivbordslampan" ;
desklamp : [] . 'Lamp{}.s' -> "en" "skrivbordslampa" ;
floorlamp : [] . 'Lamp{}.s' -> "golvlampan" ;
floorlamp : [] . 'Lamp{}.s' -> "en" "golvlampa" ;
tablelamp : [] . 'Lamp{}.s' -> "bordslampan" ;
tablelamp : [] . 'Lamp{}.s' -> "en" "bordslampa" ;
bedroom : [] . 'Room{}.s' -> "sovrumet" ;
hall : [] . 'Room{}.s' -> "hallen" ;
kitchen : [] . 'Room{}.s' -> "köket" ;
livingroom : [] . 'Room{}.s' -> "vardagsrumet" ;
end grammar
grammar usr_domain_lamps_english answerLampLocTurnOff : [[0], [1]] . 'AnswerList{}.s' -> 'Lamp{}.s' "in" 'Room{}.s' ;
answerLampLocTurnOn : [[0], [1]] . 'AnswerList{}.s' -> 'Lamp{}.s' "in" 'Room{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> 'Ask{}.s' 'Answer{}.s' ;
makeCompoundedAsk : [[0]] . 'DMove{}.s' -> 'CompoundedAsk{}.s' ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> "i" "want" "to" 'CompoundedRequest{}.s' "please" ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> "i" "would" "like" "to" 'CompoundedRequest{}.s' "please" ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> "i" "want" "to" 'CompoundedRequest{}.s' ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> "i" "would" "like" "to" 'CompoundedRequest{}.s' ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> 'CompoundedRequest{}.s' "please" ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> 'CompoundedRequest{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{}.s' 'Answer{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{}.s' 'AnswerList{}.s' ;
answerLampOff : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
answerLampOn : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
answerLocation : [[0]] . 'Proposition{}.s' -> 'Room{}.s' ;
askStatusLamp : [] . 'SingleAsk{}.s' -> "what" "lights" "are" "on" ;
dimmerDown : [] . 'SingleAction{}.s' -> "dim" "down" ;
dimmerUp : [] . 'SingleAction{}.s' -> "dim" "up" ;
questionLocation : [[0]] . 'Proposition{}.s' -> 'Room{}.s' ;
questionWhichLamp : [[0]] . 'Proposition{}.s' -> 'Lamp{}.s' ;
turnOff : [] . 'Action{}.s' -> "turn" "off" ;
turnOffThis : [] . 'SingleAction{}.s' -> "turn" "off" ;
turnOff_alone : [] . 'SingleAction{}.s' -> "turn" "off" "the" "light" ;
turnOn : [] . 'Action{}.s' -> "turn" "on" ;
turnOnThis : [] . 'SingleAction{}.s' -> "turn" "on" ;
turnOn_alone : [] . 'SingleAction{}.s' -> "turn" "on" "the" "light" ;
acc_neg : [] . 'Acc_ICM_Followed{}.s' -> "i" "do" "not" "know" ;
acc_neg_alone : [] . 'Acc_ICM{}.s' -> "i" "do" "not" "know" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "okay" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "ok" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "sure" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "yup" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "right" ;
bye_command : [] . 'Quit{}.s' -> "goodbye" ;
bye_command : [] . 'Quit{}.s' -> "bye" ;
bye_command : [] . 'Quit{}.s' -> "end" ;
greet_command : [] . 'Greet{}.s' -> "hello" ;
greet_command : [] . 'Greet{}.s' -> "hi" ;
greet_command : [] . 'Greet{}.s' -> "yo" ;
help_command : [] . 'SingleAction{}.s' -> "get" "help" ;
help_command : [] . 'SingleAction{}.s' -> "help" ;
makeAnswer : [[], [0]] . 'Answer{}.s' -> 'Proposition{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{}.s' ;
makeAsk : [[0]] . 'DMove{}.s' -> 'SingleAsk{}.s' ;
makeGreetMove : [[0]] . 'DMove{}.s' -> 'Greet{}.s' ;
makeICMAcc : [[0]] . 'ICM{}.s' -> 'Acc_ICM{}.s' ;
makeICMMove : [[0]] . 'DMove{}.s' -> 'ICM{}.s' ;
makeICMPer : [[0]] . 'ICM{}.s' -> 'Per_ICM{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{}.s' -> "not" 'Proposition{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{}.s' ;
makeQuitMove : [[0]] . 'DMove{}.s' -> 'Quit{}.s' ;
makeRequest : [[0]] . 'Request{}.s' -> 'SingleAction{}.s' ;
makeRequestMove : [[0]] . 'DMove{}.s' -> 'Request{}.s' ;
makeRequestMove : [[0]] . 'DMove{}.s' -> "i" "want" "to" 'Request{}.s' "please" ;
makeRequestMove : [[0]] . 'DMove{}.s' -> "i" "would" "like" "to" 'Request{}.s' "please" ;
makeRequestMove : [[0]] . 'DMove{}.s' -> "i" "want" "to" 'Request{}.s' ;
makeRequestMove : [[0]] . 'DMove{}.s' -> "i" "would" "like" "to" 'Request{}.s' ;
makeRequestMove : [[0]] . 'DMove{}.s' -> 'Request{}.s' "please" ;
makeS : [[0]] . 'S{}.s' -> 'DMove{}.s' ;
no : [] . 'Answer{}.s' -> "no" ;
no : [] . 'Answer{}.s' -> "nope" ;
per_int : [] . 'Per_ICM{}.s' -> "pardon" ;
per_int : [] . 'Per_ICM{}.s' -> "what" "did" "you" "say" ;
per_neg : [] . 'Per_ICM{}.s' -> "what" ;
per_neg : [] . 'Per_ICM{}.s' -> "pardon" ;
per_neg : [] . 'Per_ICM{}.s' -> "pardon" "i" "did" "not" "hear" "what" "you" "said" ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{}.s' ;
top_command : [] . 'SingleAction{}.s' -> "top" ;
top_command : [] . 'SingleAction{}.s' -> "forget" "everything" ;
top_command : [] . 'SingleAction{}.s' -> "start" "over" ;
yes : [] . 'Answer{}.s' -> "yes" ;
yes : [] . 'Answer{}.s' -> "yup" ;
yes : [] . 'Answer{}.s' -> "yeppers" ;
ceilinglamp : [] . 'Lamp{}.s' -> "the" "ceiling" "light" ;
desklamp : [] . 'Lamp{}.s' -> "the" "desk" "light" ;
floorlamp : [] . 'Lamp{}.s' -> "the" "floor" "light" ;
tablelamp : [] . 'Lamp{}.s' -> "the" "table" "light" ;
bedroom : [] . 'Room{}.s' -> "the" "bedroom" ;
hall : [] . 'Room{}.s' -> "the" "hall" ;
kitchen : [] . 'Room{}.s' -> "the" "kitchen" ;
livingroom : [] . 'Room{}.s' -> "the" "living" "room" ;
end grammar
