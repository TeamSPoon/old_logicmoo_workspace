grammar usr_domain_player_sem answerSongArtistAdd : [[0], [1]] . 'AnswerList{addTask:Task}{}.s' -> "answer" "(" "item" "(" 'Song{}.s' ")" ")" "," "answer" "(" "group" "(" 'Artist{}.s' ")" ")" ;
answerSongArtistPlay : [[0], [1]] . 'AnswerList{playTask:Task}{}.s' -> "answer" "(" "item" "(" 'Song{}.s' ")" ")" "," "answer" "(" "group" "(" 'Artist{}.s' ")" ")" ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{addTask:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{artistQuestion:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{playTask:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{removeTask:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{shortAnswer:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{songQuestion:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{speakerTask:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> "ask" "(" "X" "^" 'Ask{addTask:Task}{}.s' "(" "X" ")" ")," 'Answer{addTask:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> "ask" "(" "X" "^" 'Ask{artistQuestion:Task}{}.s' "(" "X" ")" ")," 'Answer{artistQuestion:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> "ask" "(" "X" "^" 'Ask{playTask:Task}{}.s' "(" "X" ")" ")," 'Answer{playTask:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> "ask" "(" "X" "^" 'Ask{removeTask:Task}{}.s' "(" "X" ")" ")," 'Answer{removeTask:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> "ask" "(" "X" "^" 'Ask{shortAnswer:Task}{}.s' "(" "X" ")" ")," 'Answer{shortAnswer:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> "ask" "(" "X" "^" 'Ask{songQuestion:Task}{}.s' "(" "X" ")" ")," 'Answer{songQuestion:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> "ask" "(" "X" "^" 'Ask{speakerTask:Task}{}.s' "(" "X" ")" ")," 'Answer{speakerTask:Task}{}.s' ;
makeCompoundedAsk : [[0]] . 'DMove{}.s' -> 'CompoundedAsk{}.s' ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> 'CompoundedRequest{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> "request(" 'Action{addTask:Task}{}.s' ")," 'Answer{addTask:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> "request(" 'Action{artistQuestion:Task}{}.s' ")," 'Answer{artistQuestion:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> "request(" 'Action{playTask:Task}{}.s' ")," 'Answer{playTask:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> "request(" 'Action{removeTask:Task}{}.s' ")," 'Answer{removeTask:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> "request(" 'Action{shortAnswer:Task}{}.s' ")," 'Answer{shortAnswer:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> "request(" 'Action{songQuestion:Task}{}.s' ")," 'Answer{songQuestion:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> "request(" 'Action{speakerTask:Task}{}.s' ")," 'Answer{speakerTask:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> "request(" 'Action{addTask:Task}{}.s' ")," 'AnswerList{addTask:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> "request(" 'Action{artistQuestion:Task}{}.s' ")," 'AnswerList{artistQuestion:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> "request(" 'Action{playTask:Task}{}.s' ")," 'AnswerList{playTask:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> "request(" 'Action{removeTask:Task}{}.s' ")," 'AnswerList{removeTask:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> "request(" 'Action{shortAnswer:Task}{}.s' ")," 'AnswerList{shortAnswer:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> "request(" 'Action{songQuestion:Task}{}.s' ")," 'AnswerList{songQuestion:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> "request(" 'Action{speakerTask:Task}{}.s' ")," 'AnswerList{speakerTask:Task}{}.s' ;
add : [] . 'Action{addTask:Task}{}.s' -> "playlist_add" ;
add_alone : [] . 'SingleAction{}.s' -> "playlist_add" ;
answerArtistAdd : [[0]] . 'Proposition{addTask:Task}{}.s' -> "groupToAdd" "(" 'Artist{}.s' ")" ;
answerArtistPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "group" "(" 'Artist{}.s' ")" ;
answerArtistRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "group" "(" 'Artist{}.s' ")" ;
answerNumberInListPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "index" "(" "[" 'Number{}.s' "]" ")" ;
answerNumberInListRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "itemRem" "(" "[" 'Number{}.s' "]" ")" ;
answerOrderInListPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "index" "(" "[" 'OrderNumber{}.s' "]" ")" ;
answerOrderInListRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "itemRem" "(" "[" 'OrderNumber{}.s' "]" ")" ;
answerSongAdd : [[0]] . 'Proposition{addTask:Task}{}.s' -> "item" "(" 'Song{}.s' ")" ;
answerSongPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "item" "(" 'Song{}.s' ")" ;
answerSongRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "item" "(" 'Song{}.s' ")" ;
answerStationAdd : [[0]] . 'Proposition{addTask:Task}{}.s' -> "station" "(" 'Station{}.s' ")" ;
answerStationPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "station" "(" 'Station{}.s' ")" ;
answerStationRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "station" "(" 'Station{}.s' ")" ;
askArtist : [] . 'Ask{artistQuestion:Task}{}.s' -> "songs_by_artist" ;
askCurrent : [] . 'SingleAsk{}.s' -> "current_song" ;
askSong : [] . 'Ask{songQuestion:Task}{}.s' -> "artists_song" ;
center : [] . 'Proposition{speakerTask:Task}{}.s' -> "0.0" ;
fastforward : [] . 'SingleAction{}.s' -> "fast_forward" ;
handle_list : [] . 'SingleAction{}.s' -> "handle_playlist" ;
handle_player : [] . 'SingleAction{}.s' -> "handle_player" ;
handle_stations : [] . 'SingleAction{}.s' -> "handle_stations" ;
left : [] . 'Proposition{speakerTask:Task}{}.s' -> "-1.0" ;
lower_volume : [] . 'SingleAction{}.s' -> "vol_down" ;
next : [] . 'OrderNumber{}.s' -> "next" ;
pause : [] . 'SingleAction{}.s' -> "pause" ;
play : [] . 'SingleAction{}.s' -> "start" ;
play_spec : [] . 'Action{playTask:Task}{}.s' -> "start_specific" ;
play_spec_alone : [] . 'SingleAction{}.s' -> "start_specific" ;
previous : [] . 'OrderNumber{}.s' -> "previous" ;
questionArtist : [[0]] . 'Proposition{artistQuestion:Task}{}.s' -> "group" "(" 'Artist{}.s' ")" ;
questionSong : [[0]] . 'Proposition{songQuestion:Task}{}.s' -> "item" "(" 'Song{}.s' ")" ;
raise_volume : [] . 'SingleAction{}.s' -> "vol_up" ;
remove : [] . 'Action{removeTask:Task}{}.s' -> "playlist_del" ;
remove_all : [] . 'SingleAction{}.s' -> "playlist_clear" ;
remove_alone : [] . 'SingleAction{}.s' -> "playlist_del" ;
resume : [] . 'SingleAction{}.s' -> "resume" ;
rewind : [] . 'SingleAction{}.s' -> "rewind" ;
right : [] . 'Proposition{speakerTask:Task}{}.s' -> "1.0" ;
shift : [] . 'Action{speakerTask:Task}{}.s' -> "set_balance" ;
show_list : [] . 'SingleAction{}.s' -> "show_list" ;
stop : [] . 'SingleAction{}.s' -> "stop" ;
acc_neg : [] . 'Acc_ICM_Followed{}.s' -> "acc" "*" "neg" ;
acc_neg_alone : [] . 'Acc_ICM{}.s' -> "acc" "*" "neg" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "acc" "*" "pos" ;
bye_command : [] . 'Quit{}.s' -> "quit" ;
greet_command : [] . 'Greet{}.s' -> "greet" ;
help_command : [] . 'SingleAction{}.s' -> "help" ;
makeAnswer : [[], [0]] . 'Answer{addTask:Task}{}.s' -> "answer" "(" 'Proposition{addTask:Task}{}.s' ")" ;
makeAnswer : [[], [0]] . 'Answer{artistQuestion:Task}{}.s' -> "answer" "(" 'Proposition{artistQuestion:Task}{}.s' ")" ;
makeAnswer : [[], [0]] . 'Answer{playTask:Task}{}.s' -> "answer" "(" 'Proposition{playTask:Task}{}.s' ")" ;
makeAnswer : [[], [0]] . 'Answer{removeTask:Task}{}.s' -> "answer" "(" 'Proposition{removeTask:Task}{}.s' ")" ;
makeAnswer : [[], [0]] . 'Answer{shortAnswer:Task}{}.s' -> "answer" "(" 'Proposition{shortAnswer:Task}{}.s' ")" ;
makeAnswer : [[], [0]] . 'Answer{songQuestion:Task}{}.s' -> "answer" "(" 'Proposition{songQuestion:Task}{}.s' ")" ;
makeAnswer : [[], [0]] . 'Answer{speakerTask:Task}{}.s' -> "answer" "(" 'Proposition{speakerTask:Task}{}.s' ")" ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{addTask:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{artistQuestion:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{playTask:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{removeTask:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{shortAnswer:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{songQuestion:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{speakerTask:Task}{}.s' ;
makeAsk : [[0]] . 'DMove{}.s' -> "ask" "(" 'SingleAsk{}.s' ")" ;
makeGreetMove : [[0]] . 'DMove{}.s' -> 'Greet{}.s' ;
makeICMAcc : [[0]] . 'ICM{}.s' -> 'Acc_ICM{}.s' ;
makeICMMove : [[0]] . 'DMove{}.s' -> "icm" ":" 'ICM{}.s' ;
makeICMPer : [[0]] . 'ICM{}.s' -> 'Per_ICM{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{addTask:Task}{}.s' -> "answer" "(" "not" "(" 'Proposition{addTask:Task}{}.s' ")" ")" ;
makeNegAnswer : [[], [0]] . 'NegAnswer{artistQuestion:Task}{}.s' -> "answer" "(" "not" "(" 'Proposition{artistQuestion:Task}{}.s' ")" ")" ;
makeNegAnswer : [[], [0]] . 'NegAnswer{playTask:Task}{}.s' -> "answer" "(" "not" "(" 'Proposition{playTask:Task}{}.s' ")" ")" ;
makeNegAnswer : [[], [0]] . 'NegAnswer{removeTask:Task}{}.s' -> "answer" "(" "not" "(" 'Proposition{removeTask:Task}{}.s' ")" ")" ;
makeNegAnswer : [[], [0]] . 'NegAnswer{shortAnswer:Task}{}.s' -> "answer" "(" "not" "(" 'Proposition{shortAnswer:Task}{}.s' ")" ")" ;
makeNegAnswer : [[], [0]] . 'NegAnswer{songQuestion:Task}{}.s' -> "answer" "(" "not" "(" 'Proposition{songQuestion:Task}{}.s' ")" ")" ;
makeNegAnswer : [[], [0]] . 'NegAnswer{speakerTask:Task}{}.s' -> "answer" "(" "not" "(" 'Proposition{speakerTask:Task}{}.s' ")" ")" ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{addTask:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{artistQuestion:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{playTask:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{removeTask:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{shortAnswer:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{songQuestion:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{speakerTask:Task}{}.s' ;
makeQuitMove : [[0]] . 'DMove{}.s' -> 'Quit{}.s' ;
makeRequest : [[0]] . 'Request{}.s' -> "request" "(" 'SingleAction{}.s' ")" ;
makeRequestMove : [[0]] . 'DMove{}.s' -> 'Request{}.s' ;
makeS : [[0]] . 'S{}.s' -> "[" 'DMove{}.s' "]" ;
no : [] . 'Answer{shortAnswer:Task}{}.s' -> "no" ;
per_int : [] . 'Per_ICM{}.s' -> "per" "*" "int" ;
per_neg : [] . 'Per_ICM{}.s' -> "per" "*" "neg" ;
per_pos : [] . 'Per_ICM_Followed{}.s' -> "per" "*" "pos" ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> "X" "^" 'Ask{addTask:Task}{}.s' "(" "X" ")" ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> "X" "^" 'Ask{artistQuestion:Task}{}.s' "(" "X" ")" ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> "X" "^" 'Ask{playTask:Task}{}.s' "(" "X" ")" ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> "X" "^" 'Ask{removeTask:Task}{}.s' "(" "X" ")" ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> "X" "^" 'Ask{shortAnswer:Task}{}.s' "(" "X" ")" ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> "X" "^" 'Ask{songQuestion:Task}{}.s' "(" "X" ")" ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> "X" "^" 'Ask{speakerTask:Task}{}.s' "(" "X" ")" ;
top_command : [] . 'SingleAction{}.s' -> "top" ;
yes : [] . 'Answer{shortAnswer:Task}{}.s' -> "yes" ;
doolittle_album : [] . 'Album{}.s' -> "[doolittle]" ;
every_good_boy_deserves_fudge_album : [] . 'Album{}.s' -> "[every,good,boy,deserves,fudge]" ;
heads_high_album : [] . 'Album{}.s' -> "[heads,high]" ;
in_the_city_album : [] . 'Album{}.s' -> "[in,the,city]" ;
lets_get_it_on_album : [] . 'Album{}.s' -> "[lets,get,it,on]" ;
london_calling_album : [] . 'Album{}.s' -> "[london,calling]" ;
mezzanine_album : [] . 'Album{}.s' -> "[mezzanine]" ;
music_for_the_jilted_generation_album : [] . 'Album{}.s' -> "[music,for,the,jilted,generation]" ;
please_album : [] . 'Album{}.s' -> "[please]" ;
protection_album : [] . 'Album{}.s' -> "[protection]" ;
singles_album : [] . 'Album{}.s' -> "[singles]" ;
swedish_classics : [] . 'Album{}.s' -> "[svenska,klassiker]" ;
the_immaculate_collection_album : [] . 'Album{}.s' -> "[the,immaculate,collection]" ;
the_sidewinder_album : [] . 'Album{}.s' -> "[the,sidewinder]" ;
wish_album : [] . 'Album{}.s' -> "[wish]" ;
ace_of_base : [] . 'Artist{}.s' -> "[ace,of,base]" ;
atomic_swing : [] . 'Artist{}.s' -> "[atomic,swing]" ;
beborn_beton : [] . 'Artist{}.s' -> "[beborn,beton]" ;
billy_idol : [] . 'Artist{}.s' -> "[billy,idol]" ;
britney_spears : [] . 'Artist{}.s' -> "[britney,spears]" ;
clash : [] . 'Artist{}.s' -> "[clash]" ;
covenant : [] . 'Artist{}.s' -> "[covenant]" ;
creeps : [] . 'Artist{}.s' -> "[creeps]" ;
cure : [] . 'Artist{}.s' -> "[cure]" ;
eagle_eye_cherry : [] . 'Artist{}.s' -> "[eagle,eye,cherry]" ;
elvis_presley : [] . 'Artist{}.s' -> "[elvis,presley]" ;
eminem : [] . 'Artist{}.s' -> "[eminem]" ;
enigma : [] . 'Artist{}.s' -> "[enigma]" ;
europe : [] . 'Artist{}.s' -> "[europe]" ;
fifty_cent : [] . 'Artist{}.s' -> "[fifty,cent]" ;
garbage : [] . 'Artist{}.s' -> "[garbage]" ;
green_day : [] . 'Artist{}.s' -> "[green,day]" ;
guns_and_roses : [] . 'Artist{}.s' -> "[guns,and,roses]" ;
jam : [] . 'Artist{}.s' -> "[jam]" ;
jessica_simpson : [] . 'Artist{}.s' -> "[jessica,simpson]" ;
kate_bush : [] . 'Artist{}.s' -> "[kate,bush]" ;
led_zeppelin : [] . 'Artist{}.s' -> "[led,zeppelin]" ;
lee_morgan : [] . 'Artist{}.s' -> "[lee,morgan]" ;
madonna : [] . 'Artist{}.s' -> "[madonna]" ;
marvin_gaye : [] . 'Artist{}.s' -> "[mavin,gaye]" ;
massive_attack : [] . 'Artist{}.s' -> "[massive,attack]" ;
michael_jackson : [] . 'Artist{}.s' -> "[michael,jackson]" ;
morlocks : [] . 'Artist{}.s' -> "[morlocks]" ;
morrisey : [] . 'Artist{}.s' -> "[morrisey]" ;
mr_vegas : [] . 'Artist{}.s' -> "[mister,vegas]" ;
mudhoney : [] . 'Artist{}.s' -> "[mudhoney]" ;
nitzer_ebb : [] . 'Artist{}.s' -> "[nitzer,ebb]" ;
norah_jones : [] . 'Artist{}.s' -> "[norah,jones]" ;
ozzy_osbourne : [] . 'Artist{}.s' -> "[ozzy,osbourne]" ;
pain : [] . 'Artist{}.s' -> "[pain]" ;
pet_shop_boys : [] . 'Artist{}.s' -> "[pet,shop,boys]" ;
pixies : [] . 'Artist{}.s' -> "[pixies]" ;
prodigy : [] . 'Artist{}.s' -> "[prodigy]" ;
project_pitchfork : [] . 'Artist{}.s' -> "[project,pitchfork]" ;
shania_twain : [] . 'Artist{}.s' -> "[shania,twain]" ;
stephen_simmonds : [] . 'Artist{}.s' -> "[stephen,simmonds]" ;
the_ark : [] . 'Artist{}.s' -> "[the,ark]" ;
the_cardigans : [] . 'Artist{}.s' -> "[the,cardigans]" ;
the_chemical_brothers : [] . 'Artist{}.s' -> "[the,chemical,brothers]" ;
trace_adkins : [] . 'Artist{}.s' -> "[trace,adkins]" ;
trance_dance : [] . 'Artist{}.s' -> "[trance,dance]" ;
usher : [] . 'Artist{}.s' -> "[usher]" ;
vacuum : [] . 'Artist{}.s' -> "[vacuum]" ;
vnv_nation : [] . 'Artist{}.s' -> "[vnv,nation]" ;
all_that_she_wants : [] . 'Song{}.s' -> "[all,that,she,wants]" ;
angel : [] . 'Song{}.s' -> "[angel]" ;
another_world : [] . 'Song{}.s' -> "[another,world]" ;
ars_magica : [] . 'Song{}.s' -> "[ars,magica]" ;
darkangel : [] . 'Song{}.s' -> "[darkangel]" ;
dead_stars : [] . 'Song{}.s' -> "[dead,stars]" ;
debaser : [] . 'Song{}.s' -> "[debaser]" ;
deeper_than_the_usual_feeling : [] . 'Song{}.s' -> "[deeper,then,the,usual,feeling]" ;
eleanor_rigby : [] . 'Song{}.s' -> "[eleanor,rigby]" ;
existence : [] . 'Song{}.s' -> "[existance]" ;
figurehead : [] . 'Song{}.s' -> "[figurehead]" ;
friday_im_in_love : [] . 'Song{}.s' -> "[friday,im,in,love]" ;
good_enough : [] . 'Song{}.s' -> "[good,enough]" ;
heads_high : [] . 'Song{}.s' -> "[heads,high]" ;
i_breathe : [] . 'Song{}.s' -> "[i,breathe]" ;
i_think_im_paranoid : [] . 'Song{}.s' -> "[i,think,im,paranoid]" ;
if_i_should_die_tonight : [] . 'Song{}.s' -> "[if,i,should,die,tonight]" ;
in_the_city : [] . 'Song{}.s' -> "[in,the,city]" ;
it_takes_a_fool_to_remain_sain : [] . 'Song{}.s' -> "[it,takes,s,fool,to,remain,sain]" ;
latest_news : [] . 'Song{}.s' -> "[latest,news]" ;
legion : [] . 'Song{}.s' -> "[legion]" ;
let_beauty_loose : [] . 'Song{}.s' -> "[let,beauty,loose]" ;
leviathan : [] . 'Song{}.s' -> "[leviathan]" ;
like_a_prayer : [] . 'Song{}.s' -> "[like,a,prayer]" ;
like_tears_in_rain : [] . 'Song{}.s' -> "[like,tears,in,rain]" ;
london_calling : [] . 'Song{}.s' -> "[london,calling]" ;
lucky_star : [] . 'Song{}.s' -> "[lucky,star]" ;
material_girl : [] . 'Song{}.s' -> "[material,girl]" ;
oh_i_like_it : [] . 'Song{}.s' -> "[oh,i,like,it]" ;
poison : [] . 'Song{}.s' -> "[poison]" ;
razors_through_flesh : [] . 'Song{}.s' -> "[razors,through,flesh]" ;
rubicon : [] . 'Song{}.s' -> "[rubicon]" ;
sadness : [] . 'Song{}.s' -> "[sadness]" ;
save_tonight : [] . 'Song{}.s' -> "[save,tonight]" ;
sex_by_force : [] . 'Song{}.s' -> "[sex,by,force]" ;
should_i_stay_or_should_i_go : [] . 'Song{}.s' -> "[should,i,stay,or,should,i,go]" ;
sly : [] . 'Song{}.s' -> "[sly]" ;
stalker : [] . 'Song{}.s' -> "[stalker]" ;
standing : [] . 'Song{}.s' -> "[standing]" ;
stone_me_into_the_groove : [] . 'Song{}.s' -> "[stone,me,into,trh,groove]" ;
suburbia : [] . 'Song{}.s' -> "[suburbia]" ;
teardrop : [] . 'Song{}.s' -> "[teardrop]" ;
tears_never_dry : [] . 'Song{}.s' -> "[tears,never,dry]" ;
the_final_countdown : [] . 'Song{}.s' -> "[the,final,countown]" ;
the_man_with_the_child_in_his_eyes : [] . 'Song{}.s' -> "[the,man,with,the,child,in,his,eyes]" ;
thorn : [] . 'Song{}.s' -> "[thorn]" ;
time_for_truth : [] . 'Song{}.s' -> "[time,for,truth]" ;
totem_pole : [] . 'Song{}.s' -> "[totem,pole]" ;
west_end_girls : [] . 'Song{}.s' -> "[west,end,girls]" ;
youre_gonna_get_it : [] . 'Song{}.s' -> "[youre,gonna,get,it]" ;
digital_gunfire : [] . 'Station{}.s' -> "[digital,gunfire]" ;
rant_radio : [] . 'Station{}.s' -> "[rant,radio]" ;
eight : [] . 'Number{}.s' -> "8" ;
five : [] . 'Number{}.s' -> "5" ;
four : [] . 'Number{}.s' -> "4" ;
nine : [] . 'Number{}.s' -> "9" ;
one : [] . 'Number{}.s' -> "1" ;
seven : [] . 'Number{}.s' -> "7" ;
six : [] . 'Number{}.s' -> "6" ;
ten : [] . 'Number{}.s' -> "10" ;
three : [] . 'Number{}.s' -> "3" ;
two : [] . 'Number{}.s' -> "2" ;
eighth : [] . 'OrderNumber{}.s' -> "8" ;
fifth : [] . 'OrderNumber{}.s' -> "5" ;
first : [] . 'OrderNumber{}.s' -> "1" ;
fourth : [] . 'OrderNumber{}.s' -> "4" ;
ninth : [] . 'OrderNumber{}.s' -> "9" ;
second : [] . 'OrderNumber{}.s' -> "2" ;
seventh : [] . 'OrderNumber{}.s' -> "7" ;
sixth : [] . 'OrderNumber{}.s' -> "6" ;
tenth : [] . 'OrderNumber{}.s' -> "10" ;
third : [] . 'OrderNumber{}.s' -> "3" ;
end grammar
grammar usr_domain_player_svenska answerSongArtistAdd : [[0], [1]] . 'AnswerList{addTask:Task}{}.s' -> 'Song{}.s' "med" 'Artist{}.s' ;
answerSongArtistAdd : [[1], [0]] . 'AnswerList{addTask:Task}{}.s' -> 'Artist{}.s' "med" 'Song{}.s' ;
answerSongArtistPlay : [[0], [1]] . 'AnswerList{playTask:Task}{}.s' -> 'Song{}.s' "med" 'Artist{}.s' ;
answerSongArtistPlay : [[1], [0]] . 'AnswerList{playTask:Task}{}.s' -> 'Artist{}.s' "med" 'Song{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{addTask:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{artistQuestion:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{playTask:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{removeTask:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{shortAnswer:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{songQuestion:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{speakerTask:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> 'Ask{addTask:Task}{}.s' 'Answer{addTask:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> 'Ask{artistQuestion:Task}{}.s' 'Answer{artistQuestion:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> 'Ask{playTask:Task}{}.s' 'Answer{playTask:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> 'Ask{removeTask:Task}{}.s' 'Answer{removeTask:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> 'Ask{shortAnswer:Task}{}.s' 'Answer{shortAnswer:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> 'Ask{songQuestion:Task}{}.s' 'Answer{songQuestion:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> 'Ask{speakerTask:Task}{}.s' 'Answer{speakerTask:Task}{}.s' ;
makeCompoundedAsk : [[0]] . 'DMove{}.s' -> 'CompoundedAsk{}.s' ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> "jag" "vill" 'CompoundedRequest{}.s' "tack" ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> "jag" "skulle" "vilja" 'CompoundedRequest{}.s' "tack" ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> "jag" "vill" 'CompoundedRequest{}.s' ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> "jag" "skulle" "vilja" 'CompoundedRequest{}.s' ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> 'CompoundedRequest{}.s' "tack" ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> 'CompoundedRequest{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{addTask:Task}{}.s' 'Answer{addTask:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{artistQuestion:Task}{}.s' 'Answer{artistQuestion:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{playTask:Task}{}.s' 'Answer{playTask:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{removeTask:Task}{}.s' 'Answer{removeTask:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{shortAnswer:Task}{}.s' 'Answer{shortAnswer:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{songQuestion:Task}{}.s' 'Answer{songQuestion:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{speakerTask:Task}{}.s' 'Answer{speakerTask:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{addTask:Task}{}.s' 'AnswerList{addTask:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{artistQuestion:Task}{}.s' 'AnswerList{artistQuestion:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{playTask:Task}{}.s' 'AnswerList{playTask:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{removeTask:Task}{}.s' 'AnswerList{removeTask:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{shortAnswer:Task}{}.s' 'AnswerList{shortAnswer:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{songQuestion:Task}{}.s' 'AnswerList{songQuestion:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{speakerTask:Task}{}.s' 'AnswerList{speakerTask:Task}{}.s' ;
add : [] . 'Action{addTask:Task}{}.s' -> "lägga" "till" ;
add_alone : [] . 'SingleAction{}.s' -> "lägga" "till" ;
add_alone : [] . 'SingleAction{}.s' -> "lägg" "till" "den" "här" ;
add_alone : [] . 'SingleAction{}.s' -> "lägg" "till" "den" ;
answerArtistAdd : [[0]] . 'Proposition{addTask:Task}{}.s' -> 'Artist{}.s' ;
answerArtistAdd : [[0]] . 'Proposition{addTask:Task}{}.s' -> "artisten" 'Artist{}.s' ;
answerArtistPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> 'Artist{}.s' ;
answerArtistPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "artisten" 'Artist{}.s' ;
answerArtistRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> 'Artist{}.s' ;
answerArtistRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "artisten" 'Artist{}.s' ;
answerNumberInListPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "nummer" 'Number{}.s' ;
answerNumberInListPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> 'Number{}.s' ;
answerNumberInListRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "nummer" 'Number{}.s' ;
answerNumberInListRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> 'Number{}.s' ;
answerOrderInListPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "den" 'OrderNumber{}.s' ;
answerOrderInListPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "den" 'OrderNumber{}.s' ;
answerOrderInListRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "den" 'OrderNumber{}.s' ;
answerOrderInListRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "den" 'OrderNumber{}.s' ;
answerSongAdd : [[0]] . 'Proposition{addTask:Task}{}.s' -> 'Song{}.s' ;
answerSongAdd : [[0]] . 'Proposition{addTask:Task}{}.s' -> "låten" 'Song{}.s' ;
answerSongPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> 'Song{}.s' ;
answerSongPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "låten" 'Song{}.s' ;
answerSongRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> 'Song{}.s' ;
answerSongRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "låten" 'Song{}.s' ;
answerStationAdd : [[0]] . 'Proposition{addTask:Task}{}.s' -> 'Station{}.s' ;
answerStationAdd : [[0]] . 'Proposition{addTask:Task}{}.s' -> "stationen" 'Station{}.s' ;
answerStationPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> 'Station{}.s' ;
answerStationPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "stationen" 'Station{}.s' ;
answerStationRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> 'Station{}.s' ;
answerStationRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "stationen" 'Station{}.s' ;
askArtist : [] . 'Ask{artistQuestion:Task}{}.s' -> "vad" "har" "jag" "med" ;
askArtist : [] . 'Ask{artistQuestion:Task}{}.s' -> "vad" "har" "jag" "av" ;
askArtist : [] . 'Ask{artistQuestion:Task}{}.s' -> "vilka" "låtar" "har" "jag" "med" ;
askArtist : [] . 'Ask{artistQuestion:Task}{}.s' -> "vilka" "låtar" "har" "jag" "av" ;
askArtist : [] . 'Ask{artistQuestion:Task}{}.s' -> "har" "jag" "någonting" "med" ;
askArtist : [] . 'Ask{artistQuestion:Task}{}.s' -> "har" "jag" "någonting" "av" ;
askCurrent : [] . 'SingleAsk{}.s' -> "vad" "heter" "den" "här" ;
askCurrent : [] . 'SingleAsk{}.s' -> "vad" "heter" "låten" "som" "spelas" "nu" ;
askSong : [] . 'Ask{songQuestion:Task}{}.s' -> "vem" "har" "skrivit" ;
askSong : [] . 'Ask{songQuestion:Task}{}.s' -> "vem" "har" "gjort" ;
center : [] . 'Proposition{speakerTask:Task}{}.s' -> "mitten" ;
center : [] . 'Proposition{speakerTask:Task}{}.s' -> "till" "mitten" ;
fastforward : [] . 'SingleAction{}.s' -> "spola" "framåt" ;
handle_list : [] . 'SingleAction{}.s' -> "ändra" "i" "spellistan" ;
handle_player : [] . 'SingleAction{}.s' -> "prata" "med" "spelaren" ;
handle_stations : [] . 'SingleAction{}.s' -> "välja" "en" "radiostation" ;
left : [] . 'Proposition{speakerTask:Task}{}.s' -> "vänster" ;
left : [] . 'Proposition{speakerTask:Task}{}.s' -> "till" "vänster" ;
lower_volume : [] . 'SingleAction{}.s' -> "sänka" "volymen" ;
lower_volume : [] . 'SingleAction{}.s' -> "sänka" "ljudet" ;
next : [] . 'OrderNumber{}.s' -> "nästa" ;
pause : [] . 'SingleAction{}.s' -> "pausa" ;
play : [] . 'SingleAction{}.s' -> "spela" "från" "början" ;
play : [] . 'SingleAction{}.s' -> "spela" ;
play : [] . 'SingleAction{}.s' -> "starta" ;
play_spec : [] . 'Action{playTask:Task}{}.s' -> "spela" ;
play_spec : [] . 'Action{playTask:Task}{}.s' -> "starta" ;
play_spec : [] . 'Action{playTask:Task}{}.s' -> "höra" ;
play_spec : [] . 'Action{playTask:Task}{}.s' -> "lyssna" "på" ;
play_spec_alone : [] . 'SingleAction{}.s' -> "spela" "den" "här" ;
play_spec_alone : [] . 'SingleAction{}.s' -> "spela" "den" ;
play_spec_alone : [] . 'SingleAction{}.s' -> "spela" "en" "speciell" ;
play_spec_alone : [] . 'SingleAction{}.s' -> "spela" "en" "speciell" "låt" ;
previous : [] . 'OrderNumber{}.s' -> "föregående" ;
questionArtist : [[0]] . 'Proposition{artistQuestion:Task}{}.s' -> 'Artist{}.s' ;
questionArtist : [[0]] . 'Proposition{artistQuestion:Task}{}.s' -> "artisten" 'Artist{}.s' ;
questionSong : [[0]] . 'Proposition{songQuestion:Task}{}.s' -> 'Song{}.s' ;
questionSong : [[0]] . 'Proposition{songQuestion:Task}{}.s' -> "låten" 'Song{}.s' ;
raise_volume : [] . 'SingleAction{}.s' -> "höja" "volymen" ;
raise_volume : [] . 'SingleAction{}.s' -> "höja" "ljudet" ;
remove : [] . 'Action{removeTask:Task}{}.s' -> "ta" "bort" ;
remove_all : [] . 'SingleAction{}.s' -> "rensa" "listan" ;
remove_all : [] . 'SingleAction{}.s' -> "ta" "bort" "allt" ;
remove_alone : [] . 'SingleAction{}.s' -> "ta" "bort" ;
remove_alone : [] . 'SingleAction{}.s' -> "ta" "bort" "den" ;
remove_alone : [] . 'SingleAction{}.s' -> "ta" "bort" "den" "här" ;
resume : [] . 'SingleAction{}.s' -> "återuppta" "spelningen" ;
resume : [] . 'SingleAction{}.s' -> "starta" "igen" ;
rewind : [] . 'SingleAction{}.s' -> "spola" "bakåt" ;
right : [] . 'Proposition{speakerTask:Task}{}.s' -> "höger" ;
right : [] . 'Proposition{speakerTask:Task}{}.s' -> "till" "höger" ;
shift : [] . 'Action{speakerTask:Task}{}.s' -> "ändra" "balansen" ;
shift : [] . 'Action{speakerTask:Task}{}.s' -> "skifta" ;
show_list : [] . 'SingleAction{}.s' -> "visa" "listan" ;
stop : [] . 'SingleAction{}.s' -> "stoppa" ;
stop : [] . 'SingleAction{}.s' -> "avbryta" ;
acc_neg : [] . 'Acc_ICM_Followed{}.s' -> "vet" "inte" ;
acc_neg_alone : [] . 'Acc_ICM{}.s' -> "vet" "inte" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "okej" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "ok" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "visst" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "japp" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "jaha" ;
bye_command : [] . 'Quit{}.s' -> "hejdå" ;
bye_command : [] . 'Quit{}.s' -> "sluta" ;
bye_command : [] . 'Quit{}.s' -> "avbryt" ;
greet_command : [] . 'Greet{}.s' -> "hej" ;
greet_command : [] . 'Greet{}.s' -> "tjena" ;
greet_command : [] . 'Greet{}.s' -> "hallå" ;
help_command : [] . 'SingleAction{}.s' -> "få" "hjälp" ;
help_command : [] . 'SingleAction{}.s' -> "ha" "hjälp" ;
makeAnswer : [[], [0]] . 'Answer{addTask:Task}{}.s' -> 'Proposition{addTask:Task}{}.s' ;
makeAnswer : [[], [0]] . 'Answer{artistQuestion:Task}{}.s' -> 'Proposition{artistQuestion:Task}{}.s' ;
makeAnswer : [[], [0]] . 'Answer{playTask:Task}{}.s' -> 'Proposition{playTask:Task}{}.s' ;
makeAnswer : [[], [0]] . 'Answer{removeTask:Task}{}.s' -> 'Proposition{removeTask:Task}{}.s' ;
makeAnswer : [[], [0]] . 'Answer{shortAnswer:Task}{}.s' -> 'Proposition{shortAnswer:Task}{}.s' ;
makeAnswer : [[], [0]] . 'Answer{songQuestion:Task}{}.s' -> 'Proposition{songQuestion:Task}{}.s' ;
makeAnswer : [[], [0]] . 'Answer{speakerTask:Task}{}.s' -> 'Proposition{speakerTask:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{addTask:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{artistQuestion:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{playTask:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{removeTask:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{shortAnswer:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{songQuestion:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{speakerTask:Task}{}.s' ;
makeAsk : [[0]] . 'DMove{}.s' -> 'SingleAsk{}.s' ;
makeGreetMove : [[0]] . 'DMove{}.s' -> 'Greet{}.s' ;
makeICMAcc : [[0]] . 'ICM{}.s' -> 'Acc_ICM{}.s' ;
makeICMMove : [[0]] . 'DMove{}.s' -> 'ICM{}.s' ;
makeICMPer : [[0]] . 'ICM{}.s' -> 'Per_ICM{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{addTask:Task}{}.s' -> "inte" 'Proposition{addTask:Task}{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{artistQuestion:Task}{}.s' -> "inte" 'Proposition{artistQuestion:Task}{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{playTask:Task}{}.s' -> "inte" 'Proposition{playTask:Task}{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{removeTask:Task}{}.s' -> "inte" 'Proposition{removeTask:Task}{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{shortAnswer:Task}{}.s' -> "inte" 'Proposition{shortAnswer:Task}{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{songQuestion:Task}{}.s' -> "inte" 'Proposition{songQuestion:Task}{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{speakerTask:Task}{}.s' -> "inte" 'Proposition{speakerTask:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{addTask:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{artistQuestion:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{playTask:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{removeTask:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{shortAnswer:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{songQuestion:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{speakerTask:Task}{}.s' ;
makeQuitMove : [[0]] . 'DMove{}.s' -> 'Quit{}.s' ;
makeRequest : [[0]] . 'Request{}.s' -> 'SingleAction{}.s' ;
makeRequestMove : [[0]] . 'DMove{}.s' -> 'Request{}.s' ;
makeRequestMove : [[0]] . 'DMove{}.s' -> "jag" "vill" 'Request{}.s' "tack" ;
makeRequestMove : [[0]] . 'DMove{}.s' -> "jag" "skulle" "vilja" 'Request{}.s' "tack" ;
makeRequestMove : [[0]] . 'DMove{}.s' -> "jag" "vill" 'Request{}.s' ;
makeRequestMove : [[0]] . 'DMove{}.s' -> "jag" "skulle" "vilja" 'Request{}.s' ;
makeRequestMove : [[0]] . 'DMove{}.s' -> 'Request{}.s' "tack" ;
makeS : [[0]] . 'S{}.s' -> 'DMove{}.s' ;
no : [] . 'Answer{shortAnswer:Task}{}.s' -> "nej" ;
no : [] . 'Answer{shortAnswer:Task}{}.s' -> "nepp" ;
per_int : [] . 'Per_ICM{}.s' -> "ursäkta" ;
per_int : [] . 'Per_ICM{}.s' -> "vad" "sa" "du" ;
per_neg : [] . 'Per_ICM{}.s' -> "va" ;
per_neg : [] . 'Per_ICM{}.s' -> "ursäkta" ;
per_neg : [] . 'Per_ICM{}.s' -> "förlåt" ;
per_neg : [] . 'Per_ICM{}.s' -> "ursäkta" "jag" "hörde" "inte" "vad" "du" "sa" ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{addTask:Task}{}.s' ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{artistQuestion:Task}{}.s' ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{playTask:Task}{}.s' ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{removeTask:Task}{}.s' ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{shortAnswer:Task}{}.s' ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{songQuestion:Task}{}.s' ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{speakerTask:Task}{}.s' ;
top_command : [] . 'SingleAction{}.s' -> "glömma" "allt" ;
top_command : [] . 'SingleAction{}.s' -> "börja" "om" ;
yes : [] . 'Answer{shortAnswer:Task}{}.s' -> "ja" ;
yes : [] . 'Answer{shortAnswer:Task}{}.s' -> "japp" ;
yes : [] . 'Answer{shortAnswer:Task}{}.s' -> "jajamen" ;
doolittle_album : [] . 'Album{}.s' -> "doolittle" ;
every_good_boy_deserves_fudge_album : [] . 'Album{}.s' -> "every" "good" "boy" "deserves" "fudge" ;
heads_high_album : [] . 'Album{}.s' -> "heads" "high" ;
in_the_city_album : [] . 'Album{}.s' -> "in" "the" "city" ;
lets_get_it_on_album : [] . 'Album{}.s' -> "lets" "get" "it" "on" ;
london_calling_album : [] . 'Album{}.s' -> "london" "calling" ;
mezzanine_album : [] . 'Album{}.s' -> "mezzanine" ;
music_for_the_jilted_generation_album : [] . 'Album{}.s' -> "music" "for" "the" "jilted" "generation" ;
please_album : [] . 'Album{}.s' -> "please" ;
protection_album : [] . 'Album{}.s' -> "protection" ;
singles_album : [] . 'Album{}.s' -> "singles" ;
swedish_classics : [] . 'Album{}.s' -> "swedish" "classics" ;
the_immaculate_collection_album : [] . 'Album{}.s' -> "the" "immaculate" "collection" ;
the_sidewinder_album : [] . 'Album{}.s' -> "the" "sidewinder" ;
wish_album : [] . 'Album{}.s' -> "wish" ;
ace_of_base : [] . 'Artist{}.s' -> "ace" "of" "base" ;
atomic_swing : [] . 'Artist{}.s' -> "atomic" "swing" ;
beborn_beton : [] . 'Artist{}.s' -> "beborn" "beton" ;
billy_idol : [] . 'Artist{}.s' -> "billy" "idol" ;
britney_spears : [] . 'Artist{}.s' -> "britney" "spears" ;
clash : [] . 'Artist{}.s' -> "clash" ;
covenant : [] . 'Artist{}.s' -> "covenant" ;
creeps : [] . 'Artist{}.s' -> "creeps" ;
cure : [] . 'Artist{}.s' -> "cure" ;
eagle_eye_cherry : [] . 'Artist{}.s' -> "eagle" "eye" "cherry" ;
elvis_presley : [] . 'Artist{}.s' -> "elvis" "presley" ;
eminem : [] . 'Artist{}.s' -> "eminem" ;
enigma : [] . 'Artist{}.s' -> "enigma" ;
europe : [] . 'Artist{}.s' -> "europe" ;
fifty_cent : [] . 'Artist{}.s' -> "fifty" "cent" ;
garbage : [] . 'Artist{}.s' -> "garbage" ;
green_day : [] . 'Artist{}.s' -> "green" "day" ;
guns_and_roses : [] . 'Artist{}.s' -> "guns" "and" "roses" ;
jam : [] . 'Artist{}.s' -> "jam" ;
jessica_simpson : [] . 'Artist{}.s' -> "jessica" "simpson" ;
kate_bush : [] . 'Artist{}.s' -> "kate" "bush" ;
led_zeppelin : [] . 'Artist{}.s' -> "led" "zeppelin" ;
lee_morgan : [] . 'Artist{}.s' -> "lee" "morgan" ;
madonna : [] . 'Artist{}.s' -> "madonna" ;
marvin_gaye : [] . 'Artist{}.s' -> "mavin" "gaye" ;
massive_attack : [] . 'Artist{}.s' -> "massive" "attack" ;
michael_jackson : [] . 'Artist{}.s' -> "michael" "jackson" ;
morlocks : [] . 'Artist{}.s' -> "morlocks" ;
morrisey : [] . 'Artist{}.s' -> "morrisey" ;
mr_vegas : [] . 'Artist{}.s' -> "mister" "vegas" ;
mudhoney : [] . 'Artist{}.s' -> "mudhoney" ;
nitzer_ebb : [] . 'Artist{}.s' -> "nitzer" "ebb" ;
norah_jones : [] . 'Artist{}.s' -> "norah" "jones" ;
ozzy_osbourne : [] . 'Artist{}.s' -> "ozzy" "osbourne" ;
pain : [] . 'Artist{}.s' -> "pain" ;
pet_shop_boys : [] . 'Artist{}.s' -> "pet" "shop" "boys" ;
pixies : [] . 'Artist{}.s' -> "pixies" ;
prodigy : [] . 'Artist{}.s' -> "prodigy" ;
project_pitchfork : [] . 'Artist{}.s' -> "project" "pitchfork" ;
shania_twain : [] . 'Artist{}.s' -> "shania" "twain" ;
stephen_simmonds : [] . 'Artist{}.s' -> "stephen" "simmonds" ;
the_ark : [] . 'Artist{}.s' -> "the" "ark" ;
the_cardigans : [] . 'Artist{}.s' -> "the" "cardigans" ;
the_chemical_brothers : [] . 'Artist{}.s' -> "the" "chemical" "brothers" ;
trace_adkins : [] . 'Artist{}.s' -> "trace" "adkins" ;
trance_dance : [] . 'Artist{}.s' -> "trance" "dance" ;
usher : [] . 'Artist{}.s' -> "usher" ;
vacuum : [] . 'Artist{}.s' -> "vacuum" ;
vnv_nation : [] . 'Artist{}.s' -> "vnv" "nation" ;
all_that_she_wants : [] . 'Song{}.s' -> "all" "that" "she" "wants" ;
angel : [] . 'Song{}.s' -> "angel" ;
another_world : [] . 'Song{}.s' -> "another" "world" ;
ars_magica : [] . 'Song{}.s' -> "ars" "magica" ;
darkangel : [] . 'Song{}.s' -> "darkangel" ;
dead_stars : [] . 'Song{}.s' -> "dead" "stars" ;
debaser : [] . 'Song{}.s' -> "debaser" ;
deeper_than_the_usual_feeling : [] . 'Song{}.s' -> "deeper" "then" "the" "usual" "feeling" ;
eleanor_rigby : [] . 'Song{}.s' -> "eleanor" "rigby" ;
existence : [] . 'Song{}.s' -> "existance" ;
figurehead : [] . 'Song{}.s' -> "figurehead" ;
friday_im_in_love : [] . 'Song{}.s' -> "friday" "im" "in" "love" ;
good_enough : [] . 'Song{}.s' -> "good" "enough" ;
heads_high : [] . 'Song{}.s' -> "heads" "high" ;
i_breathe : [] . 'Song{}.s' -> "i" "breathe" ;
i_think_im_paranoid : [] . 'Song{}.s' -> "i" "think" "im" "paranoid" ;
if_i_should_die_tonight : [] . 'Song{}.s' -> "if" "i" "should" "die" "tonight" ;
in_the_city : [] . 'Song{}.s' -> "in" "the" "city" ;
it_takes_a_fool_to_remain_sain : [] . 'Song{}.s' -> "it" "takes" "s" "fool" "to" "remain" "sain" ;
latest_news : [] . 'Song{}.s' -> "latest" "news" ;
legion : [] . 'Song{}.s' -> "legion" ;
let_beauty_loose : [] . 'Song{}.s' -> "let" "beauty" "loose" ;
leviathan : [] . 'Song{}.s' -> "leviathan" ;
like_a_prayer : [] . 'Song{}.s' -> "like" "a" "prayer" ;
like_tears_in_rain : [] . 'Song{}.s' -> "like" "tears" "in" "rain" ;
london_calling : [] . 'Song{}.s' -> "london" "calling" ;
lucky_star : [] . 'Song{}.s' -> "lucky" "star" ;
material_girl : [] . 'Song{}.s' -> "material" "girl" ;
oh_i_like_it : [] . 'Song{}.s' -> "oh" "i" "like" "it" ;
poison : [] . 'Song{}.s' -> "poison" ;
razors_through_flesh : [] . 'Song{}.s' -> "razors" "through" "flesh" ;
rubicon : [] . 'Song{}.s' -> "rubicon" ;
sadness : [] . 'Song{}.s' -> "sadness" ;
save_tonight : [] . 'Song{}.s' -> "save" "tonight" ;
sex_by_force : [] . 'Song{}.s' -> "sex" "by" "force" ;
should_i_stay_or_should_i_go : [] . 'Song{}.s' -> "should" "i" "stay" "or" "should" "i" "go" ;
sly : [] . 'Song{}.s' -> "sly" ;
stalker : [] . 'Song{}.s' -> "stalker" ;
standing : [] . 'Song{}.s' -> "standing" ;
stone_me_into_the_groove : [] . 'Song{}.s' -> "stone" "me" "into" "the" "groove" ;
suburbia : [] . 'Song{}.s' -> "suburbia" ;
teardrop : [] . 'Song{}.s' -> "teardrop" ;
tears_never_dry : [] . 'Song{}.s' -> "tears" "never" "dry" ;
the_final_countdown : [] . 'Song{}.s' -> "the" "final" "countown" ;
the_man_with_the_child_in_his_eyes : [] . 'Song{}.s' -> "the" "man" "with" "the" "child" "in" "his" "eyes" ;
thorn : [] . 'Song{}.s' -> "thorn" ;
time_for_truth : [] . 'Song{}.s' -> "time" "for" "truth" ;
totem_pole : [] . 'Song{}.s' -> "totem" "pole" ;
west_end_girls : [] . 'Song{}.s' -> "west" "end" "girls" ;
youre_gonna_get_it : [] . 'Song{}.s' -> "youre" "gonna" "get" "it" ;
digital_gunfire : [] . 'Station{}.s' -> "digital" "gunfire" ;
rant_radio : [] . 'Station{}.s' -> "rant" "radio" ;
eight : [] . 'Number{}.s' -> "åtta" ;
five : [] . 'Number{}.s' -> "fem" ;
four : [] . 'Number{}.s' -> "fyra" ;
nine : [] . 'Number{}.s' -> "nio" ;
one : [] . 'Number{}.s' -> "ett" ;
seven : [] . 'Number{}.s' -> "sju" ;
six : [] . 'Number{}.s' -> "sex" ;
ten : [] . 'Number{}.s' -> "tio" ;
three : [] . 'Number{}.s' -> "tre" ;
two : [] . 'Number{}.s' -> "två" ;
eighth : [] . 'OrderNumber{}.s' -> "åttonde" ;
fifth : [] . 'OrderNumber{}.s' -> "femte" ;
first : [] . 'OrderNumber{}.s' -> "första" ;
fourth : [] . 'OrderNumber{}.s' -> "fjärde" ;
ninth : [] . 'OrderNumber{}.s' -> "nionde" ;
second : [] . 'OrderNumber{}.s' -> "andra" ;
seventh : [] . 'OrderNumber{}.s' -> "sjunde" ;
sixth : [] . 'OrderNumber{}.s' -> "sjätte" ;
tenth : [] . 'OrderNumber{}.s' -> "tionde" ;
third : [] . 'OrderNumber{}.s' -> "tredje" ;
end grammar
grammar usr_domain_player_english answerSongArtistAdd : [[0], [1]] . 'AnswerList{addTask:Task}{}.s' -> 'Song{}.s' "with" 'Artist{}.s' ;
answerSongArtistAdd : [[1], [0]] . 'AnswerList{addTask:Task}{}.s' -> 'Artist{}.s' "with" 'Song{}.s' ;
answerSongArtistPlay : [[0], [1]] . 'AnswerList{playTask:Task}{}.s' -> 'Song{}.s' "with" 'Artist{}.s' ;
answerSongArtistPlay : [[1], [0]] . 'AnswerList{playTask:Task}{}.s' -> 'Artist{}.s' "with" 'Song{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{addTask:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{artistQuestion:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{playTask:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{removeTask:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{shortAnswer:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{songQuestion:Task}{}.s' ;
makeAnswerListS : [[], [0]] . 'DMove{}.s' -> 'AnswerList{speakerTask:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> 'Ask{addTask:Task}{}.s' 'Answer{addTask:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> 'Ask{artistQuestion:Task}{}.s' 'Answer{artistQuestion:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> 'Ask{playTask:Task}{}.s' 'Answer{playTask:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> 'Ask{removeTask:Task}{}.s' 'Answer{removeTask:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> 'Ask{shortAnswer:Task}{}.s' 'Answer{shortAnswer:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> 'Ask{songQuestion:Task}{}.s' 'Answer{songQuestion:Task}{}.s' ;
makeAskMove : [[], [0], [1]] . 'CompoundedAsk{}.s' -> 'Ask{speakerTask:Task}{}.s' 'Answer{speakerTask:Task}{}.s' ;
makeCompoundedAsk : [[0]] . 'DMove{}.s' -> 'CompoundedAsk{}.s' ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> "i" "want" "to" 'CompoundedRequest{}.s' "please" ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> "i" "would" "like" "to" 'CompoundedRequest{}.s' "please" ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> "i" "want" "to" 'CompoundedRequest{}.s' ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> "i" "would" "like" "to" 'CompoundedRequest{}.s' ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> 'CompoundedRequest{}.s' "please" ;
makeCompoundedRequest : [[0]] . 'DMove{}.s' -> 'CompoundedRequest{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{addTask:Task}{}.s' 'Answer{addTask:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{artistQuestion:Task}{}.s' 'Answer{artistQuestion:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{playTask:Task}{}.s' 'Answer{playTask:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{removeTask:Task}{}.s' 'Answer{removeTask:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{shortAnswer:Task}{}.s' 'Answer{shortAnswer:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{songQuestion:Task}{}.s' 'Answer{songQuestion:Task}{}.s' ;
requestCompounded : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{speakerTask:Task}{}.s' 'Answer{speakerTask:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{addTask:Task}{}.s' 'AnswerList{addTask:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{artistQuestion:Task}{}.s' 'AnswerList{artistQuestion:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{playTask:Task}{}.s' 'AnswerList{playTask:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{removeTask:Task}{}.s' 'AnswerList{removeTask:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{shortAnswer:Task}{}.s' 'AnswerList{shortAnswer:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{songQuestion:Task}{}.s' 'AnswerList{songQuestion:Task}{}.s' ;
requestCompoundedMulti : [[], [0], [1]] . 'CompoundedRequest{}.s' -> 'Action{speakerTask:Task}{}.s' 'AnswerList{speakerTask:Task}{}.s' ;
add : [] . 'Action{addTask:Task}{}.s' -> "add" ;
add_alone : [] . 'SingleAction{}.s' -> "add" "a" "specific" "song" ;
add_alone : [] . 'SingleAction{}.s' -> "add" "this" ;
add_alone : [] . 'SingleAction{}.s' -> "add" "this" "one" ;
answerArtistAdd : [[0]] . 'Proposition{addTask:Task}{}.s' -> 'Artist{}.s' ;
answerArtistAdd : [[0]] . 'Proposition{addTask:Task}{}.s' -> "the" "artist" 'Artist{}.s' ;
answerArtistPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> 'Artist{}.s' ;
answerArtistPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "the" "artist" 'Artist{}.s' ;
answerArtistRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> 'Artist{}.s' ;
answerArtistRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "the" "artist" 'Artist{}.s' ;
answerNumberInListPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "number" 'Number{}.s' ;
answerNumberInListPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> 'Number{}.s' ;
answerNumberInListRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "number" 'Number{}.s' ;
answerNumberInListRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> 'Number{}.s' ;
answerOrderInListPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "the" 'OrderNumber{}.s' ;
answerOrderInListPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "the" 'OrderNumber{}.s' ;
answerOrderInListRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "the" 'OrderNumber{}.s' ;
answerOrderInListRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "the" 'OrderNumber{}.s' ;
answerSongAdd : [[0]] . 'Proposition{addTask:Task}{}.s' -> 'Song{}.s' ;
answerSongAdd : [[0]] . 'Proposition{addTask:Task}{}.s' -> "the" "song" 'Song{}.s' ;
answerSongPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> 'Song{}.s' ;
answerSongPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "the" "song" 'Song{}.s' ;
answerSongRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> 'Song{}.s' ;
answerSongRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "the" "song" 'Song{}.s' ;
answerStationAdd : [[0]] . 'Proposition{addTask:Task}{}.s' -> 'Station{}.s' ;
answerStationAdd : [[0]] . 'Proposition{addTask:Task}{}.s' -> "the" "station" 'Station{}.s' ;
answerStationPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> 'Station{}.s' ;
answerStationPlay : [[0]] . 'Proposition{playTask:Task}{}.s' -> "the" "station" 'Station{}.s' ;
answerStationRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> 'Station{}.s' ;
answerStationRemove : [[0]] . 'Proposition{removeTask:Task}{}.s' -> "the" "station" 'Station{}.s' ;
askArtist : [] . 'Ask{artistQuestion:Task}{}.s' -> "what" "do" "i" "have" "with" ;
askArtist : [] . 'Ask{artistQuestion:Task}{}.s' -> "what" "do" "i" "have" "by" ;
askArtist : [] . 'Ask{artistQuestion:Task}{}.s' -> "what" "songs" "do" "i" "have" "with" ;
askArtist : [] . 'Ask{artistQuestion:Task}{}.s' -> "what" "songs" "do" "i" "have" "by" ;
askArtist : [] . 'Ask{artistQuestion:Task}{}.s' -> "do" "i" "have" "anything" "with" ;
askArtist : [] . 'Ask{artistQuestion:Task}{}.s' -> "do" "i" "have" "anything" "by" ;
askCurrent : [] . 'SingleAsk{}.s' -> "what" "song" "is" "this" ;
askCurrent : [] . 'SingleAsk{}.s' -> "what" "is" "this" "called" ;
askSong : [] . 'Ask{songQuestion:Task}{}.s' -> "who" "made" ;
askSong : [] . 'Ask{songQuestion:Task}{}.s' -> "who" "wrote" ;
center : [] . 'Proposition{speakerTask:Task}{}.s' -> "middle" ;
center : [] . 'Proposition{speakerTask:Task}{}.s' -> "to" "the" "middle" ;
fastforward : [] . 'SingleAction{}.s' -> "fast" "forward" ;
handle_list : [] . 'SingleAction{}.s' -> "manage" "the" "playlist" ;
handle_player : [] . 'SingleAction{}.s' -> "talk" "to" "the" "player" ;
handle_stations : [] . 'SingleAction{}.s' -> "choose" "a" "station" ;
left : [] . 'Proposition{speakerTask:Task}{}.s' -> "left" ;
left : [] . 'Proposition{speakerTask:Task}{}.s' -> "to" "the" "left" ;
lower_volume : [] . 'SingleAction{}.s' -> "lower" "the" "volume" ;
next : [] . 'OrderNumber{}.s' -> "next" ;
pause : [] . 'SingleAction{}.s' -> "pause" ;
play : [] . 'SingleAction{}.s' -> "start" "from" "the" "beginning" ;
play : [] . 'SingleAction{}.s' -> "play" ;
play : [] . 'SingleAction{}.s' -> "start" ;
play_spec : [] . 'Action{playTask:Task}{}.s' -> "play" ;
play_spec : [] . 'Action{playTask:Task}{}.s' -> "listen" "to" ;
play_spec : [] . 'Action{playTask:Task}{}.s' -> "hear" ;
play_spec_alone : [] . 'SingleAction{}.s' -> "play" "a" "specific" "song" ;
play_spec_alone : [] . 'SingleAction{}.s' -> "play" "a" "specific" ;
play_spec_alone : [] . 'SingleAction{}.s' -> "listen" "to" "a" "specific" "song" ;
play_spec_alone : [] . 'SingleAction{}.s' -> "hear" "a" "specific" "song" ;
previous : [] . 'OrderNumber{}.s' -> "previous" ;
questionArtist : [[0]] . 'Proposition{artistQuestion:Task}{}.s' -> 'Artist{}.s' ;
questionArtist : [[0]] . 'Proposition{artistQuestion:Task}{}.s' -> "the" "artist" 'Artist{}.s' ;
questionSong : [[0]] . 'Proposition{songQuestion:Task}{}.s' -> 'Song{}.s' ;
questionSong : [[0]] . 'Proposition{songQuestion:Task}{}.s' -> "the" "song" 'Song{}.s' ;
raise_volume : [] . 'SingleAction{}.s' -> "raise" "the" "volume" ;
remove : [] . 'Action{removeTask:Task}{}.s' -> "remove" ;
remove_all : [] . 'SingleAction{}.s' -> "clear" "the" "playlist" ;
remove_alone : [] . 'SingleAction{}.s' -> "remove" ;
remove_alone : [] . 'SingleAction{}.s' -> "renmove" "this" ;
remove_alone : [] . 'SingleAction{}.s' -> "remove" "this" "one" ;
resume : [] . 'SingleAction{}.s' -> "resume" ;
resume : [] . 'SingleAction{}.s' -> "resume" "playing" ;
rewind : [] . 'SingleAction{}.s' -> "rewind" ;
right : [] . 'Proposition{speakerTask:Task}{}.s' -> "right" ;
right : [] . 'Proposition{speakerTask:Task}{}.s' -> "to" "the" "right" ;
shift : [] . 'Action{speakerTask:Task}{}.s' -> "shift" "the" "balance" ;
shift : [] . 'Action{speakerTask:Task}{}.s' -> "shift" ;
show_list : [] . 'SingleAction{}.s' -> "show" "the" "list" ;
stop : [] . 'SingleAction{}.s' -> "stop" ;
acc_neg : [] . 'Acc_ICM_Followed{}.s' -> "i" "do" "not" "know" ;
acc_neg_alone : [] . 'Acc_ICM{}.s' -> "i" "do" "not" "know" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "okay" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "ok" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "sure" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "yup" ;
acc_pos : [] . 'Acc_ICM{}.s' -> "right" ;
bye_command : [] . 'Quit{}.s' -> "goodbye" ;
bye_command : [] . 'Quit{}.s' -> "bye" ;
bye_command : [] . 'Quit{}.s' -> "end" ;
greet_command : [] . 'Greet{}.s' -> "hello" ;
greet_command : [] . 'Greet{}.s' -> "hi" ;
greet_command : [] . 'Greet{}.s' -> "yo" ;
help_command : [] . 'SingleAction{}.s' -> "get" "help" ;
help_command : [] . 'SingleAction{}.s' -> "help" ;
makeAnswer : [[], [0]] . 'Answer{addTask:Task}{}.s' -> 'Proposition{addTask:Task}{}.s' ;
makeAnswer : [[], [0]] . 'Answer{artistQuestion:Task}{}.s' -> 'Proposition{artistQuestion:Task}{}.s' ;
makeAnswer : [[], [0]] . 'Answer{playTask:Task}{}.s' -> 'Proposition{playTask:Task}{}.s' ;
makeAnswer : [[], [0]] . 'Answer{removeTask:Task}{}.s' -> 'Proposition{removeTask:Task}{}.s' ;
makeAnswer : [[], [0]] . 'Answer{shortAnswer:Task}{}.s' -> 'Proposition{shortAnswer:Task}{}.s' ;
makeAnswer : [[], [0]] . 'Answer{songQuestion:Task}{}.s' -> 'Proposition{songQuestion:Task}{}.s' ;
makeAnswer : [[], [0]] . 'Answer{speakerTask:Task}{}.s' -> 'Proposition{speakerTask:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{addTask:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{artistQuestion:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{playTask:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{removeTask:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{shortAnswer:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{songQuestion:Task}{}.s' ;
makeAnswerMove : [[], [0]] . 'DMove{}.s' -> 'Answer{speakerTask:Task}{}.s' ;
makeAsk : [[0]] . 'DMove{}.s' -> 'SingleAsk{}.s' ;
makeGreetMove : [[0]] . 'DMove{}.s' -> 'Greet{}.s' ;
makeICMAcc : [[0]] . 'ICM{}.s' -> 'Acc_ICM{}.s' ;
makeICMMove : [[0]] . 'DMove{}.s' -> 'ICM{}.s' ;
makeICMPer : [[0]] . 'ICM{}.s' -> 'Per_ICM{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{addTask:Task}{}.s' -> "not" 'Proposition{addTask:Task}{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{artistQuestion:Task}{}.s' -> "not" 'Proposition{artistQuestion:Task}{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{playTask:Task}{}.s' -> "not" 'Proposition{playTask:Task}{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{removeTask:Task}{}.s' -> "not" 'Proposition{removeTask:Task}{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{shortAnswer:Task}{}.s' -> "not" 'Proposition{shortAnswer:Task}{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{songQuestion:Task}{}.s' -> "not" 'Proposition{songQuestion:Task}{}.s' ;
makeNegAnswer : [[], [0]] . 'NegAnswer{speakerTask:Task}{}.s' -> "not" 'Proposition{speakerTask:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{addTask:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{artistQuestion:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{playTask:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{removeTask:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{shortAnswer:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{songQuestion:Task}{}.s' ;
makeNegAnswerMove : [[], [0]] . 'DMove{}.s' -> 'NegAnswer{speakerTask:Task}{}.s' ;
makeQuitMove : [[0]] . 'DMove{}.s' -> 'Quit{}.s' ;
makeRequest : [[0]] . 'Request{}.s' -> 'SingleAction{}.s' ;
makeRequestMove : [[0]] . 'DMove{}.s' -> 'Request{}.s' ;
makeRequestMove : [[0]] . 'DMove{}.s' -> "i" "want" "to" 'Request{}.s' "please" ;
makeRequestMove : [[0]] . 'DMove{}.s' -> "i" "would" "like" "to" 'Request{}.s' "please" ;
makeRequestMove : [[0]] . 'DMove{}.s' -> "i" "want" "to" 'Request{}.s' ;
makeRequestMove : [[0]] . 'DMove{}.s' -> "i" "would" "like" "to" 'Request{}.s' ;
makeRequestMove : [[0]] . 'DMove{}.s' -> 'Request{}.s' "please" ;
makeS : [[0]] . 'S{}.s' -> 'DMove{}.s' ;
no : [] . 'Answer{shortAnswer:Task}{}.s' -> "no" ;
no : [] . 'Answer{shortAnswer:Task}{}.s' -> "nope" ;
per_int : [] . 'Per_ICM{}.s' -> "pardon" ;
per_int : [] . 'Per_ICM{}.s' -> "what" "did" "you" "say" ;
per_neg : [] . 'Per_ICM{}.s' -> "what" ;
per_neg : [] . 'Per_ICM{}.s' -> "pardon" ;
per_neg : [] . 'Per_ICM{}.s' -> "pardon" "i" "did" "not" "hear" "what" "you" "said" ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{addTask:Task}{}.s' ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{artistQuestion:Task}{}.s' ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{playTask:Task}{}.s' ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{removeTask:Task}{}.s' ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{shortAnswer:Task}{}.s' ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{songQuestion:Task}{}.s' ;
singleAsk : [[], [0]] . 'SingleAsk{}.s' -> 'Ask{speakerTask:Task}{}.s' ;
top_command : [] . 'SingleAction{}.s' -> "top" ;
top_command : [] . 'SingleAction{}.s' -> "forget" "everything" ;
top_command : [] . 'SingleAction{}.s' -> "start" "over" ;
yes : [] . 'Answer{shortAnswer:Task}{}.s' -> "yes" ;
yes : [] . 'Answer{shortAnswer:Task}{}.s' -> "yup" ;
yes : [] . 'Answer{shortAnswer:Task}{}.s' -> "yeppers" ;
doolittle_album : [] . 'Album{}.s' -> "doolittle" ;
every_good_boy_deserves_fudge_album : [] . 'Album{}.s' -> "every" "good" "boy" "deserves" "fudge" ;
heads_high_album : [] . 'Album{}.s' -> "heads" "high" ;
in_the_city_album : [] . 'Album{}.s' -> "in" "the" "city" ;
lets_get_it_on_album : [] . 'Album{}.s' -> "lets" "get" "it" "on" ;
london_calling_album : [] . 'Album{}.s' -> "london" "calling" ;
mezzanine_album : [] . 'Album{}.s' -> "mezzanine" ;
music_for_the_jilted_generation_album : [] . 'Album{}.s' -> "music" "for" "the" "jilted" "generation" ;
please_album : [] . 'Album{}.s' -> "please" ;
protection_album : [] . 'Album{}.s' -> "protection" ;
singles_album : [] . 'Album{}.s' -> "singles" ;
swedish_classics : [] . 'Album{}.s' -> "swedish" "classics" ;
the_immaculate_collection_album : [] . 'Album{}.s' -> "the" "immaculate" "collection" ;
the_sidewinder_album : [] . 'Album{}.s' -> "the" "sidewinder" ;
wish_album : [] . 'Album{}.s' -> "wish" ;
ace_of_base : [] . 'Artist{}.s' -> "ace" "of" "base" ;
atomic_swing : [] . 'Artist{}.s' -> "atomic" "swing" ;
beborn_beton : [] . 'Artist{}.s' -> "beborn" "beton" ;
billy_idol : [] . 'Artist{}.s' -> "billy" "idol" ;
britney_spears : [] . 'Artist{}.s' -> "britney" "spears" ;
clash : [] . 'Artist{}.s' -> "clash" ;
covenant : [] . 'Artist{}.s' -> "covenant" ;
creeps : [] . 'Artist{}.s' -> "creeps" ;
cure : [] . 'Artist{}.s' -> "cure" ;
eagle_eye_cherry : [] . 'Artist{}.s' -> "eagle" "eye" "cherry" ;
elvis_presley : [] . 'Artist{}.s' -> "elvis" "presley" ;
eminem : [] . 'Artist{}.s' -> "eminem" ;
enigma : [] . 'Artist{}.s' -> "enigma" ;
europe : [] . 'Artist{}.s' -> "europe" ;
fifty_cent : [] . 'Artist{}.s' -> "fifty" "cent" ;
garbage : [] . 'Artist{}.s' -> "garbage" ;
green_day : [] . 'Artist{}.s' -> "green" "day" ;
guns_and_roses : [] . 'Artist{}.s' -> "guns" "and" "roses" ;
jam : [] . 'Artist{}.s' -> "jam" ;
jessica_simpson : [] . 'Artist{}.s' -> "jessica" "simpson" ;
kate_bush : [] . 'Artist{}.s' -> "kate" "bush" ;
led_zeppelin : [] . 'Artist{}.s' -> "led" "zeppelin" ;
lee_morgan : [] . 'Artist{}.s' -> "lee" "morgan" ;
madonna : [] . 'Artist{}.s' -> "madonna" ;
marvin_gaye : [] . 'Artist{}.s' -> "mavin" "gaye" ;
massive_attack : [] . 'Artist{}.s' -> "massive" "attack" ;
michael_jackson : [] . 'Artist{}.s' -> "michael" "jackson" ;
morlocks : [] . 'Artist{}.s' -> "morlocks" ;
morrisey : [] . 'Artist{}.s' -> "morrisey" ;
mr_vegas : [] . 'Artist{}.s' -> "mister" "vegas" ;
mudhoney : [] . 'Artist{}.s' -> "mudhoney" ;
nitzer_ebb : [] . 'Artist{}.s' -> "nitzer" "ebb" ;
norah_jones : [] . 'Artist{}.s' -> "norah" "jones" ;
ozzy_osbourne : [] . 'Artist{}.s' -> "ozzy" "osbourne" ;
pain : [] . 'Artist{}.s' -> "pain" ;
pet_shop_boys : [] . 'Artist{}.s' -> "pet" "shop" "boys" ;
pixies : [] . 'Artist{}.s' -> "pixies" ;
prodigy : [] . 'Artist{}.s' -> "prodigy" ;
project_pitchfork : [] . 'Artist{}.s' -> "project" "pitchfork" ;
shania_twain : [] . 'Artist{}.s' -> "shania" "twain" ;
stephen_simmonds : [] . 'Artist{}.s' -> "stephen" "simmonds" ;
the_ark : [] . 'Artist{}.s' -> "the" "ark" ;
the_cardigans : [] . 'Artist{}.s' -> "the" "cardigans" ;
the_chemical_brothers : [] . 'Artist{}.s' -> "the" "chemical" "brothers" ;
trace_adkins : [] . 'Artist{}.s' -> "trace" "adkins" ;
trance_dance : [] . 'Artist{}.s' -> "trance" "dance" ;
usher : [] . 'Artist{}.s' -> "usher" ;
vacuum : [] . 'Artist{}.s' -> "vacuum" ;
vnv_nation : [] . 'Artist{}.s' -> "vnv" "nation" ;
all_that_she_wants : [] . 'Song{}.s' -> "all" "that" "she" "wants" ;
angel : [] . 'Song{}.s' -> "angel" ;
another_world : [] . 'Song{}.s' -> "another" "world" ;
ars_magica : [] . 'Song{}.s' -> "ars" "magica" ;
darkangel : [] . 'Song{}.s' -> "darkangel" ;
dead_stars : [] . 'Song{}.s' -> "dead" "stars" ;
debaser : [] . 'Song{}.s' -> "debaser" ;
deeper_than_the_usual_feeling : [] . 'Song{}.s' -> "deeper" "then" "the" "usual" "feeling" ;
eleanor_rigby : [] . 'Song{}.s' -> "eleanor" "rigby" ;
existence : [] . 'Song{}.s' -> "existance" ;
figurehead : [] . 'Song{}.s' -> "figurehead" ;
friday_im_in_love : [] . 'Song{}.s' -> "friday" "im" "in" "love" ;
good_enough : [] . 'Song{}.s' -> "good" "enough" ;
heads_high : [] . 'Song{}.s' -> "heads" "high" ;
i_breathe : [] . 'Song{}.s' -> "i" "breathe" ;
i_think_im_paranoid : [] . 'Song{}.s' -> "i" "think" "im" "paranoid" ;
if_i_should_die_tonight : [] . 'Song{}.s' -> "if" "i" "should" "die" "tonight" ;
in_the_city : [] . 'Song{}.s' -> "in" "the" "city" ;
it_takes_a_fool_to_remain_sain : [] . 'Song{}.s' -> "it" "takes" "s" "fool" "to" "remain" "sain" ;
latest_news : [] . 'Song{}.s' -> "latest" "news" ;
legion : [] . 'Song{}.s' -> "legion" ;
let_beauty_loose : [] . 'Song{}.s' -> "let" "beauty" "loose" ;
leviathan : [] . 'Song{}.s' -> "leviathan" ;
like_a_prayer : [] . 'Song{}.s' -> "like" "a" "prayer" ;
like_tears_in_rain : [] . 'Song{}.s' -> "like" "tears" "in" "rain" ;
london_calling : [] . 'Song{}.s' -> "london" "calling" ;
lucky_star : [] . 'Song{}.s' -> "lucky" "star" ;
material_girl : [] . 'Song{}.s' -> "material" "girl" ;
oh_i_like_it : [] . 'Song{}.s' -> "oh" "i" "like" "it" ;
poison : [] . 'Song{}.s' -> "poison" ;
razors_through_flesh : [] . 'Song{}.s' -> "razors" "through" "flesh" ;
rubicon : [] . 'Song{}.s' -> "rubicon" ;
sadness : [] . 'Song{}.s' -> "sadness" ;
save_tonight : [] . 'Song{}.s' -> "save" "tonight" ;
sex_by_force : [] . 'Song{}.s' -> "sex" "by" "force" ;
should_i_stay_or_should_i_go : [] . 'Song{}.s' -> "should" "i" "stay" "or" "should" "i" "go" ;
sly : [] . 'Song{}.s' -> "sly" ;
stalker : [] . 'Song{}.s' -> "stalker" ;
standing : [] . 'Song{}.s' -> "standing" ;
stone_me_into_the_groove : [] . 'Song{}.s' -> "stone" "me" "into" "the" "groove" ;
suburbia : [] . 'Song{}.s' -> "suburbia" ;
teardrop : [] . 'Song{}.s' -> "teardrop" ;
tears_never_dry : [] . 'Song{}.s' -> "tears" "never" "dry" ;
the_final_countdown : [] . 'Song{}.s' -> "the" "final" "countown" ;
the_man_with_the_child_in_his_eyes : [] . 'Song{}.s' -> "the" "man" "with" "the" "child" "in" "his" "eyes" ;
thorn : [] . 'Song{}.s' -> "thorn" ;
time_for_truth : [] . 'Song{}.s' -> "time" "for" "truth" ;
totem_pole : [] . 'Song{}.s' -> "totem" "pole" ;
west_end_girls : [] . 'Song{}.s' -> "west" "end" "girls" ;
youre_gonna_get_it : [] . 'Song{}.s' -> "youre" "gonna" "get" "it" ;
digital_gunfire : [] . 'Station{}.s' -> "digital" "gunfire" ;
rant_radio : [] . 'Station{}.s' -> "rant" "radio" ;
eight : [] . 'Number{}.s' -> "eight" ;
five : [] . 'Number{}.s' -> "five" ;
four : [] . 'Number{}.s' -> "four" ;
nine : [] . 'Number{}.s' -> "nine" ;
one : [] . 'Number{}.s' -> "one" ;
seven : [] . 'Number{}.s' -> "seven" ;
six : [] . 'Number{}.s' -> "six" ;
ten : [] . 'Number{}.s' -> "ten" ;
three : [] . 'Number{}.s' -> "three" ;
two : [] . 'Number{}.s' -> "two" ;
eighth : [] . 'OrderNumber{}.s' -> "eight" ;
fifth : [] . 'OrderNumber{}.s' -> "fifth" ;
first : [] . 'OrderNumber{}.s' -> "first" ;
fourth : [] . 'OrderNumber{}.s' -> "fourth" ;
ninth : [] . 'OrderNumber{}.s' -> "ninth" ;
second : [] . 'OrderNumber{}.s' -> "second" ;
seventh : [] . 'OrderNumber{}.s' -> "seventh" ;
sixth : [] . 'OrderNumber{}.s' -> "sixth" ;
tenth : [] . 'OrderNumber{}.s' -> "tenth" ;
third : [] . 'OrderNumber{}.s' -> "third" ;
end grammar
