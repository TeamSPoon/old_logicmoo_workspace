
% File search paths

file_search_path(general_regulus_grammars,'$REGULUS/Grammar').
file_search_path(toy1_regulus_grammars,'$REGULUS/Examples/Toy1Alterf/Regulus').
file_search_path(corpora,'$REGULUS/Examples/Toy1Alterf/corpora').
file_search_path(toy1_runtime,'$REGULUS/Examples/Toy1Alterf/Generated').
file_search_path(toy1_prolog,'$REGULUS/Examples/Toy1Alterf/Prolog').

file_search_path(tmp,'C:/Temp').

% Config information for version of Toy1 derived from general grammar

% The current Regulus grammar consists of the following four files
regulus_config(regulus_grammar, 
	       [general_regulus_grammars(general_eng), 
		general_regulus_grammars(gen_eng_lex), 
		general_regulus_grammars(linear_sem), 
		toy1_regulus_grammars(toy1_lex)
	    ]).

% The top-level category is .MAIN
regulus_config(top_level_cat, '.MAIN').

% The NUANCE command will write the target GSL grammar to this file. 
% (At present, compilation runs out of memory).
regulus_config(nuance_grammar, toy1_runtime(toy1_recogniser)).	

% EBL training will use this file as its training corpus.
regulus_config(ebl_corpus, [corpora('toy1_corpus.pl')]).

% EBL training will use the operationality criteria 
% defined in 'operationality.pl'
regulus_config(ebl_operationality, file(toy1_prolog('operationality.pl'))).

% The EBL specialised grammar, which can be loaded using the EBL_LOAD command.
regulus_config(ebl_regulus_component_grammar, [toy1_runtime(toy1_specialised_default)]).

/*
% Ignore the following features in the specialised grammar.
% Including this declaration makes Regulus to Nuance compilation go much faster.
regulus_config(ebl_ignore_feats, 
	       [def, subj_def, obj_def, indobj_def,
		syn_type, subj_syn_type, obj_syn_type, indobj_syn_type
	       ]).	
*/	

% The command EBL_NUANCE writes the specialised Nuance grammar to this file.
regulus_config(ebl_nuance_grammar, toy1_runtime(toy1_specialised_recogniser)).

% Working files have names starting with the expansion of this file.
regulus_config(working_file_prefix, toy1_runtime('toy1')).

