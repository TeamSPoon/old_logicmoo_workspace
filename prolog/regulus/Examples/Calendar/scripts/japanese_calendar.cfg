

% File search paths

file_search_path(general_japanese_grammars,'$REGULUS/Grammar/Japanese').
file_search_path(calendar_regulus_grammars,'$REGULUS/Examples/Calendar/Regulus').
file_search_path(corpora,'$REGULUS/Examples/Calendar/corpora').
file_search_path(calendar_runtime,'$REGULUS/Examples/Calendar/Generated').
file_search_path(calendar_prolog,'$REGULUS/Examples/Calendar/Prolog').
file_search_path(calendar_scripts,'$REGULUS/Examples/Calendar/scripts').

file_search_path(tmp,'C:/Temp').

% LFs are post-processed using the predicate riacs_postproc_lf, defined in $REGULUS/Prolog/regulus_eval.pl
regulus_config(lf_postproc_pred, riacs_postproc_lf).

% The top-level category is .MAIN
regulus_config(top_level_cat, '.MAIN').

% Parse preferences
regulus_config(parse_preferences, calendar_prolog('japanese_parse_preferences.pl')).

% EBL training will use the operationality criteria 
regulus_config(ebl_operationality, file(calendar_prolog('japanese_operationality_recognition.pl'))).

% Include more lexicon entries as specified by this file
regulus_config(ebl_include_lex, calendar_regulus_grammars('japanese_recognition_lex_includes.pl')).

% Config information for version of Calendar derived from general grammar

% The current Regulus grammar consists of the following four files
regulus_config(regulus_grammar, 
	       [general_japanese_grammars(romaji_script),
		general_japanese_grammars(riacs_sem),
		general_japanese_grammars(japanese_core_rules), 
		general_japanese_grammars(japanese_recognition_rules), 
		general_japanese_grammars(japanese_core_lex),
		calendar_regulus_grammars(japanese_calendar_lex),
		% Create this file by doing 'make japanese_name_lexicon' in $REGULUS/Examples/Calendar/scripts
		calendar_regulus_grammars(japanese_generated_names)
	    ]).

% EBL training will use this file as its training corpus.
regulus_config(ebl_corpus,
	       [corpora('japanese_calendar_dev_corpus.pl')
	       ]).

% The EBL specialised grammar, which can be loaded using the EBL_LOAD command.
regulus_config(ebl_regulus_component_grammar, [calendar_runtime(japanese_calendar_specialised_default)]).

% The command EBL_NUANCE writes the specialised Nuance grammar to this file.
regulus_config(ebl_nuance_grammar, calendar_runtime(japanese_recogniser)).

% Working files have names starting with the expansion of this file.
regulus_config(working_file_prefix, calendar_runtime('japanese_calendar')).
regulus_config(working_directory, calendar_runtime('')).

% Dialogue specific declarations:

% Dialogue processing code in these files
regulus_config(dialogue_files,
	       [calendar_prolog('input_manager.pl'),
		calendar_prolog('japanese_resolve_lf.pl'),
		calendar_prolog('dialogue_manager.pl'),
		calendar_prolog('resolve_dialogue_move.pl'),
		calendar_prolog('japanese_output_manager.pl'),
	       
		calendar_prolog('japanese_database.pl')
	       ]).

% N-best preference features and weights
regulus_config(nbest_preferences, calendar_prolog('japanese_calendar_nbest.pl')).

% LF patterns for use in input manager
regulus_config(lf_patterns, calendar_prolog('japanese_lf_patterns.pl')).

% Modules referenced by compiled LF patterns
regulus_config(lf_patterns_modules,
	       [library(lists),
		library(system),
		'$REGULUS/PrologLib/utilities',
		'$REGULUS/Examples/Calendar/Prolog/calendar_utils',
		'$REGULUS/Examples/Calendar/Prolog/japanese_calendar_utils']).

% Compiled paraphrase generation grammar.
% Created using resources defined in config file paraphrase.cfg, in this directory.	
regulus_config(paraphrase_generation_grammar, calendar_runtime('japanese_paraphrase_generator.pl')).

% Orthography rules for post-processing paraphrase output
regulus_config(orthography_rules, calendar_prolog('japanese_orthography_rules.pl')).

% Where to put data for training N-best preferences
regulus_config(nbest_training_data_file, calendar_runtime('japanese_nbest_training_data.pl')).

% PARAMETERS FOR NUANCE-COMPILE

% Take data for doing PCFG tuning from here...
regulus_config(grammar_probs_data,
	       [corpora('japanese_calendar_dev_corpus.pl')]).
% ... and write the training data to here
regulus_config(ebl_grammar_probs, calendar_runtime('japanese_grammar_probs_data_file.txt')).

% Perform PCFG training on the specialised Nuance grammar
regulus_config(nuance_grammar_for_pcfg_training, calendar_runtime(japanese_recogniser)).

% ... putting the result in this directory
regulus_config(pcfg_training_output_directory, calendar_runtime(japanese_pcfg_trained)).

% Perform nuance-compile on scripts/combined_glm_slm,
% which includes the grammar resulting from PCFG training
regulus_config(nuance_grammar_for_compilation, calendar_scripts(japanese_combined_glm_slm)).

% ... using the Japanese language pack 
regulus_config(nuance_language_pack, 'Japanese').

% ... and the following parameters 
regulus_config(nuance_compile_params, ['-auto_pron', '-dont_flatten']).

% ... and writing out the resulting package here
regulus_config(nuance_recognition_package, calendar_runtime(japanese_recogniser)).

% END OF PARAMETERS FOR NUANCE-COMPILE

% Directory for wavfile output
regulus_config(wavfile_directory, '$REGULUS/Examples/Calendar/japanese_wavfiles').

regulus_config(dialogue_corpus,
	       [corpora('japanese_calendar_dev_corpus.pl')]).
regulus_config(dialogue_corpus(ellipsis), corpora('japanese_calendar_dev_corpus_ellipsis.pl')).
regulus_config(dialogue_corpus(sep2008_speech), calendar_runtime('japdatacollsep2008.pl')).
regulus_config(dialogue_corpus(sep2008_speech_no_paraphrases), calendar_runtime('japdatacollsep2008.pl')).
regulus_config(dialogue_corpus(sep2008_speech_no_datastructures), calendar_runtime('japdatacollsep2008.pl')).

regulus_config(dialogue_speech_corpus, corpora('JapDataCollSep2008/all_transcriptions.txt')).
regulus_config(dialogue_speech_corpus(in_coverage), corpora('JapDataCollSep2008/transcriptions_in_coverage.txt')).
regulus_config(dialogue_speech_corpus(out_of_coverage), corpora('JapDataCollSep2008/transcriptions_out_of_coverage.txt')).

% File for marking in-coverage paraphrases for out-of-coverage transcriptions
regulus_config(paraphrase_corpus, corpora('japanese_transcription_paraphrases.pl')).

regulus_config(dialogue_speech_corpus(training), corpora('japanese_calendar_transcriptions_training.txt')).
regulus_config(dialogue_speech_corpus(test), corpora('japanese_calendar_transcriptions_test.txt')).
regulus_config(dialogue_speech_corpus(in_coverage_test), corpora('calendar_transcriptions_in_coverage_test.txt')).
regulus_config(dialogue_speech_corpus(out_of_coverage_test), corpora('japanese_calendar_transcriptions_out_of_coverage_test.txt')).
regulus_config(dialogue_speech_corpus(pda), corpora('japanese_calendar_transcriptions_pda.txt')).
regulus_config(dialogue_speech_corpus(in_coverage_pda), corpora('japanese_calendar_transcriptions_in_coverage_pda.txt')).
regulus_config(dialogue_speech_corpus(out_of_coverage_pda), corpora('japanese_calendar_transcriptions_out_of_coverage_pda.txt')).

regulus_config(dialogue_corpus_results, calendar_runtime('japanese_calendar_dev_corpus_results.pl')).
regulus_config(dialogue_corpus_results(ellipsis), calendar_runtime('japanese_calendar_dev_corpus_results_ellipsis.pl')).
regulus_config(dialogue_corpus_results(sep2008_speech), calendar_runtime('japanese_calendar_sep2008_text_results.pl')).
regulus_config(dialogue_corpus_results(sep2008_speech_no_paraphrases), calendar_runtime('japanese_calendar_sep2008_text_results_no_paraphrases.pl')).
regulus_config(dialogue_corpus_results(sep2008_speech_no_datastructures), calendar_runtime('japanese_calendar_sep2008_text_results_no_datastructures.pl')).

regulus_config(dialogue_speech_corpus_results, calendar_runtime('japanese_calendar_speech_dialogue_results.pl')).
regulus_config(dialogue_speech_corpus_results(training), calendar_runtime('japanese_calendar_speech_dialogue_results_training.pl')).
regulus_config(dialogue_speech_corpus_results(test), calendar_runtime('japanese_calendar_speech_dialogue_results_test.pl')).
regulus_config(dialogue_speech_corpus_results(in_coverage), calendar_runtime('japanese_calendar_speech_dialogue_results_in_coverage.pl')).
regulus_config(dialogue_speech_corpus_results(out_of_coverage), calendar_runtime('japanese_calendar_speech_dialogue_results_out_of_coverage.pl')).
regulus_config(dialogue_speech_corpus_results(in_coverage_test), calendar_runtime('japanese_calendar_speech_dialogue_results_in_coverage_test.pl')).
regulus_config(dialogue_speech_corpus_results(out_of_coverage_test), calendar_runtime('japanese_calendar_speech_dialogue_results_out_of_coverage_test.pl')).
regulus_config(dialogue_speech_corpus_results(pda), calendar_runtime('japanese_calendar_speech_dialogue_results_pda.pl')).
regulus_config(dialogue_speech_corpus_results(in_coverage_pda), calendar_runtime('japanese_calendar_speech_dialogue_results_in_coverage_pda.pl')).
regulus_config(dialogue_speech_corpus_results(out_of_coverage_pda), calendar_runtime('japanese_calendar_speech_dialogue_results_out_of_coverage_pda.pl')).

regulus_config(dialogue_corpus_judgements, corpora('japanese_calendar_dialogue_judgements.pl')).

regulus_config(targeted_help_source_files, [calendar_runtime('japanese_calendar_dev_corpus_results.pl')]).
regulus_config(targeted_help_classes_file, calendar_prolog('japanese_help_classes.pl')).
regulus_config(compiled_targeted_help_classes_file, calendar_runtime('japanese_compiled_help_classes.pl')).
regulus_config(targeted_help_backed_off_corpus_file, calendar_runtime('japanese_targeted_help_backed_off_corpus.pl')).

regulus_config(dialogue_rec_params,
	       [package=calendar_runtime(japanese_recogniser), grammar='.MAIN',
		'rec.Pruning=1400', 'rec.DoNBest=TRUE', 'rec.NumNBest=6']).
	       	%'rec.Pruning=1600']).
	       
