
% Config information for interlingua-checking grammar

% File search paths

file_search_path(paraphrase_grammars,'$REGULUS/Examples/Calendar/Regulus').

file_search_path(calendar_runtime,'$REGULUS/Examples/Calendar/Generated').
file_search_path(calendar_prolog,'$REGULUS/Examples/Calendar/Prolog').

file_search_path(tmp,'C:/Temp').

% Regulus config values

regulus_config(regulus_grammar, 
	       [paraphrase_grammars(japanese_paraphrase),
		% Create this file by doing 'make japanese_name_lexicon' in $REGULUS/Examples/Calendar/scripts
		paraphrase_grammars(japanese_generated_names)]).
regulus_config(generation_regulus_grammar, 
	       [paraphrase_grammars(japanese_paraphrase),
		% Create this file by doing 'make japanese_name_lexicon' in $REGULUS/Examples/Calendar/scripts
		paraphrase_grammars(japanese_generated_names)]).

regulus_config(top_level_cat, '.MAIN').

regulus_config(prolog_semantics, yes).

regulus_config(working_file_prefix, calendar_runtime(japanese_paraphrase)).
regulus_config(working_directory, calendar_runtime('')).

% Trivial settings for iterative deepening - perform one iteration, and allow anything of depth =< 50
regulus_config(generation_incremental_deepening_parameters, [0, 50, 50]).

regulus_config(generation_grammar, calendar_runtime('japanese_paraphrase_generator.pl')).

regulus_config(generation_module_name, paraphrase).
regulus_config(top_level_generation_pred, generate_paraphrase).
regulus_config(top_level_generation_cat, '.MAIN').
regulus_config(top_level_generation_feat, value).

