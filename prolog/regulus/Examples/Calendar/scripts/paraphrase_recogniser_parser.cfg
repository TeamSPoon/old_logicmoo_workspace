
% Config information for paraphrase recognition grammar

% File search paths

file_search_path(paraphrase_grammars,'$REGULUS/Examples/Calendar/Regulus').

file_search_path(calendar_runtime,'$REGULUS/Examples/Calendar/Generated').
file_search_path(calendar_prolog,'$REGULUS/Examples/Calendar/Prolog').

file_search_path(tmp,'C:/Temp').

% Regulus config values

regulus_config(regulus_grammar, 
	       [paraphrase_grammars(paraphrase_main),
	        paraphrase_grammars(paraphrase_speech),
	        paraphrase_grammars(paraphrase_analysis),
		% Create this file by doing 'make name_lexicon' in $REGULUS/Examples/Calendar/scripts
		paraphrase_grammars(generated_names)]).

regulus_config(top_level_cat, '.MAIN').

regulus_config(prolog_semantics, yes).

regulus_config(nuance_language_pack, 'English.UK').
regulus_config(nuance_compile_params, ['-auto_pron', '-dont_flatten']).

regulus_config(working_file_prefix, calendar_runtime(paraphrase_recogniser)).
regulus_config(working_directory, calendar_runtime('')).

% Dialogue processing code in these files
regulus_config(dialogue_files,
	       [calendar_prolog('trivial_input_manager.pl'),
		calendar_prolog('dialogue_manager.pl'),
		calendar_prolog('output_manager.pl'),

	        calendar_prolog('pre_process_for_paraphrasing.pl'),
	       
		calendar_prolog('database1.pl')
	       ]).

% Compiled paraphrase generation grammar.
% Created using resources defined in config file paraphrase.cfg, in this directory.	
regulus_config(paraphrase_generation_grammar, calendar_runtime('paraphrase_generator.pl')).	

% Orthography rules for post-processing output
regulus_config(orthography_rules, calendar_prolog('orthography_rules.pl')).

regulus_config(dialogue_rec_params,
	       [package=calendar_runtime(paraphrase_recogniser), grammar='.MAIN__paraphrase',
		'rec.Pruning=1600', 'rec.DoNBest=TRUE', 'rec.NumNBest=6']).
	       	%'rec.Pruning=1600']).
	       
% N-best preference features and weights
regulus_config(nbest_preferences, calendar_prolog('calendar_nbest.pl')).

regulus_config(dialogue_speech_corpus, corpora('EngParaphraseRecogniser/wavfiles_with_transcripts.txt')).
regulus_config(dialogue_speech_corpus(in_coverage), corpora('EngParaphraseRecogniser/wavfiles_with_transcripts_in_coverage.txt')).
regulus_config(dialogue_speech_corpus(out_of_coverage), corpora('EngParaphraseRecogniser/wavfiles_with_transcripts_out_of_coverage.txt')).

regulus_config(dialogue_speech_corpus_results, calendar_runtime('paraphrase_recogniser_speech_dialogue_results.pl')).

regulus_config(dialogue_corpus_judgements, corpora('paraphrase_recogniser_dialogue_judgements.pl')).

