
macro(question_s_sem(S),
      [[question, S]]).

macro(dcl_s_sem_main(S),
      [[dcl, S]]).

macro(imp_s_sem_main(S),
      [[polite_imperative, S]]).

macro(utterance_interjection_sem(Sem),
      Sem).

macro(utterance_np_sem(Sem),
      [[phrase, Sem]]).

macro(utterance_pp_sem(Sem),
      [[phrase, Sem]]).

macro(dcl_s_sem(S),
      S).

macro(s_comps_vbar_sem(Comps, Vbar),
      concat(Comps, Vbar)).

macro(null_comps_sem,
      [[verb_type, no_complements]]).

macro(comps_topic_comps_sem(Np, Comps),
      concat([[topic, Np]], Comps)).

macro(comps_subj_comps_sem(Np, Comps),
      concat([[subject, Np]], Comps)).

macro(comps_obj_comps_sem(Np, Comps),
      concat([[object, Np]], Comps)).

macro(comps_pp_comps(Pp, Comps),
      concat(Pp, Comps)).

macro(comps_cond_comps(Cond, Comps),
      concat(Cond, Comps)).

macro(comps_advp_comps(Advp, Comps),
      concat(Advp, Comps)).

macro(comps_temporal_np_comps(Np, Comps),
      concat([[temporal, Np]], Comps)).

macro(vbar_np_copula_sem(Np, Copula),
      concat([[subject, Np]], Copula)).

macro(vbar_adjp_copula_sem(Adjp, Copula),
      concat(Adjp, Copula)).

macro(vbar_pp_copula_sem(Pp, Copula),
      concat(Pp, Copula)).

macro(vbar_v_aux_sem(V, Aux),
      concat(Aux, V)).

macro(vbar_koto_ga_aru_sem(V, KotoGaAru),
      concat(V, KotoGaAru)).

macro(np_np_no_np_sem(Np1, Np2),
      concat([[gen, Np1]], Np2)).

macro(np_pp_no_np_sem(Pp, Np),
      concat(Pp, Np)).

macro(np_np_np_sem(Np1, Np2),
      concat([[nn, Np1]], Np2)).

macro(np_clause_np_sem(Clause, Np),
      concat([[clause, Clause]], Np)).

macro(np_n_sem(N),
      [[spec, null], [head, N]]).

macro(np_spec_n_sem(Spec, N),
      [[spec, Spec], [head, N]]).

macro(np_temporal_np_sem(Np),
      Np).

macro(np_adjp_np_sem(Adjp, Np),
      concat(Adjp, Np)).

macro(np_name_sem(Name),
      [[spec, name], [head, Name]]).

macro(np_number_unit_sem(Number, Unit),
      [[spec, Number], [head, Unit]]).

macro(np_np_comparative_sem(Np, Comparative),
      concat(Np, Comparative)).

macro(np_frequency_np_sem(Np1, Np2),
      concat([[frequency, Np1]], Np2)).

macro(np_comparative_frequency_np_sem(Comparative, Np1, Np2),
      concat([[frequency, concat(Comparative, Np1)]], Np2)).

macro(np_time_sem(Time),
      Time).

macro(np_time_goro_sem(Time),
      concat(Time, [[time_qualifier, approximate]])).

macro(np_date_sem(Date),
      Date).

macro(time_hour_sem(H),
      [[special_np, time], [hour, H], [minute, 0]]).

macro(time_hour_minute_sem(H, M),
      [[special_np, time], [hour, H], [minute, M]]).

macro(date_year_month_sem(Year, Month),
      [[special_np, date], [year, Year], [month, Month]]).      

macro(date_month_sem(Month),
      [[special_np, date], [month, Month]]).      

macro(date_day_month_sem(Day, Month),
      [[special_np, date], [month, Month], [day, Day]]). 

macro(pp_np_p_sem(P, Np),
      [[P, Np]]).

macro(pp_clause_sc_sem(Clause, SC),
      [[SC, [[clause, Clause]]]]).

macro(n_sem([Type, Const]),
      Const).

macro(verb_sem([Type, Const]),
      [verb, Const]).
  