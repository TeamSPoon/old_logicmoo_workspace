package shef.nlp.supple.prolog.cafe;
import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;

/*
 * *** Please do not edit ! ***
 * @(#) PRED_write_chart_file_2.java
 * @procedure write_chart_file/2 in plcafe_supple_io.pl
 */

/*
 * @version Prolog Cafe 0.8 November 2003
 * @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 * @author Naoyuki Tamura    (tamura@kobe-u.ac.jp)
 */

public class PRED_write_chart_file_2 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("% chart file ");
    static SymbolTerm s2 = SymbolTerm.makeSymbol(" from ");
    static SymbolTerm s3 = SymbolTerm.makeSymbol(" - AUTOGENERATED, DO NOT EDIT");

    public Term arg1, arg2;

    public PRED_write_chart_file_2(Term a1, Term a2, Predicate cont) {
        arg1 = a1; 
        arg2 = a2; 
        this.cont = cont;
    }

    public PRED_write_chart_file_2(){}
    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0]; 
        arg2 = args[1]; 
        this.cont = cont;
    }

    public Predicate exec(Prolog engine) {
        engine.setB0();
        Term a1, a2, a3;
        Predicate p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13;
        a1 = arg1.dereference();
        a2 = arg2.dereference();

        a3 = new VariableTerm(engine);
        p1 = new PRED_tell_1(a3, cont);
        p2 = new PRED_told_0(p1);
        p3 = new PRED_write_newcharts_0(p2);
        p4 = new PRED_nl_0(p3);
        p5 = new PRED_nl_0(p4);
        p6 = new PRED_write_1(s3, p5);
        p7 = new PRED_write_1(a1, p6);
        p8 = new PRED_write_1(s2, p7);
        p9 = new PRED_write_1(a2, p8);
        p10 = new PRED_write_1(s1, p9);
        p11 = new PRED_tell_1(a2, p10);
        p12 = new PRED_told_0(p11);
        p13 = new PRED_tell_1(a2, p12);
        return new PRED_telling_1(a3, p13);
    }

    public int arity() { return 2; }

    public String toString() {
        return "write_chart_file(" + arg1 + ", " + arg2 + ")";
    }
}

