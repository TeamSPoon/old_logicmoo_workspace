/** <module> 
% This file contains the definitions for the objects in a household
% To create a new world, simply change the object definitions as
% described below (or in manual)
%
% *******Object definitions*******
%.
% Use the label_type_props(label,colcode,[property1,property2,etc.]]).
% label is whats used to refer to the object in the running world
% colcode is whats used to refer to the object for initialization (see world.pl)
% ===============================================================================================
%    by Mea_culpa
% ===============================================================================================
*/

:-decl_mpred_hybrid(pathBetween(region,dir,region)).
:-decl_mpred_hybrid(pathBetween(region,region),symmetric).
pathBetween(R1,R2):-pathBetween(R1,Dir,R2),nop(Dir).

:-decl_mpred_prolog(ensure_some_pathBetween/2).
ensure_some_pathBetween(R1,R2):- pathBetween(R1,_Dir,R2),!.
ensure_some_pathBetween(R1,R2):- random_instance(dir,Dir,atom_length(Dir,1)),not(pathBetween(R1,Dir,_)),reverse_dir(Dir,Rev),not(pathBetween(R2,Rev,_)),!,
   add(pathBetween(R1,Dir,R2)),add(pathBetween(R2,Rev,R1)),!.
ensure_some_pathBetween(R1,R2):- split_name_type(R2,_,Isa), any_to_string(Isa,Str), any_to_dir(Str,Dir),show_call(add(pathBetween(R1,Dir,R2))).

addPathBetweens:- forall(no_repeats(is_asserted(pathBetween(R1,R2))),must_det((ensure_some_pathBetween(R1,R2),ensure_some_pathBetween(R2,R1)))).

:-onEachLoad(addPathBetweens).



% ==================================================
% Classes of things
% ==================================================

subclass(candle,portable_device).
subclass(flashlight, portable_device).
subclass(desk, office_room_furnature).
subclass(apple, food).
subclass(nani, art).
subclass(nani, washable).
subclass(clothing, washable).
subclass(nani, portable).
subclass(broccoli, food).
subclass(food,eatable).
subclass(crackers, food).
subclass(envelope, office_item).
subclass(stamp, office_item).
subclass(key, office_item).
subclass(ball, throwable).

subclass(pajamas, clothing).
subclass(shirt, clothing).
subclass(coat, clothing).
subclass(pants, clothing).
subclass(clothing, foldable).
subclass(clothing, wearable).

subclass(coffee_cup, liquid_container).
subclass(coffee_cup, drinkable).
subclass(coffee_cup, throwable).
subclass(coffee, liquid).
subclass(book, readable).

subclass(pillow, bedding).
subclass(blanket, bedding).                                                              
subclass(bedding, foldable).
subclass(foldable, portable).
subclass(throwable, portable).
subclass(portable_device,portable).
subclass(device,useable).
subclass(wearable, portable).
subclass(portable,takeable).
subclass(food,takeable).
subclass(takeable,obj).
subclass(partof,not_takable).

subclass(light_switch, wall_furnature).
subclass(computer, office_furnature).
subclass(partof_furnature,partof).

subclass(bed, bed_room_furnature).
subclass(stand_table, bed_room_furnature).
subclass(dresser, bed_room_furnature).

subclass(washing_machine, device_furnature).
subclass(table, furnature).
subclass(table, hassurface).
subclass(sofa, living_room_furnature).
subclass(easy_chair, living_room_furnature).
subclass(coffee_table, living_room_furnature).
subclass(bookcase, wall_furnature).
subclass(drawer, container).
subclass(drawer, openable).
subclass(drawer, closeable).
subclass(drawer, partof_furnature).
subclass(top_drawer, partof_furnature).
subclass(middle_drawer, partof_furnature).
subclass(bottom_drawer, partof_furnature). 
subclass(houseplant, partof).
subclass(planter, container). 
subclass(gueridon, living_room_furnature).
subclass(garden_plant, outdoor_furnature).
subclass(spatialthing,lookable).
subclass(nani,teddybear).
subclass(teddybear,treasure).

subclass(bathtub,bath_room_furnature).
subclass(shower,bath_room_furnature).
subclass(toilet,bath_room_furnature).
subclass(sink,bath_room_furnature).
subclass(kitchen_sink,kitchen_furnature).
subclass(fridge,kitchen_furnature).
subclass(stove,kitchen_furnature).
subclass(kitchen_counter,kitchen_furnature).


% ==================================================
% default_type_props Descriptions
% ==================================================

default_type_props(candle,[color(blue),size(small),shape(triangular),material(wax),texture(sticky)]).
default_type_props(red_apple,[color(red),size(small),shape(round),isa(fruit),texture(smooth)]).
default_type_props(green_apple,[color(eachOf(green,pastel)),size(small),shape(round),isa(fruit),texture(smooth)]).
default_type_props(table,[color(eachOf(blue,white)),size(large),shape(oval),material(wood),texture(eachOf(bumpy,irregular)),weight(50)]).
default_type_props(pillow,[color(white),size(medium),shape(rectangular),material(eachOf(cotton,flannel)),texture(eachOf(fluffy,soft))]).
default_type_props(blanket,[color(eachOf(green,dark)),size(eachOf(large,bulky)),shape(rectangular),material(rayon),texture(eachOf(plush,soft))]).                                                              
default_type_props(stand_table,[color(eachOf(black,shiney)),size(medium),shape(eachOf(cubular,rectangular)),material(wood),texture(smooth),weight(25)]).
default_type_props(pajams,[color(eachOf(blue,pastel)),size(eachOf(medium,fits)),shape(unique),material(eachOf(cotton,rayon)),texture(soft)]).
default_type_props(shirt,[color(black),size(eachOf(medium,fits)),shape(like(shape,torso)),material(cotton),texture(eachOf(soft,threadbare))]).
default_type_props(flashlight,[color(yellow),size(eachOf(medium,small)),shape(cylindrical),material(plastic),texture(ribbed)]).
default_type_props(key,[color(silver),size(eachOf(small,tiny)),shape(unique),material(metal),texture(eachOf(ridged,bumpy))]).
default_type_props(envelope,[color(white),size(small),shape(rectangular),material(paper),texture(smooth)]).
default_type_props(desk,[color(eachOf(brown,shiney)),size(large),shape(eachOf(cubular,rectangular)),texture(eachOf(smooth,ridged)),weight(175)]).
default_type_props(washing_machine,[color(white),size(large),shape(eachOf(cubular,square)),material(metal),texture(smooth),weight(125)]).
default_type_props(broccoli,[color(green),size(small),shape(like(shape,tree)),isa(vegetable),texture(eachOf(porous,bumpy))]).                                                                    
default_type_props(crackers,[color(tan),isa(bread),shape(eachOf(circular,flat)),size(small),texture(eachOf(dry,coarse))]).
default_type_props(computer,[color(grey),material(plastic),shape(eachOf(cubular,rectangular)),size(medium),texture(smooth)]).
default_type_props(stamp,[color(polychromatic),size(eachOf(tiny,thin)),shape(square),material(paper),texture(eachOf(smooth,sticky))]).
default_type_props(coat,[color(black),size(eachOf(medium,fits)),shape(like(shape,torso)),material(eachOf(wool,cotton,rayon)),texture(coarse)]).
default_type_props(pants,[color(black),size(eachOf(medium,fits)),shape(like(shape,ass)),material(denim),texture(coarse)]).
default_type_props(nani,[color(brown),color(white),size(medium),shape(like(shape,teddybear)),material(plush),texture(eachOf(fuzzy,soft))]).
default_type_props(light_switch,[color(cream),size(small),shape(rectangular),material(plastic),texture(smooth)]).

default_type_props(ball,[color(red),size(medium),shape(spherical),material(rubber),texture(bumpy)]).
default_type_props(coffee,[color(eachOf(black,brown)),size(small),shape(fluid),material(liquid),texture(wet)]).
default_type_props(coffee_cup,[color(black),color(brown),size(small),shape(cuplike),material(glass),texture(smooth)]).
default_type_props(sofa,[color(eachOf(blue,dark)),size(eachOf(large,wide,long)),shape(polyhedral),material(eachOf(poplin,wood)),texture(ribbed),weight(125)]).
default_type_props(easy_chair,[color(blue),size(eachOf(large,narrow)),shape(polyhedral),material(eachOf(poplin,wood)),texture(ribbed),weight(75)]).
default_type_props(coffee_table,[color(eachOf(brown,shiney)),size(medium),shape(circular),material(wood),texture(smooth),weight(35)]).
default_type_props(book_type_a,[color(green),color(white),color(black),size(small),shape(eachOf(cubular,rectangular)),material(paper),texture(smooth)]).
default_type_props(book_type_b,[color(pink),color(white),color(black),size(small),shape(eachOf(cubular,rectangular)),material(paper),texture(smooth)]).
default_type_props(bookcase,[color(eachOf(brown,dark,shiney)),size(large),shape(eachOf(square,concave_polyhedron)),material(wood),texture(smooth),weight(60)]).
default_type_props(dresser,[color(eachOf(brown,shiney)),size(large),shape(eachOf(rectangular,polyhedral)),material(wood),texture(smooth),weight(45)]).
default_type_props(top_drawer,[color(eachOf(brown,shiney)),size(medium),shape(eachOf(rectangular,concave_polyhedron)),material(wood),texture(smooth)]). 
default_type_props(middle_drawer,[color(eachOf(brown,shiney)),size(medium),shape(eachOf(rectangular,concave_polyhedron)),material(wood),texture(smooth)]).
default_type_props(bottom_drawer,[color(eachOf(brown,shiney)),size(medium),shape(eachOf(rectangular,concave_polyhedron)),material(wood),texture(smooth)]).
default_type_props(planter,[color(eachOf(pastel,blue)),size(medium),shape(eachOf(cylindrical,trapezohedron)),material(clay),texture(abrasive),weight(15)]).
default_type_props(houseplant,[color(green),size(medium),shape(anthurium_crystallinum),material(plant_tissue),texture(smooth)]).
default_type_props(gueridon,[color(eachOf(brown,shiney)),size(medium),shape(circular),material(wood),texture(smooth),weight(25)]).		 

default_type_props(teddybear,[color(natural),shape(unique)]).
default_type_props(torso,[color(like(color,skin)),shape(unique)]).
default_type_props(skin,[color(unique),shape(unique)]).

