/** <module> 
% This file contains the definitions for the objects in a household
% To create a new world, simply change the object definitions as
% described below (or in manual)
%
% *******Object definitions*******
%.
% Use the label_type_props(label,colcode,[property1,property2,etc.]]).
% label is whats used to refer to the object in the running world
% colcode is whats used to refer to the object for initialization (see world.pl)
% ===============================================================================================
%    by Mea_culpa
% ===============================================================================================
*/

:-decl_mpred_hybrid(pathBetween(tRegion,vtDirection,tRegion)).
:-decl_mpred_hybrid(pathBetween(tRegion,tRegion),symmetric).
pathBetween(R1,R2):-pathBetween(R1,Dir,R2),nop(Dir).

:-decl_type(vtBasicDir).
vtBasicDir(vNorth).
vtBasicDir(vEast).
vtBasicDir(vSouth).
vtBasicDir(vWest).

:-decl_type(vtBasicDirPlusUpDown).
vtBasicDirPlusUpDown(X):-vtBasicDir(X).
vtBasicDirPlusUpDown(vUp).
vtBasicDirPlusUpDown(vDown).	


:-decl_mpred_prolog(ensure_some_pathBetween/2).
ensure_some_pathBetween(R1,R2):- pathBetween(R1,_,R2),!.
ensure_some_pathBetween(R1,R2):- pathBetween(R2,_,R1),!.
ensure_some_pathBetween(R1,R2):- 
   random_instance(vtBasicDir,Dir,true),not(pathBetween(R1,Dir,_)),reverse_dir(Dir,Rev),not(pathBetween(R2,Rev,_)),!,
   must((add(pathBetween(R1,Dir,R2)),add(pathBetween(R2,Rev,R1)))),!.
ensure_some_pathBetween(R1,R2):- 
   random_instance(vtBasicDirPlusUpDown,Dir,true),not(pathBetween(R1,Dir,_)),reverse_dir(Dir,Rev),not(pathBetween(R2,Rev,_)),!,
   must((add(pathBetween(R1,Dir,R2)),add(pathBetween(R2,Rev,R1)))),!.
ensure_some_pathBetween(R1,R2):- 
   random_instance(vtDirection,Dir,true),not(pathBetween(R1,Dir,_)),reverse_dir(Dir,Rev),not(pathBetween(R2,Rev,_)),!,
   must((add(pathBetween(R1,Dir,R2)),add(pathBetween(R2,Rev,R1)))),!.

ensure_some_pathBetween:- forall(no_repeats(is_asserted(pathBetween(R1,R2))),show_call_failure((ensure_some_pathBetween(R1,R2),ensure_some_pathBetween(R2,R1)))).

:-onEachLoad(ensure_some_pathBetween).



% ==================================================
% Classes of things
% ==================================================

mudSubclass(tAgentGeneric,tObj).
mudSubclass(tItem,tObj).

mudSubclass(tCandle,tPortableDevice).
mudSubclass(tFlashlight, tPortableDevice).
mudSubclass(tDesk, tOfficeRoomFurnature).
mudSubclass(tApple, tFood).
mudSubclass(tNani, tArt).
mudSubclass(tNani, tWashable).
mudSubclass(tClothing, tWashable).
mudSubclass(tNani, tPortable).
mudSubclass(tBroccoli, tFood).
mudSubclass(tFood,tEatable).
mudSubclass(tCrackers, tFood).
mudSubclass(tEnvelope, tOfficeItem).
mudSubclass(tStamp, tOfficeItem).
mudSubclass(tKey, tOfficeItem).
mudSubclass(tBall, tThrowable).

mudSubclass(tPajamas, tClothing).
mudSubclass(tShirt, tClothing).
mudSubclass(tCoat, tClothing).
mudSubclass(tPants, tClothing).
mudSubclass(tClothing, tFoldable).
mudSubclass(tClothing, tWearable).

mudSubclass(tCoffeeCup, tLiquidContainer).
mudSubclass(tCoffeeCup, tDrinkable).
mudSubclass(tCoffeeCup, tThrowable).
mudSubclass(tCoffee, tLiquid).
mudSubclass(tBook, tReadable).

mudSubclass(tPillow, tBedding).
mudSubclass(tBlanket, tBedding).                                                              
mudSubclass(tBedding, tFoldable).
mudSubclass(tFoldable, tPortable).
mudSubclass(tThrowable, tPortable).
mudSubclass(tPortableDevice,tPortable).
mudSubclass(tPortableDevice,tPhysicalDevice).
mudSubclass(tPhysicalDevice,tUseable).
mudSubclass(tWearable, tPortable).
mudSubclass(tPortable,tTakeable).
mudSubclass(tFood,tTakeable).
mudSubclass(tTakeable,tObj).
mudSubclass(tPartof,tNotTakable).

mudSubclass(tLightSwitch, tWallFurnature).
mudSubclass(tComputer, tOfficeFurnature).
mudSubclass(tPartofFurnature,tPartof).

mudSubclass(tBed, tBedRoomFurnature).
mudSubclass(tStandTable, tBedRoomFurnature).
mudSubclass(tDresser, tBedRoomFurnature).

mudSubclass(tWashingMachine, tDeviceFurnature).
mudSubclass(tTable, tFurnature).
mudSubclass(tTable, tHasSurface).
mudSubclass(tSofa, tLivingRoomFurnature).
mudSubclass(tEasyChair, tLivingRoomFurnature).
mudSubclass(tCoffeeTable, tLivingRoomFurnature).
mudSubclass(tBookcase, tWallFurnature).
mudSubclass(tDrawer, tContainer).
mudSubclass(tDrawer, tOpenable).
mudSubclass(tDrawer, tCloseable).
mudSubclass(tDrawer, tPartofFurnature).
mudSubclass(tTopDrawer, tPartofFurnature).
mudSubclass(tMiddleDrawer, tPartofFurnature).
mudSubclass(tBottomDrawer, tPartofFurnature). 
mudSubclass(tHouseplant, tPartof).
mudSubclass(tPlanter, tContainer). 
mudSubclass(tGueridon, tLivingRoomFurnature).
mudSubclass(tGardenPlant, tOutdoorFurnature).
mudSubclass(tSpatialthing,tLookable).
mudSubclass(tNani,tTeddybear).
mudSubclass(tTeddybear,tTreasure).

mudSubclass(tBathtub,tBathRoomFurnature).
mudSubclass(tShower,tBathRoomFurnature).
mudSubclass(tToilet,tBathRoomFurnature).
mudSubclass(tSink,tBathRoomFurnature).
mudSubclass(tKitchenSink,tKitchenFurnature).
mudSubclass(tFridge,tKitchenFurnature).
mudSubclass(tStove,tKitchenFurnature).
mudSubclass(tKitchenCounter,tKitchenFurnature).


% ==================================================
% default_type_props Descriptions
% ==================================================

default_type_props(tCandle,[mudColor(vBlue),mudSize(vSmall),mudShape(vTriangular),mudMaterial(vWax),mudTexture(vSticky)]).
default_type_props(tRedApple,[mudColor(vRed),mudSize(vSmall),mudShape(vRound),mudIsa(tFruit),mudTexture(vSmooth)]).
default_type_props(tGreenApple,[mudColor(isEach(vGreen,vPastel)),mudSize(vSmall),mudShape(vRound),mudIsa(tFruit),mudTexture(vSmooth)]).
default_type_props(tTable,[mudColor(isEach(vBlue,vWhite)),mudSize(vLarge),mudShape(vOval),mudMaterial(vWood),mudTexture(isEach(vBumpy,vIrregular)),mudWeight(50)]).
default_type_props(tPillow,[mudColor(vWhite),mudSize(vMedium),mudShape(vRectangular),mudMaterial(isEach(vCotton,vFlannel)),mudTexture(isEach(vFluffy,vSoft))]).
default_type_props(tBlanket,[mudColor(isEach(vGreen,vDark)),mudSize(isEach(vLarge,vBulky)),mudShape(vRectangular),mudMaterial(vRayon),mudTexture(isEach(vPlush,vSoft))]).                                                              
default_type_props(tStandTable,[mudColor(isEach(vBlack,vShiney)),mudSize(vMedium),mudShape(isEach(vCubular,vRectangular)),mudMaterial(vWood),mudTexture(vSmooth),mudWeight(25)]).
default_type_props(tPajams,[mudColor(isEach(vBlue,vPastel)),mudSize(isEach(vMedium,vFits)),mudShape(vUnique),mudMaterial(isEach(vCotton,vRayon)),mudTexture(vSoft)]).
default_type_props(tShirt,[mudColor(vBlack),mudSize(isEach(vMedium,vFits)),mudShape(isLike(mudShape,tTorso)),mudMaterial(vCotton),mudTexture(isEach(vSoft,vThreadbare))]).
default_type_props(tFlashlight,[mudColor(vYellow),mudSize(isEach(vMedium,vSmall)),mudShape(vCylindrical),mudMaterial(vPlastic),mudTexture(vRibbed)]).
default_type_props(tKey,[mudColor(vSilver),mudSize(isEach(vSmall,vTiny)),mudShape(vUnique),mudMaterial(vMetal),mudTexture(isEach(vRidged,vBumpy))]).
default_type_props(tEnvelope,[mudColor(vWhite),mudSize(vSmall),mudShape(vRectangular),mudMaterial(vPaper),mudTexture(vSmooth)]).
default_type_props(tDesk,[mudColor(isEach(vBrown,vShiney)),mudSize(vLarge),mudShape(isEach(vCubular,vRectangular)),mudTexture(isEach(vSmooth,vRidged)),mudWeight(175)]).
default_type_props(tWashingMachine,[mudColor(vWhite),mudSize(vLarge),mudShape(isEach(vCubular,vSquare)),mudMaterial(vMetal),mudTexture(vSmooth),mudWeight(125)]).
default_type_props(tBroccoli,[mudColor(vGreen),mudSize(vSmall),mudShape(isLike(mudShape,tTree)),mudIsa(vegetable),mudTexture(isEach(vPorous,vBumpy))]).                                                                    
default_type_props(tCrackers,[mudColor(vTan),mudIsa(tBread),mudShape(isEach(vCircular,vFlat)),mudSize(vSmall),mudTexture(isEach(vDry,vCoarse))]).
default_type_props(tComputer,[mudColor(vGrey),mudMaterial(vPlastic),mudShape(isEach(vCubular,vRectangular)),mudSize(vMedium),mudTexture(vSmooth)]).
default_type_props(tStamp,[mudColor(vPolychromatic),mudSize(isEach(vTiny,thin)),mudShape(vSquare),mudMaterial(vPaper),mudTexture(isEach(vSmooth,vSticky))]).
default_type_props(tCoat,[mudColor(vBlack),mudSize(isEach(vMedium,vFits)),mudShape(isLike(mudShape,tTorso)),mudMaterial(isEach(vWool,vCotton,vRayon)),mudTexture(vCoarse)]).
default_type_props(tPants,[mudColor(vBlack),mudSize(isEach(vMedium,vFits)),mudShape(isLike(mudShape,tAss)),mudMaterial(vDenim),mudTexture(vCoarse)]).
default_type_props(tNani,[mudColor(vBrown),mudColor(vWhite),mudSize(vMedium),mudShape(isLike(mudShape,tTeddybear)),mudMaterial(vPlush),mudTexture(isEach(vFuzzy,vSoft))]).
default_type_props(tLightSwitch,[mudColor(vCream),mudSize(vSmall),mudShape(vRectangular),mudMaterial(vPlastic),mudTexture(vSmooth)]).

default_type_props(tBall,[mudColor(vRed),mudSize(vMedium),mudShape(vSpherical),mudMaterial(vRubber),mudTexture(vBumpy)]).
default_type_props(tCoffee,[mudColor(isEach(vBlack,vBrown)),mudSize(vSmall),mudShape(vFluid),mudMaterial(tLiquid),mudTexture(vWet)]).
default_type_props(tCoffeeCup,[mudColor(vBlack),mudColor(vBrown),mudSize(vSmall),mudShape(vCuplike),mudMaterial(vGlass),mudTexture(vSmooth)]).
default_type_props(tSofa,[mudColor(isEach(vBlue,vDark)),mudSize(isEach(vLarge,vWide,vLong)),mudShape(vPolyhedral),mudMaterial(isEach(vPoplin,vWood)),mudTexture(vRibbed),mudWeight(125)]).
default_type_props(tEasyChair,[mudColor(vBlue),mudSize(isEach(vLarge,vNarrow)),mudShape(vPolyhedral),mudMaterial(isEach(vPoplin,vWood)),mudTexture(vRibbed),mudWeight(75)]).
default_type_props(tCoffeeTable,[mudColor(isEach(vBrown,vShiney)),mudSize(vMedium),mudShape(vCircular),mudMaterial(vWood),mudTexture(vSmooth),mudWeight(35)]).
default_type_props(tBookTypeA,[mudColor(vGreen),mudColor(vWhite),mudColor(vBlack),mudSize(vSmall),mudShape(isEach(vCubular,vRectangular)),mudMaterial(vPaper),mudTexture(vSmooth)]).
default_type_props(tPinkBook,[mudColor(vPink),mudColor(vWhite),mudColor(vBlack),mudSize(vSmall),mudShape(isEach(vCubular,vRectangular)),mudMaterial(vPaper),mudTexture(vSmooth)]).
default_type_props(tBookcase,[mudColor(isEach(vBrown,vDark,vShiney)),mudSize(vLarge),mudShape(isEach(vSquare,vConcavePolyhedron)),mudMaterial(vWood),mudTexture(vSmooth),mudWeight(60)]).
default_type_props(tDresser,[mudColor(isEach(vBrown,vShiney)),mudSize(vLarge),mudShape(isEach(vRectangular,vPolyhedral)),mudMaterial(vWood),mudTexture(vSmooth),mudWeight(45)]).
default_type_props(tTopDrawer,[mudColor(isEach(vBrown,vShiney)),mudSize(vMedium),mudShape(isEach(vRectangular,vConcavePolyhedron)),mudMaterial(vWood),mudTexture(vSmooth)]). 
default_type_props(tMiddleDrawer,[mudColor(isEach(vBrown,vShiney)),mudSize(vMedium),mudShape(isEach(vRectangular,vConcavePolyhedron)),mudMaterial(vWood),mudTexture(vSmooth)]).
default_type_props(tBottomDrawer,[mudColor(isEach(vBrown,vShiney)),mudSize(vMedium),mudShape(isEach(vRectangular,vConcavePolyhedron)),mudMaterial(vWood),mudTexture(vSmooth)]).
default_type_props(tPlanter,[mudColor(isEach(vPastel,vBlue)),mudSize(vMedium),mudShape(isEach(vCylindrical,vTrapezohedron)),mudMaterial(vClay),mudTexture(vAbrasive),mudWeight(15)]).
default_type_props(tHouseplant,[mudColor(vGreen),mudSize(vMedium),mudShape(vAnthuriumCrystallinum),mudMaterial(vPlantTissue),mudTexture(vSmooth)]).
default_type_props(tGueridon,[mudColor(isEach(vBrown,vShiney)),mudSize(vMedium),mudShape(vCircular),mudMaterial(vWood),mudTexture(vSmooth),mudWeight(25)]).		 

default_type_props(tTeddybear,[mudColor(vNatural),mudShape(vUnique)]).
default_type_props(tTorso,[mudColor(isLike(mudColor,tSkin)),mudShape(vUnique)]).
default_type_props(tSkin,[mudColor(vUnique),mudShape(vUnique)]).
